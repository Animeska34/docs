{
  "Manual/Animeska34.Essentials.html": {
    "href": "Manual/Animeska34.Essentials.html",
    "title": "| Animeska34 Docs",
    "keywords": "TEST MD"
  },
  "Manual/Animeska34.InventorySystem.html": {
    "href": "Manual/Animeska34.InventorySystem.html",
    "title": "Inventory System | Animeska34 Docs",
    "keywords": "Inventory System API Reference Basic inventory system which allows to store items. Compatible with Save System. Getting Started Add InventoryManager to a scene. Note InventoryManager is a singleton class which is required for InventorySystem to operate 2. Create Item object from asset menu. 3. Set Item name Warning Item name must be unique. 4. Create ItemData from asset manu, and fill visualName, description, sprite and itemObject visualName - is name which displays to player description - is description of item sprite - is a item icon which will be displayed to player itemObjecct - is object, which will be instantiated, by calling Item.Instantiate(). Can be any prefab with ItemObject compoonent. Create ItemLibrary from asset menu Add created Item to created ItemLibrary. Add Inventory to your game object. Inventory Operations Put item to inventory: //Get inventory component from gameobject Inventory inventory = GetComponent<Inventory>(); //Put one item named \"item\" to inventory inventory.Put(\"item\"); //Put 10 \"stackable\" items to inventory: inventory.Put(\"stackable\", 10); //Put custom item to inventory //Get instance of item from \"InventoryManager\" and cast to item type Stackable item = (Stackable) InventoryManager.instance[\"itemName\"]; //Modify item properties item.SetQuantity(10); //Put item to inventory inventory.Put(item); Warning Inventory.Put(name, quantity) can only be used with StackabeItem type items. If you want to put few non-stackable items to inventory, use Inventory.PutMultiple(name, quantity) Warning Item which was put to Inventory is managed by that inventory. So do not call Destroy() on that item. Take item from inventory: //Get inventory component from gameobject Inventory inventory = GetComponent<Inventory>(); //Take one item named \"item\" from inventory inventory.Take(\"item\"); //Put 10 \"stackable\" items from inventory: inventory.Take(\"stackable\", 10); Warning Inventory.Take(name, quantity) can only be used with StackabeItem type items. Warning Item, taken from Inventory is no more managed by it. So should be destroyed manualy by calling Destroy(item) if it is not required any more. Remove item from inventory: //Get inventory component from gameobject Inventory inventory = GetComponent<Inventory>(); //Remove item named \"itemName\" from inventory inventory.Remove(\"itemName\"); //Remove 10 item named \"stackable\" from inventory inventory.Remove(\"stackable\", 10) Warning Inventory.Remove(name, quantity) can only be used with StackabeItem type items. Caution Item is ScriptableObject type, so is unmanaged. Do not forget to call Destroy() on item, which is not required anymore if it is not assigned to any inventory. Note Inventory automatically manages all items assigned to it. So there is no need to destroy items which is assigned to Inventory Create item at scene: //Get inventory component from gameobject Inventory inventory = GetComponent<Inventory>(); //Take item from inventory Item item = inventory.Take(\"itemName\"); //Instantiate it at scene item.Instantiate(); Warning Instantiated that way can be only item which has itemObject property assigned in ItemData. Creating custom item type Custom item type can be created by inheriting Item class. For example: //Create custom basic item type: public class MyCustomItem : Item { public int myCustomSerializableVariable = 5; } Note Besides inheriting Item type, also Stackable and Durable types can be inherited creating custom item. Serialization Inventory uses XML serialization. It works same way as Unity's 'JsonUtility': Automatically serializes all public variables. Note Private variables can be serialized by marking them with [SerializeField] attribute. Note Public and marked with [SerializeField] attribute variables can be ignored by marking with [XmlIgnore] attribute. Note Class can be serialized only if it marked with [System.Serializable] attribute"
  },
  "Manual/getting-started.html": {
    "href": "Manual/getting-started.html",
    "title": "Getting Started | Animeska34 Docs",
    "keywords": "Getting Started"
  },
  "Manual/introduction.html": {
    "href": "Manual/introduction.html",
    "title": "Introduction | Animeska34 Docs",
    "keywords": "Introduction"
  },
  "ScriptReference/Animeska34.AnimeTools.AnimeAction.html": {
    "href": "ScriptReference/Animeska34.AnimeTools.AnimeAction.html",
    "title": "Class AnimeAction | Animeska34 Docs",
    "keywords": "Class AnimeAction Namespace Animeska34.AnimeTools Assembly Animeska34.AnimeTools.dll [Serializable] public class AnimeAction : IAnimeAction Inheritance object AnimeAction Implements IAnimeAction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AnimeAction(string, UnityEvent) Initializes a new instance of the AnimeAction class with the specified name and UnityEvent. public AnimeAction(string name, UnityEvent events) Parameters name string The name of the anime action. events UnityEvent The UnityEvent associated with the anime action. Fields executeOnce Determines whether the anime action should be executed only once. public bool executeOnce Field Value bool Properties enabled Gets or sets a value indicating whether the anime action is enabled or not. public bool enabled { get; set; } Property Value bool events The UnityEvent associated with this anime action. Use this property to assign events that should be triggered by the action. public UnityEvent events { get; } Property Value UnityEvent executed Gets a value indicating whether the anime action has been executed. public bool executed { get; } Property Value bool name Gets or sets the name of the anime action. public string name { get; set; } Property Value string Methods Execute() Executes the anime action. public void Execute() Reset() Resets the anime action to its initial state. public void Reset()"
  },
  "ScriptReference/Animeska34.AnimeTools.AnimeActions.html": {
    "href": "ScriptReference/Animeska34.AnimeTools.AnimeActions.html",
    "title": "Class AnimeActions | Animeska34 Docs",
    "keywords": "Class AnimeActions Namespace Animeska34.AnimeTools Assembly Animeska34.AnimeTools.dll Represents a MonoBehaviour class that implements the IAnimeActions interface and holds a collection of anime actions. public class AnimeActions : MonoBehaviour, IAnimeActions Inheritance object Object Component Behaviour MonoBehaviour AnimeActions Implements IAnimeActions Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties this[int] Gets the AnimeAction at the specified position in the collection. public AnimeAction this[int position] { get; } Parameters position int The position of the desired anime action. Property Value AnimeAction The AnimeAction at the specified position. this[string] Gets the AnimeAction with the specified name from the collection. public AnimeAction this[string name] { get; } Parameters name string The name of the desired anime action. Property Value AnimeAction The AnimeAction with the specified name. actions public List<AnimeAction> actions { get; } Property Value List<AnimeAction> Represents a MonoBehaviour class that implements the IAnimeActions interface and holds a collection of anime actions. count Gets the number of anime actions in the collection. public int count { get; } Property Value int Represents a MonoBehaviour class that implements the IAnimeActions interface and holds a collection of anime actions. Methods Add(AnimeAction) Adds the specified anime action to the collection. public void Add(AnimeAction action) Parameters action AnimeAction The anime action to add to the collection. Execute(string) Executes the anime action with the specified name from the collection. public void Execute(string name) Parameters name string The name of the anime action to be executed. ExecuteAt(int) Executes the anime action at the specified position in the collection. public void ExecuteAt(int position) Parameters position int The position of the anime action to be executed. Get(string) Gets the AnimeAction with the specified name from the collection. public AnimeAction Get(string name) Parameters name string The name of the desired anime action. Returns AnimeAction The AnimeAction with the specified name, or null if not found. GetAt(int) Gets the AnimeAction at the specified position in the collection. public AnimeAction GetAt(int position) Parameters position int The position of the desired anime action. Returns AnimeAction The AnimeAction at the specified position, or null if not found. Remove(string) Removes the anime action with the specified name from the collection. public void Remove(string name) Parameters name string The name of the anime action to be removed. RemoveAll() Removes all anime actions from the collection. public void RemoveAll() RemoveAt(int) Removes the anime action at the specified position in the collection. public void RemoveAt(int pos) Parameters pos int Represents a MonoBehaviour class that implements the IAnimeActions interface and holds a collection of anime actions. Set(string, UnityEvent) Sets the UnityEvent for the anime action with the specified name in the collection. If the anime action does not exist, a new one with the specified name is created. public void Set(string name, UnityEvent events) Parameters name string The name of the anime action. events UnityEvent The UnityEvent to set for the anime action."
  },
  "ScriptReference/Animeska34.AnimeTools.AnimeText.html": {
    "href": "ScriptReference/Animeska34.AnimeTools.AnimeText.html",
    "title": "Class AnimeText | Animeska34 Docs",
    "keywords": "Class AnimeText Namespace Animeska34.AnimeTools Assembly Animeska34.AnimeTools.dll Animated text printing letter by letter with custom time interval. public class AnimeText : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AnimeText Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields richText Handle Rich Text tags when printing text. public bool richText Field Value bool Animated text printing letter by letter with custom time interval. speed The speed at which the text is printed, measured in seconds per character. [Range(0, 0.2)] public float speed Field Value float Animated text printing letter by letter with custom time interval. Properties normalized Normalized progress of text printing. Returns 0 if the text is empty. public float normalized { get; } Property Value float Animated text printing letter by letter with custom time interval. position The current position in the text. Represents the index of the character being printed. public int position { get; } Property Value int Animated text printing letter by letter with custom time interval. text Gets or sets the text to be animated. public string text { get; set; } Property Value string Animated text printing letter by letter with custom time interval. writing Gets whether the text is currently in the process of being printed. public bool writing { get; } Property Value bool Animated text printing letter by letter with custom time interval."
  },
  "ScriptReference/Animeska34.AnimeTools.AnimeTimedAction.html": {
    "href": "ScriptReference/Animeska34.AnimeTools.AnimeTimedAction.html",
    "title": "Class AnimeTimedAction | Animeska34 Docs",
    "keywords": "Class AnimeTimedAction Namespace Animeska34.AnimeTools Assembly Animeska34.AnimeTools.dll Represents an anime action that is invoked after a specified time and can repeat. [Serializable] public class AnimeTimedAction : IAnimeAction Inheritance object AnimeTimedAction Implements IAnimeAction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AnimeTimedAction() public AnimeTimedAction() AnimeTimedAction(string, float, UnityEvent, bool, bool, float) public AnimeTimedAction(string n, float t, UnityEvent e, bool r = true, bool rp = false, float re = 0) Parameters n string Represents an anime action that is invoked after a specified time and can repeat. t float Represents an anime action that is invoked after a specified time and can repeat. e UnityEvent Represents an anime action that is invoked after a specified time and can repeat. r bool Represents an anime action that is invoked after a specified time and can repeat. rp bool Represents an anime action that is invoked after a specified time and can repeat. re float Represents an anime action that is invoked after a specified time and can repeat. Fields repeat public bool repeat Field Value bool Represents an anime action that is invoked after a specified time and can repeat. repeatEvery public float repeatEvery Field Value float Represents an anime action that is invoked after a specified time and can repeat. time The time delay in seconds before the associated action is invoked. public float time Field Value float Represents an anime action that is invoked after a specified time and can repeat. Properties enabled Gets or sets a value indicating whether the anime action is enabled or not. public bool enabled { get; set; } Property Value bool Represents an anime action that is invoked after a specified time and can repeat. events The UnityEvent associated with this anime action. Use this property to assign events that should be triggered by the action. public UnityEvent events { get; } Property Value UnityEvent Represents an anime action that is invoked after a specified time and can repeat. name Gets or sets the name of the anime action. public string name { get; set; } Property Value string Represents an anime action that is invoked after a specified time and can repeat. Methods Execute() Executes the anime action. public void Execute() Reset() Resets the anime action to its initial state. public void Reset() Start() public void Start() Update() public void Update()"
  },
  "ScriptReference/Animeska34.AnimeTools.AnimeTimedActions.html": {
    "href": "ScriptReference/Animeska34.AnimeTools.AnimeTimedActions.html",
    "title": "Class AnimeTimedActions | Animeska34 Docs",
    "keywords": "Class AnimeTimedActions Namespace Animeska34.AnimeTools Assembly Animeska34.AnimeTools.dll Represents a MonoBehaviour class that implements the IAnimeActions interface specifically for timed actions. public class AnimeTimedActions : MonoBehaviour, IAnimeActions Inheritance object Object Component Behaviour MonoBehaviour AnimeTimedActions Implements IAnimeActions Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties this[int] Gets the AnimeTimedAction at the specified position in the collection of timed actions. public AnimeTimedAction this[int pos] { get; } Parameters pos int The position of the desired timed action. Property Value AnimeTimedAction The AnimeTimedAction at the specified position, or null if not found. this[string] Gets the AnimeTimedAction with the specified name from the collection of timed actions. public AnimeTimedAction this[string name] { get; } Parameters name string The name of the desired timed action. Property Value AnimeTimedAction The AnimeTimedAction with the specified name, or null if not found. actions Gets the list of timed actions associated with this component. public List<AnimeTimedAction> actions { get; } Property Value List<AnimeTimedAction> Represents a MonoBehaviour class that implements the IAnimeActions interface specifically for timed actions. count Gets the number of anime actions in the collection. public int count { get; } Property Value int Represents a MonoBehaviour class that implements the IAnimeActions interface specifically for timed actions. Methods Add(AnimeTimedAction) Adds the specified timed action to the collection of timed actions. public void Add(AnimeTimedAction timedAction) Parameters timedAction AnimeTimedAction The timed action to add to the collection. Execute(string) Executes the anime action with the specified name from the collection. public void Execute(string name) Parameters name string The name of the anime action to be executed. ExecuteAt(int) Executes the anime action at the specified position in the collection. public void ExecuteAt(int position) Parameters position int The position of the anime action to be executed. Get(AnimeTimedAction) Gets the AnimeTimedAction with the specified name from the collection of timed actions. public AnimeTimedAction Get(AnimeTimedAction name) Parameters name AnimeTimedAction The timed action to search for in the collection. Returns AnimeTimedAction The AnimeTimedAction with the specified name, or null if not found. Get(string) Gets the AnimeTimedAction with the specified name from the collection of timed actions. public AnimeTimedAction Get(string name) Parameters name string The name of the desired timed action. Returns AnimeTimedAction The AnimeTimedAction with the specified name, or null if not found. GetAt(int) Gets the AnimeTimedAction at the specified position in the collection of timed actions. public AnimeTimedAction GetAt(int position) Parameters position int The position of the desired timed action. Returns AnimeTimedAction The AnimeTimedAction at the specified position, or null if not found. Remove(AnimeTimedAction) public void Remove(AnimeTimedAction action) Parameters action AnimeTimedAction Represents a MonoBehaviour class that implements the IAnimeActions interface specifically for timed actions. Remove(string) Removes the anime action with the specified name from the collection. public void Remove(string name) Parameters name string The name of the anime action to be removed. RemoveAll() Removes all anime actions from the collection. public void RemoveAll() RemoveAt(int) Removes the anime action at the specified position in the collection. public void RemoveAt(int pos) Parameters pos int Represents a MonoBehaviour class that implements the IAnimeActions interface specifically for timed actions."
  },
  "ScriptReference/Animeska34.AnimeTools.AutoDestroy.html": {
    "href": "ScriptReference/Animeska34.AnimeTools.AutoDestroy.html",
    "title": "Class AutoDestroy | Animeska34 Docs",
    "keywords": "Class AutoDestroy Namespace Animeska34.AnimeTools Assembly Animeska34.AnimeTools.dll MonoBehaviour class for automatically destroying the GameObject after a specified delay. public class AutoDestroy : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AutoDestroy Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields delay The delay in seconds before the GameObject is automatically destroyed. public float delay Field Value float MonoBehaviour class for automatically destroying the GameObject after a specified delay."
  },
  "ScriptReference/Animeska34.AnimeTools.CameraPosition.html": {
    "href": "ScriptReference/Animeska34.AnimeTools.CameraPosition.html",
    "title": "Class CameraPosition | Animeska34 Docs",
    "keywords": "Class CameraPosition Namespace Animeska34.AnimeTools Assembly Animeska34.AnimeTools.dll public class CameraPosition : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CameraPosition Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "ScriptReference/Animeska34.AnimeTools.CameraSystem.html": {
    "href": "ScriptReference/Animeska34.AnimeTools.CameraSystem.html",
    "title": "Class CameraSystem | Animeska34 Docs",
    "keywords": "Class CameraSystem Namespace Animeska34.AnimeTools Assembly Animeska34.AnimeTools.dll public class CameraSystem : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CameraSystem Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields cameraPositions public List<GameObject> cameraPositions Field Value List<GameObject> Properties camera public Camera camera { get; } Property Value Camera currentPosition public int currentPosition { get; } Property Value int instance public static CameraSystem instance { get; } Property Value CameraSystem Methods Next() public void Next() Previous() public void Previous() Register(GameObject) public void Register(GameObject position) Parameters position GameObject RegisterAt(int, GameObject) public void RegisterAt(int id, GameObject position) Parameters id int position GameObject SetCamera(int) public void SetCamera(int id) Parameters id int SetCamera(string) public void SetCamera(string name) Parameters name string SetCamera(Transform) public void SetCamera(Transform gameObject) Parameters gameObject Transform Unregister(GameObject) public void Unregister(GameObject position) Parameters position GameObject"
  },
  "ScriptReference/Animeska34.AnimeTools.ConstantTransformation.html": {
    "href": "ScriptReference/Animeska34.AnimeTools.ConstantTransformation.html",
    "title": "Class ConstantTransformation | Animeska34 Docs",
    "keywords": "Class ConstantTransformation Namespace Animeska34.AnimeTools Assembly Animeska34.AnimeTools.dll MonoBehaviour class for applying constant transformation to the GameObject. public class ConstantTransformation : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ConstantTransformation Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields move Determines whether the GameObject should move. public bool move Field Value bool MonoBehaviour class for applying constant transformation to the GameObject. rotate Determines whether the GameObject should rotate. public bool rotate Field Value bool MonoBehaviour class for applying constant transformation to the GameObject. rotationVelocity The angular velocity of the GameObject's rotation. public Vector3 rotationVelocity Field Value Vector3 MonoBehaviour class for applying constant transformation to the GameObject. velocity The velocity of the GameObject's movement. public Vector3 velocity Field Value Vector3 MonoBehaviour class for applying constant transformation to the GameObject."
  },
  "ScriptReference/Animeska34.AnimeTools.Editor.CameraSystemEditor.html": {
    "href": "ScriptReference/Animeska34.AnimeTools.Editor.CameraSystemEditor.html",
    "title": "Class CameraSystemEditor | Animeska34 Docs",
    "keywords": "Class CameraSystemEditor Namespace Animeska34.AnimeTools.Editor Assembly Animeska34.AnimeTools.Editor.dll [CustomEditor(typeof(CameraSystem))] public class CameraSystemEditor : Editor Inheritance object Object ScriptableObject Editor CameraSystemEditor Inherited Members Editor.SaveChanges() Editor.DiscardChanges() Editor.CreateEditorWithContext(Object[], Object, Type) Editor.CreateEditorWithContext(Object[], Object) Editor.CreateCachedEditorWithContext(Object, Object, Type, ref Editor) Editor.CreateCachedEditorWithContext(Object[], Object, Type, ref Editor) Editor.CreateCachedEditor(Object, Type, ref Editor) Editor.CreateCachedEditor(Object[], Type, ref Editor) Editor.CreateEditor(Object) Editor.CreateEditor(Object, Type) Editor.CreateEditor(Object[]) Editor.CreateEditor(Object[], Type) Editor.DrawPropertiesExcluding(SerializedObject, params string[]) Editor.DrawDefaultInspector() Editor.Repaint() Editor.CreateInspectorGUI() Editor.RequiresConstantRepaint() Editor.DrawHeader() Editor.OnHeaderGUI() Editor.ShouldHideOpenButton() Editor.DrawFoldoutInspector(Object, ref Editor) Editor.HasPreviewGUI() Editor.GetPreviewTitle() Editor.RenderStaticPreview(string, Object[], int, int) Editor.OnPreviewGUI(Rect, GUIStyle) Editor.OnInteractivePreviewGUI(Rect, GUIStyle) Editor.OnPreviewSettings() Editor.GetInfoString() Editor.DrawPreview(Rect) Editor.ReloadPreviewInstances() Editor.UseDefaultMargins() Editor.MoveNextTarget() Editor.ResetTarget() Editor.hasUnsavedChanges Editor.saveChangesMessage Editor.target Editor.targets Editor.serializedObject Editor.finishedDefaultHeaderGUI ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods OnEnable() public void OnEnable() OnInspectorGUI() Implement this function to make a custom inspector. public override void OnInspectorGUI()"
  },
  "ScriptReference/Animeska34.AnimeTools.Editor.html": {
    "href": "ScriptReference/Animeska34.AnimeTools.Editor.html",
    "title": "Namespace Animeska34.AnimeTools.Editor | Animeska34 Docs",
    "keywords": "Namespace Animeska34.AnimeTools.Editor Classes CameraSystemEditor"
  },
  "ScriptReference/Animeska34.AnimeTools.Events.VideoPlayerEvents.html": {
    "href": "ScriptReference/Animeska34.AnimeTools.Events.VideoPlayerEvents.html",
    "title": "Class VideoPlayerEvents | Animeska34 Docs",
    "keywords": "Class VideoPlayerEvents Namespace Animeska34.AnimeTools.Events Assembly Animeska34.AnimeTools.dll Represents a MonoBehaviour class for handling events related to a video player. [RequireComponent(typeof(VideoPlayer))] [AddComponentMenu(\"Animeska34/Anime Tools/Events/VideoPlayer Events\")] public class VideoPlayerEvents : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour VideoPlayerEvents Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields loopPointReached UnityEvent triggered when the loop point of the video is reached. public UnityEvent loopPointReached Field Value UnityEvent Represents a MonoBehaviour class for handling events related to a video player. prepareCompleted UnityEvent triggered when the video playback is started. public UnityEvent prepareCompleted Field Value UnityEvent Represents a MonoBehaviour class for handling events related to a video player. started UnityEvent triggered when the video playback is started. public UnityEvent started Field Value UnityEvent Represents a MonoBehaviour class for handling events related to a video player."
  },
  "ScriptReference/Animeska34.AnimeTools.Events.html": {
    "href": "ScriptReference/Animeska34.AnimeTools.Events.html",
    "title": "Namespace Animeska34.AnimeTools.Events | Animeska34 Docs",
    "keywords": "Namespace Animeska34.AnimeTools.Events Classes VideoPlayerEvents Represents a MonoBehaviour class for handling events related to a video player."
  },
  "ScriptReference/Animeska34.AnimeTools.IAnimeAction.html": {
    "href": "ScriptReference/Animeska34.AnimeTools.IAnimeAction.html",
    "title": "Interface IAnimeAction | Animeska34 Docs",
    "keywords": "Interface IAnimeAction Namespace Animeska34.AnimeTools Assembly Animeska34.AnimeTools.dll Represents an interface for anime actions that can be executed and reset, with properties for name and enabled state. public interface IAnimeAction Properties enabled Gets or sets a value indicating whether the anime action is enabled or not. bool enabled { get; set; } Property Value bool Represents an interface for anime actions that can be executed and reset, with properties for name and enabled state. events The UnityEvent associated with this anime action. Use this property to assign events that should be triggered by the action. UnityEvent events { get; } Property Value UnityEvent Represents an interface for anime actions that can be executed and reset, with properties for name and enabled state. name Gets or sets the name of the anime action. string name { get; set; } Property Value string Represents an interface for anime actions that can be executed and reset, with properties for name and enabled state. Methods Execute() Executes the anime action. void Execute() Reset() Resets the anime action to its initial state. void Reset()"
  },
  "ScriptReference/Animeska34.AnimeTools.IAnimeActions.html": {
    "href": "ScriptReference/Animeska34.AnimeTools.IAnimeActions.html",
    "title": "Interface IAnimeActions | Animeska34 Docs",
    "keywords": "Interface IAnimeActions Namespace Animeska34.AnimeTools Assembly Animeska34.AnimeTools.dll Represents a host for a collection of anime actions, providing methods to manage and execute them. public interface IAnimeActions Properties count Gets the number of anime actions in the collection. int count { get; } Property Value int Represents a host for a collection of anime actions, providing methods to manage and execute them. Methods Execute(string) Executes the anime action with the specified name from the collection. void Execute(string name) Parameters name string The name of the anime action to be executed. ExecuteAt(int) Executes the anime action at the specified position in the collection. void ExecuteAt(int position) Parameters position int The position of the anime action to be executed. Remove(string) Removes the anime action with the specified name from the collection. void Remove(string name) Parameters name string The name of the anime action to be removed. RemoveAll() Removes all anime actions from the collection. void RemoveAll() RemoveAt(int) Removes the anime action at the specified position in the collection. void RemoveAt(int position) Parameters position int The position of the anime action to be removed."
  },
  "ScriptReference/Animeska34.AnimeTools.html": {
    "href": "ScriptReference/Animeska34.AnimeTools.html",
    "title": "Namespace Animeska34.AnimeTools | Animeska34 Docs",
    "keywords": "Namespace Animeska34.AnimeTools Classes AnimeAction AnimeActions Represents a MonoBehaviour class that implements the IAnimeActions interface and holds a collection of anime actions. AnimeText Animated text printing letter by letter with custom time interval. AnimeTimedAction Represents an anime action that is invoked after a specified time and can repeat. AnimeTimedActions Represents a MonoBehaviour class that implements the IAnimeActions interface specifically for timed actions. AutoDestroy MonoBehaviour class for automatically destroying the GameObject after a specified delay. CameraPosition CameraSystem ConstantTransformation MonoBehaviour class for applying constant transformation to the GameObject. Interfaces IAnimeAction Represents an interface for anime actions that can be executed and reset, with properties for name and enabled state. IAnimeActions Represents a host for a collection of anime actions, providing methods to manage and execute them."
  },
  "ScriptReference/Animeska34.AudioVisualization.AudioAnalyzer.html": {
    "href": "ScriptReference/Animeska34.AudioVisualization.AudioAnalyzer.html",
    "title": "Class AudioAnalyzer | Animeska34 Docs",
    "keywords": "Class AudioAnalyzer Namespace Animeska34.AudioVisualization Assembly Animeska34.AudioVisualization.dll [RequireComponent(typeof(AudioSource))] [AddComponentMenu(\"Animeska34/Audio Visualization/Audio Analyzer\", 0)] public class AudioAnalyzer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AudioAnalyzer Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields channel public byte channel Field Value byte multiplier public float multiplier Field Value float Properties bands public float[] bands { get; } Property Value float[] bandsCount public byte bandsCount { get; } Property Value byte samples public float[] samples { get; } Property Value float[] Methods SetBandsCount(byte) public void SetBandsCount(byte count) Parameters count byte"
  },
  "ScriptReference/Animeska34.AudioVisualization.AudioModifier.html": {
    "href": "ScriptReference/Animeska34.AudioVisualization.AudioModifier.html",
    "title": "Class AudioModifier | Animeska34 Docs",
    "keywords": "Class AudioModifier Namespace Animeska34.AudioVisualization Assembly Animeska34.AudioVisualization.dll public abstract class AudioModifier : ScriptableObject Inheritance object Object ScriptableObject AudioModifier Derived SmoothModifier Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties vizualizer public AudioVisualizer vizualizer { get; } Property Value AudioVisualizer Methods OnDestroy() protected void OnDestroy() Process(float) public abstract float Process(float value) Parameters value float Returns float Start() public virtual void Start() Stop() public virtual void Stop()"
  },
  "ScriptReference/Animeska34.AudioVisualization.AudioVisualizer.html": {
    "href": "ScriptReference/Animeska34.AudioVisualization.AudioVisualizer.html",
    "title": "Class AudioVisualizer | Animeska34 Docs",
    "keywords": "Class AudioVisualizer Namespace Animeska34.AudioVisualization Assembly Animeska34.AudioVisualization.dll public abstract class AudioVisualizer : MonoBehaviour, IAudioVisualizer Inheritance object Object Component Behaviour MonoBehaviour AudioVisualizer Implements IAudioVisualizer Derived AudioVisualizerAnimation AudioVisualizerColor AudioVisualizerHDRColor AudioVisualizerPosition AudioVisualizerRotation AudioVisualizerScale Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields modifiers [SerializeField] protected List<AudioModifier> modifiers Field Value List<AudioModifier> Properties analyzer public AudioAnalyzer analyzer { get; set; } Property Value AudioAnalyzer band public byte band { get; set; } Property Value byte processedValue public float processedValue { get; } Property Value float Methods AddModifier(Type) public AudioModifier AddModifier(Type t) Parameters t Type Returns AudioModifier AddModifier<T>() public AudioModifier AddModifier<T>() where T : AudioModifier Returns AudioModifier Type Parameters T Awake() protected void Awake() GetAudioModifiers(Type) public AudioModifier[] GetAudioModifiers(Type t) Parameters t Type Returns AudioModifier[] GetAudioModifiers<T>() public AudioModifier[] GetAudioModifiers<T>() Returns AudioModifier[] Type Parameters T GetModifier(Type) public AudioModifier GetModifier(Type t) Parameters t Type Returns AudioModifier GetModifier<T>() public AudioModifier GetModifier<T>() where T : AudioModifier Returns AudioModifier Type Parameters T InstantiateModifier(AudioModifier) public AudioModifier InstantiateModifier(AudioModifier modifier) Parameters modifier AudioModifier Returns AudioModifier OnDisable() protected virtual void OnDisable() OnEnable() protected virtual void OnEnable() Process() protected abstract void Process() RemoveModifier(AudioModifier) public void RemoveModifier(AudioModifier modifier) Parameters modifier AudioModifier RemoveModifier(Type) public void RemoveModifier(Type t) Parameters t Type RemoveModifier<T>() public void RemoveModifier<T>() where T : AudioModifier Type Parameters T Start() protected virtual void Start() TryGetModifier(Type, out AudioModifier) public bool TryGetModifier(Type t, out AudioModifier modifier) Parameters t Type modifier AudioModifier Returns bool TryGetModifier<T>(out AudioModifier) public bool TryGetModifier<T>(out AudioModifier modifier) where T : AudioModifier Parameters modifier AudioModifier Returns bool Type Parameters T Update() protected virtual void Update()"
  },
  "ScriptReference/Animeska34.AudioVisualization.AudioVisualizerAnimation.html": {
    "href": "ScriptReference/Animeska34.AudioVisualization.AudioVisualizerAnimation.html",
    "title": "Class AudioVisualizerAnimation | Animeska34 Docs",
    "keywords": "Class AudioVisualizerAnimation Namespace Animeska34.AudioVisualization Assembly Animeska34.AudioVisualization.dll [AddComponentMenu(\"Animeska34/Audio Visualization/Audio Visualizer: Animation\", 105)] public class AudioVisualizerAnimation : AudioVisualizer, IAudioVisualizer Inheritance object Object Component Behaviour MonoBehaviour AudioVisualizer AudioVisualizerAnimation Implements IAudioVisualizer Inherited Members AudioVisualizer.processedValue AudioVisualizer.analyzer AudioVisualizer.band AudioVisualizer.modifiers AudioVisualizer.Awake() AudioVisualizer.Update() AudioVisualizer.AddModifier<T>() AudioVisualizer.RemoveModifier<T>() AudioVisualizer.GetModifier<T>() AudioVisualizer.TryGetModifier<T>(out AudioModifier) AudioVisualizer.GetAudioModifiers<T>() AudioVisualizer.AddModifier(Type) AudioVisualizer.RemoveModifier(Type) AudioVisualizer.GetModifier(Type) AudioVisualizer.TryGetModifier(Type, out AudioModifier) AudioVisualizer.GetAudioModifiers(Type) AudioVisualizer.RemoveModifier(AudioModifier) AudioVisualizer.InstantiateModifier(AudioModifier) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields additive public bool additive Field Value bool baseTime public float baseTime Field Value float clip public AnimationClip clip Field Value AnimationClip factor public float factor Field Value float Methods OnDisable() protected override void OnDisable() OnEnable() protected override void OnEnable() Process() protected override void Process() ResetTime() public void ResetTime() SetTime(float) public void SetTime(float t) Parameters t float Start() protected override void Start()"
  },
  "ScriptReference/Animeska34.AudioVisualization.AudioVisualizerColor.html": {
    "href": "ScriptReference/Animeska34.AudioVisualization.AudioVisualizerColor.html",
    "title": "Class AudioVisualizerColor | Animeska34 Docs",
    "keywords": "Class AudioVisualizerColor Namespace Animeska34.AudioVisualization Assembly Animeska34.AudioVisualization.dll [AddComponentMenu(\"Animeska34/Audio Visualization/Audio Visualizer: Color\", 103)] public class AudioVisualizerColor : AudioVisualizer, IAudioVisualizer Inheritance object Object Component Behaviour MonoBehaviour AudioVisualizer AudioVisualizerColor Implements IAudioVisualizer Inherited Members AudioVisualizer.processedValue AudioVisualizer.analyzer AudioVisualizer.band AudioVisualizer.modifiers AudioVisualizer.Awake() AudioVisualizer.Update() AudioVisualizer.AddModifier<T>() AudioVisualizer.RemoveModifier<T>() AudioVisualizer.GetModifier<T>() AudioVisualizer.TryGetModifier<T>(out AudioModifier) AudioVisualizer.GetAudioModifiers<T>() AudioVisualizer.AddModifier(Type) AudioVisualizer.RemoveModifier(Type) AudioVisualizer.GetModifier(Type) AudioVisualizer.TryGetModifier(Type, out AudioModifier) AudioVisualizer.GetAudioModifiers(Type) AudioVisualizer.RemoveModifier(AudioModifier) AudioVisualizer.OnEnable() AudioVisualizer.OnDisable() AudioVisualizer.InstantiateModifier(AudioModifier) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields factor public float factor Field Value float gradient public Gradient gradient Field Value Gradient materialSlot public int materialSlot Field Value int property public string property Field Value string Methods Process() protected override void Process() Start() protected override void Start()"
  },
  "ScriptReference/Animeska34.AudioVisualization.AudioVisualizerHDRColor.html": {
    "href": "ScriptReference/Animeska34.AudioVisualization.AudioVisualizerHDRColor.html",
    "title": "Class AudioVisualizerHDRColor | Animeska34 Docs",
    "keywords": "Class AudioVisualizerHDRColor Namespace Animeska34.AudioVisualization Assembly Animeska34.AudioVisualization.dll [AddComponentMenu(\"Animeska34/Audio Visualization/Audio Visualizer: HDR Color\", 104)] public class AudioVisualizerHDRColor : AudioVisualizer, IAudioVisualizer Inheritance object Object Component Behaviour MonoBehaviour AudioVisualizer AudioVisualizerHDRColor Implements IAudioVisualizer Inherited Members AudioVisualizer.processedValue AudioVisualizer.analyzer AudioVisualizer.band AudioVisualizer.modifiers AudioVisualizer.Awake() AudioVisualizer.Update() AudioVisualizer.AddModifier<T>() AudioVisualizer.RemoveModifier<T>() AudioVisualizer.GetModifier<T>() AudioVisualizer.TryGetModifier<T>(out AudioModifier) AudioVisualizer.GetAudioModifiers<T>() AudioVisualizer.AddModifier(Type) AudioVisualizer.RemoveModifier(Type) AudioVisualizer.GetModifier(Type) AudioVisualizer.TryGetModifier(Type, out AudioModifier) AudioVisualizer.GetAudioModifiers(Type) AudioVisualizer.RemoveModifier(AudioModifier) AudioVisualizer.OnEnable() AudioVisualizer.OnDisable() AudioVisualizer.InstantiateModifier(AudioModifier) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields factor public float factor Field Value float gradient [GradientUsage(true)] public Gradient gradient Field Value Gradient materialSlot public int materialSlot Field Value int property public string property Field Value string Methods Process() protected override void Process() Start() protected override void Start()"
  },
  "ScriptReference/Animeska34.AudioVisualization.AudioVisualizerPosition.html": {
    "href": "ScriptReference/Animeska34.AudioVisualization.AudioVisualizerPosition.html",
    "title": "Class AudioVisualizerPosition | Animeska34 Docs",
    "keywords": "Class AudioVisualizerPosition Namespace Animeska34.AudioVisualization Assembly Animeska34.AudioVisualization.dll [AddComponentMenu(\"Animeska34/Audio Visualization/Audio Visualizer: Position\", 100)] public class AudioVisualizerPosition : AudioVisualizer, IAudioVisualizer Inheritance object Object Component Behaviour MonoBehaviour AudioVisualizer AudioVisualizerPosition Implements IAudioVisualizer Inherited Members AudioVisualizer.processedValue AudioVisualizer.analyzer AudioVisualizer.band AudioVisualizer.modifiers AudioVisualizer.Awake() AudioVisualizer.Start() AudioVisualizer.Update() AudioVisualizer.AddModifier<T>() AudioVisualizer.RemoveModifier<T>() AudioVisualizer.GetModifier<T>() AudioVisualizer.TryGetModifier<T>(out AudioModifier) AudioVisualizer.GetAudioModifiers<T>() AudioVisualizer.AddModifier(Type) AudioVisualizer.RemoveModifier(Type) AudioVisualizer.GetModifier(Type) AudioVisualizer.TryGetModifier(Type, out AudioModifier) AudioVisualizer.GetAudioModifiers(Type) AudioVisualizer.RemoveModifier(AudioModifier) AudioVisualizer.InstantiateModifier(AudioModifier) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields directionMask public Vector3 directionMask Field Value Vector3 initialPosition [HideInInspector] public Vector3 initialPosition Field Value Vector3 Methods OnDisable() protected override void OnDisable() OnEnable() protected override void OnEnable() Process() protected override void Process()"
  },
  "ScriptReference/Animeska34.AudioVisualization.AudioVisualizerRotation.html": {
    "href": "ScriptReference/Animeska34.AudioVisualization.AudioVisualizerRotation.html",
    "title": "Class AudioVisualizerRotation | Animeska34 Docs",
    "keywords": "Class AudioVisualizerRotation Namespace Animeska34.AudioVisualization Assembly Animeska34.AudioVisualization.dll [AddComponentMenu(\"Animeska34/Audio Visualization/Audio Visualizer: Rotation\", 101)] public class AudioVisualizerRotation : AudioVisualizer, IAudioVisualizer Inheritance object Object Component Behaviour MonoBehaviour AudioVisualizer AudioVisualizerRotation Implements IAudioVisualizer Inherited Members AudioVisualizer.processedValue AudioVisualizer.analyzer AudioVisualizer.band AudioVisualizer.modifiers AudioVisualizer.Awake() AudioVisualizer.Start() AudioVisualizer.Update() AudioVisualizer.AddModifier<T>() AudioVisualizer.RemoveModifier<T>() AudioVisualizer.GetModifier<T>() AudioVisualizer.TryGetModifier<T>(out AudioModifier) AudioVisualizer.GetAudioModifiers<T>() AudioVisualizer.AddModifier(Type) AudioVisualizer.RemoveModifier(Type) AudioVisualizer.GetModifier(Type) AudioVisualizer.TryGetModifier(Type, out AudioModifier) AudioVisualizer.GetAudioModifiers(Type) AudioVisualizer.RemoveModifier(AudioModifier) AudioVisualizer.InstantiateModifier(AudioModifier) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields additive public bool additive Field Value bool directionMask public Vector3 directionMask Field Value Vector3 initialRotaion [HideInInspector] public Quaternion initialRotaion Field Value Quaternion Methods OnDisable() protected override void OnDisable() OnEnable() protected override void OnEnable() Process() protected override void Process()"
  },
  "ScriptReference/Animeska34.AudioVisualization.AudioVisualizerScale.html": {
    "href": "ScriptReference/Animeska34.AudioVisualization.AudioVisualizerScale.html",
    "title": "Class AudioVisualizerScale | Animeska34 Docs",
    "keywords": "Class AudioVisualizerScale Namespace Animeska34.AudioVisualization Assembly Animeska34.AudioVisualization.dll [AddComponentMenu(\"Animeska34/Audio Visualization/Audio Visualizer: Scale\", 102)] public class AudioVisualizerScale : AudioVisualizer, IAudioVisualizer Inheritance object Object Component Behaviour MonoBehaviour AudioVisualizer AudioVisualizerScale Implements IAudioVisualizer Inherited Members AudioVisualizer.processedValue AudioVisualizer.analyzer AudioVisualizer.band AudioVisualizer.modifiers AudioVisualizer.Awake() AudioVisualizer.Start() AudioVisualizer.Update() AudioVisualizer.AddModifier<T>() AudioVisualizer.RemoveModifier<T>() AudioVisualizer.GetModifier<T>() AudioVisualizer.TryGetModifier<T>(out AudioModifier) AudioVisualizer.GetAudioModifiers<T>() AudioVisualizer.AddModifier(Type) AudioVisualizer.RemoveModifier(Type) AudioVisualizer.GetModifier(Type) AudioVisualizer.TryGetModifier(Type, out AudioModifier) AudioVisualizer.GetAudioModifiers(Type) AudioVisualizer.RemoveModifier(AudioModifier) AudioVisualizer.InstantiateModifier(AudioModifier) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields dimesnions public Vector3 dimesnions Field Value Vector3 directionMask public Vector3 directionMask Field Value Vector3 initialPosition [HideInInspector] public Vector3 initialPosition Field Value Vector3 initialScale [HideInInspector] public Vector3 initialScale Field Value Vector3 minScale public Vector3 minScale Field Value Vector3 Properties stabilize public bool stabilize { get; set; } Property Value bool Methods OnDisable() protected override void OnDisable() OnEnable() protected override void OnEnable() Process() protected override void Process()"
  },
  "ScriptReference/Animeska34.AudioVisualization.Editor.AudioVisualizerEditor.html": {
    "href": "ScriptReference/Animeska34.AudioVisualization.Editor.AudioVisualizerEditor.html",
    "title": "Class AudioVisualizerEditor | Animeska34 Docs",
    "keywords": "Class AudioVisualizerEditor Namespace Animeska34.AudioVisualization.Editor Assembly Animeska34.AudioVisualization.Editor.dll [CustomEditor(typeof(AudioVisualizer), true)] [CanEditMultipleObjects] public class AudioVisualizerEditor : Editor Inheritance object Object ScriptableObject Editor AudioVisualizerEditor Inherited Members Editor.SaveChanges() Editor.DiscardChanges() Editor.CreateEditorWithContext(Object[], Object, Type) Editor.CreateEditorWithContext(Object[], Object) Editor.CreateCachedEditorWithContext(Object, Object, Type, ref Editor) Editor.CreateCachedEditorWithContext(Object[], Object, Type, ref Editor) Editor.CreateCachedEditor(Object, Type, ref Editor) Editor.CreateCachedEditor(Object[], Type, ref Editor) Editor.CreateEditor(Object) Editor.CreateEditor(Object, Type) Editor.CreateEditor(Object[]) Editor.CreateEditor(Object[], Type) Editor.DrawPropertiesExcluding(SerializedObject, params string[]) Editor.DrawDefaultInspector() Editor.Repaint() Editor.CreateInspectorGUI() Editor.RequiresConstantRepaint() Editor.DrawHeader() Editor.OnHeaderGUI() Editor.ShouldHideOpenButton() Editor.DrawFoldoutInspector(Object, ref Editor) Editor.HasPreviewGUI() Editor.GetPreviewTitle() Editor.RenderStaticPreview(string, Object[], int, int) Editor.OnPreviewGUI(Rect, GUIStyle) Editor.OnInteractivePreviewGUI(Rect, GUIStyle) Editor.OnPreviewSettings() Editor.GetInfoString() Editor.DrawPreview(Rect) Editor.ReloadPreviewInstances() Editor.UseDefaultMargins() Editor.MoveNextTarget() Editor.ResetTarget() Editor.hasUnsavedChanges Editor.saveChangesMessage Editor.target Editor.targets Editor.serializedObject Editor.finishedDefaultHeaderGUI ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods OnInspectorGUI() Implement this function to make a custom inspector. public override void OnInspectorGUI()"
  },
  "ScriptReference/Animeska34.AudioVisualization.Editor.html": {
    "href": "ScriptReference/Animeska34.AudioVisualization.Editor.html",
    "title": "Namespace Animeska34.AudioVisualization.Editor | Animeska34 Docs",
    "keywords": "Namespace Animeska34.AudioVisualization.Editor Classes AudioVisualizerEditor"
  },
  "ScriptReference/Animeska34.AudioVisualization.IAudioVisualizer.html": {
    "href": "ScriptReference/Animeska34.AudioVisualization.IAudioVisualizer.html",
    "title": "Interface IAudioVisualizer | Animeska34 Docs",
    "keywords": "Interface IAudioVisualizer Namespace Animeska34.AudioVisualization Assembly Animeska34.AudioVisualization.dll public interface IAudioVisualizer Properties analyzer AudioAnalyzer analyzer { get; set; } Property Value AudioAnalyzer band byte band { get; set; } Property Value byte processedValue float processedValue { get; } Property Value float"
  },
  "ScriptReference/Animeska34.AudioVisualization.SmoothModifier.html": {
    "href": "ScriptReference/Animeska34.AudioVisualization.SmoothModifier.html",
    "title": "Class SmoothModifier | Animeska34 Docs",
    "keywords": "Class SmoothModifier Namespace Animeska34.AudioVisualization Assembly Animeska34.AudioVisualization.dll [CreateAssetMenu(menuName = \"Animeska34/Audio Visualization/Smooth Modifier\")] public class SmoothModifier : AudioModifier Inheritance object Object ScriptableObject AudioModifier SmoothModifier Inherited Members AudioModifier.vizualizer AudioModifier.Start() AudioModifier.Stop() AudioModifier.OnDestroy() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields factor public float factor Field Value float Methods Process(float) public override float Process(float value) Parameters value float Returns float"
  },
  "ScriptReference/Animeska34.AudioVisualization.html": {
    "href": "ScriptReference/Animeska34.AudioVisualization.html",
    "title": "Namespace Animeska34.AudioVisualization | Animeska34 Docs",
    "keywords": "Namespace Animeska34.AudioVisualization Classes AudioAnalyzer AudioModifier AudioVisualizer AudioVisualizerAnimation AudioVisualizerColor AudioVisualizerHDRColor AudioVisualizerPosition AudioVisualizerRotation AudioVisualizerScale SmoothModifier Interfaces IAudioVisualizer"
  },
  "ScriptReference/Animeska34.C2D.JRPG.Direction.html": {
    "href": "ScriptReference/Animeska34.C2D.JRPG.Direction.html",
    "title": "Enum Direction | Animeska34 Docs",
    "keywords": "Enum Direction Namespace Animeska34.C2D.JRPG Assembly Animeska34.C2D.JRPG.dll Enum that represents the player's look direction. public enum Direction Fields Back = 1 Represents the back direction. Front = 0 Represents the front direction. Left = 2 Represents the left direction. Right = 3 Represents the right direction."
  },
  "ScriptReference/Animeska34.C2D.JRPG.JRPGAnimator.html": {
    "href": "ScriptReference/Animeska34.C2D.JRPG.JRPGAnimator.html",
    "title": "Class JRPGAnimator | Animeska34 Docs",
    "keywords": "Class JRPGAnimator Namespace Animeska34.C2D.JRPG Assembly Animeska34.C2D.JRPG.dll Synchronizes animator parameters with JRPG Controller. [AddComponentMenu(\"Animeska34/Controllers 2D/JRPG/JRPG Animator\")] [RequireComponent(typeof(Animator))] public class JRPGAnimator : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour JRPGAnimator Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields controller Controller assigned to the JRPGAnimator. [SerializeField] public JRPGController controller Field Value JRPGController Synchronizes animator parameters with JRPG Controller."
  },
  "ScriptReference/Animeska34.C2D.JRPG.JRPGController.html": {
    "href": "ScriptReference/Animeska34.C2D.JRPG.JRPGController.html",
    "title": "Class JRPGController | Animeska34 Docs",
    "keywords": "Class JRPGController Namespace Animeska34.C2D.JRPG Assembly Animeska34.C2D.JRPG.dll Simple JRPG-style player controller. [AddComponentMenu(\"Animeska34/Controllers 2D/JRPG/JRPG Controller\")] public class JRPGController : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour JRPGController Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields allowRotation Determines whether to allow rotating the player along the z-axis. If false, the direction value will change. public bool allowRotation Field Value bool Simple JRPG-style player controller. directionChanged UnityEvent triggered when the movement direction changes. public UnityEvent<Direction> directionChanged Field Value UnityEvent<Direction> Simple JRPG-style player controller. lookAtMouse Determines whether the player should rotate towards the mouse position. public bool lookAtMouse Field Value bool Simple JRPG-style player controller. moveStateChanged UnityEvent triggered when the player starts or stops moving. public UnityEvent<bool> moveStateChanged Field Value UnityEvent<bool> Simple JRPG-style player controller. speed Movement speed of the player. public float speed Field Value float Simple JRPG-style player controller. Properties currentDirection Current movement direction. Updates only if allowRotation is set to false. public Direction currentDirection { get; set; } Property Value Direction Simple JRPG-style player controller. isMoving Gets whether the player is currently moving. public bool isMoving { get; set; } Property Value bool Simple JRPG-style player controller."
  },
  "ScriptReference/Animeska34.C2D.JRPG.html": {
    "href": "ScriptReference/Animeska34.C2D.JRPG.html",
    "title": "Namespace Animeska34.C2D.JRPG | Animeska34 Docs",
    "keywords": "Namespace Animeska34.C2D.JRPG Classes JRPGAnimator Synchronizes animator parameters with JRPG Controller. JRPGController Simple JRPG-style player controller. Enums Direction Enum that represents the player's look direction."
  },
  "ScriptReference/Animeska34.C2D.RTS.IRTSSelectable.html": {
    "href": "ScriptReference/Animeska34.C2D.RTS.IRTSSelectable.html",
    "title": "Interface IRTSSelectable | Animeska34 Docs",
    "keywords": "Interface IRTSSelectable Namespace Animeska34.C2D.RTS Assembly Animeska34.C2D.RTS.dll public interface IRTSSelectable Properties gameObject GameObject gameObject { get; } Property Value GameObject name string name { get; } Property Value string selectionPriority int selectionPriority { get; } Property Value int transform Transform transform { get; } Property Value Transform Methods OnDeselected() void OnDeselected() OnSelected() void OnSelected()"
  },
  "ScriptReference/Animeska34.C2D.RTS.RTSAction.html": {
    "href": "ScriptReference/Animeska34.C2D.RTS.RTSAction.html",
    "title": "Class RTSAction | Animeska34 Docs",
    "keywords": "Class RTSAction Namespace Animeska34.C2D.RTS Assembly Animeska34.C2D.RTS.dll public abstract class RTSAction : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour RTSAction Derived RTSEventAction Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields sprite public Sprite sprite Field Value Sprite text public string text Field Value string Properties allowGrouping public bool allowGrouping { get; protected set; } Property Value bool Methods Invoke() public abstract void Invoke() OnDestroy() protected virtual void OnDestroy() RemoveButton() public void RemoveButton()"
  },
  "ScriptReference/Animeska34.C2D.RTS.RTSActionButton.html": {
    "href": "ScriptReference/Animeska34.C2D.RTS.RTSActionButton.html",
    "title": "Class RTSActionButton | Animeska34 Docs",
    "keywords": "Class RTSActionButton Namespace Animeska34.C2D.RTS Assembly Animeska34.C2D.RTS.dll [RequireComponent(typeof(Button))] public class RTSActionButton : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour RTSActionButton Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties type public Type type { get; } Property Value Type Methods AddAction(params RTSAction[]) public void AddAction(params RTSAction[] actions) Parameters actions RTSAction[] RemoveAction(params RTSAction[]) public void RemoveAction(params RTSAction[] actions) Parameters actions RTSAction[] Setup(RTSActionHost, RTSAction) public void Setup(RTSActionHost host, RTSAction action) Parameters host RTSActionHost action RTSAction"
  },
  "ScriptReference/Animeska34.C2D.RTS.RTSActionHost.html": {
    "href": "ScriptReference/Animeska34.C2D.RTS.RTSActionHost.html",
    "title": "Class RTSActionHost | Animeska34 Docs",
    "keywords": "Class RTSActionHost Namespace Animeska34.C2D.RTS Assembly Animeska34.C2D.RTS.dll [AddComponentMenu(\"Animeska34/Controllers 2D/RTS/RTS Action Host\")] public class RTSActionHost : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour RTSActionHost Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods AddAction(RTSAction) public void AddAction(RTSAction action) Parameters action RTSAction RemoveAction(RTSAction) public void RemoveAction(RTSAction action) Parameters action RTSAction"
  },
  "ScriptReference/Animeska34.C2D.RTS.RTSCamera.html": {
    "href": "ScriptReference/Animeska34.C2D.RTS.RTSCamera.html",
    "title": "Class RTSCamera | Animeska34 Docs",
    "keywords": "Class RTSCamera Namespace Animeska34.C2D.RTS Assembly Animeska34.C2D.RTS.dll [RequireComponent(typeof(Camera))] [AddComponentMenu(\"Animeska34/Controllers 2D/RTS/RTS Camera\")] public class RTSCamera : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour RTSCamera Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields edgeSpeed public Vector2 edgeSpeed Field Value Vector2 edgeSrolling [Header(\"Edge Scrolling\")] public bool edgeSrolling Field Value bool edgeZone public float edgeZone Field Value float maxBounds public Vector3 maxBounds Field Value Vector3 minBounds public Vector3 minBounds Field Value Vector3 speed public Vector3 speed Field Value Vector3 Properties mouseInGameBounds public static bool mouseInGameBounds { get; } Property Value bool scale public float scale { get; } Property Value float"
  },
  "ScriptReference/Animeska34.C2D.RTS.RTSEventAction.html": {
    "href": "ScriptReference/Animeska34.C2D.RTS.RTSEventAction.html",
    "title": "Class RTSEventAction | Animeska34 Docs",
    "keywords": "Class RTSEventAction Namespace Animeska34.C2D.RTS Assembly Animeska34.C2D.RTS.dll [AddComponentMenu(\"Animeska34/Controllers 2D/RTS/RTS Event Action\")] public class RTSEventAction : RTSAction Inheritance object Object Component Behaviour MonoBehaviour RTSAction RTSEventAction Inherited Members RTSAction.sprite RTSAction.text RTSAction.allowGrouping RTSAction.RemoveButton() RTSAction.OnDestroy() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields onInvoke public UnityEvent onInvoke Field Value UnityEvent Methods Invoke() public override void Invoke()"
  },
  "ScriptReference/Animeska34.C2D.RTS.RTSSelectable.html": {
    "href": "ScriptReference/Animeska34.C2D.RTS.RTSSelectable.html",
    "title": "Class RTSSelectable | Animeska34 Docs",
    "keywords": "Class RTSSelectable Namespace Animeska34.C2D.RTS Assembly Animeska34.C2D.RTS.dll [AddComponentMenu(\"Animeska34/Controllers 2D/RTS/RTS Selectable\")] public class RTSSelectable : MonoBehaviour, IRTSSelectable Inheritance object Object Component Behaviour MonoBehaviour RTSSelectable Implements IRTSSelectable Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties selectionPriority public virtual int selectionPriority { get; } Property Value int Methods OnDeselected() public virtual void OnDeselected() OnSelected() public virtual void OnSelected()"
  },
  "ScriptReference/Animeska34.C2D.RTS.RTSSelector.html": {
    "href": "ScriptReference/Animeska34.C2D.RTS.RTSSelector.html",
    "title": "Class RTSSelector | Animeska34 Docs",
    "keywords": "Class RTSSelector Namespace Animeska34.C2D.RTS Assembly Animeska34.C2D.RTS.dll [AddComponentMenu(\"Animeska34/Controllers 2D/RTS/RTS Selector\")] [RequireComponent(typeof(Rigidbody2D), typeof(BoxCollider2D), typeof(SpriteRenderer))] public class RTSSelector : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour RTSSelector Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields onAction public UnityEvent onAction Field Value UnityEvent onDeselected public UnityEvent<IRTSSelectable> onDeselected Field Value UnityEvent<IRTSSelectable> onSelected public UnityEvent<IRTSSelectable> onSelected Field Value UnityEvent<IRTSSelectable> onSelectionEnded public UnityEvent onSelectionEnded Field Value UnityEvent onSelectionStarted public UnityEvent onSelectionStarted Field Value UnityEvent Properties count public static int count { get; } Property Value int currentPriority public static int currentPriority { get; } Property Value int instance public static RTSSelector instance { get; } Property Value RTSSelector isSelecting public bool isSelecting { get; } Property Value bool selected public static List<IRTSSelectable> selected { get; } Property Value List<IRTSSelectable> Methods Deselect() public void Deselect() Deselect(IRTSSelectable) public void Deselect(IRTSSelectable selectable) Parameters selectable IRTSSelectable Select(IRTSSelectable) public void Select(IRTSSelectable selectable) Parameters selectable IRTSSelectable"
  },
  "ScriptReference/Animeska34.C2D.RTS.html": {
    "href": "ScriptReference/Animeska34.C2D.RTS.html",
    "title": "Namespace Animeska34.C2D.RTS | Animeska34 Docs",
    "keywords": "Namespace Animeska34.C2D.RTS Classes RTSAction RTSActionButton RTSActionHost RTSCamera RTSEventAction RTSSelectable RTSSelector Interfaces IRTSSelectable"
  },
  "ScriptReference/Animeska34.C2D.SS.SSCamera.html": {
    "href": "ScriptReference/Animeska34.C2D.SS.SSCamera.html",
    "title": "Class SSCamera | Animeska34 Docs",
    "keywords": "Class SSCamera Namespace Animeska34.C2D.SS Assembly Animeska34.C2D.SS.dll Simple constant movement script for the camera in a scroll shooter. [AddComponentMenu(\"Animeska34/Controllers 2D/SS/SS Camera\")] public class SSCamera : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SSCamera Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields speed Speed of the camera in units per second in both x and y directions. public Vector2 speed Field Value Vector2 Simple constant movement script for the camera in a scroll shooter."
  },
  "ScriptReference/Animeska34.C2D.SS.SSController.html": {
    "href": "ScriptReference/Animeska34.C2D.SS.SSController.html",
    "title": "Class SSController | Animeska34 Docs",
    "keywords": "Class SSController Namespace Animeska34.C2D.SS Assembly Animeska34.C2D.SS.dll Simple scroll shooter controller. [AddComponentMenu(\"Animeska34/Controllers 2D/SS/SS Controller\")] public class SSController : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SSController Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields destroyDelay The delay, in seconds, before destroying the player upon collision. public float destroyDelay Field Value float Simple scroll shooter controller. Remarks This float variable represents the duration of delay before destroying the player upon collision. Developers can adjust this value to introduce a delay between collision and player destruction. destroyOnCollision Flag indicating whether the player should be destroyed upon collision. public bool destroyOnCollision Field Value bool Simple scroll shooter controller. Remarks When set to true, the player will be destroyed upon colliding with other objects. Developers can use this flag to control whether the player should be destroyed on collision. forceInsideViewport Flag indicating whether to always keep the player inside the viewport area. public bool forceInsideViewport Field Value bool Simple scroll shooter controller. Remarks When set to true, the player will be kept inside the viewport area to ensure visibility. Developers can use this flag to control whether the player's position is constrained within the viewport. moveWithRigidbody Flag indicating whether the player should move using a Rigidbody component. public bool moveWithRigidbody Field Value bool Simple scroll shooter controller. Remarks When set to true, the player will move using a Rigidbody component. Developers can use this flag to control the movement behavior of the player using physics simulations. speed Speed of the player's movement in the scroll shooter. public float speed Field Value float Simple scroll shooter controller. Methods EnsureInViewport() Forces the player to be inside the viewport area. public void EnsureInViewport() Remarks This method ensures that the player's position is within the bounds of the viewport area. Developers can call this method to force the player to stay inside the viewport."
  },
  "ScriptReference/Animeska34.C2D.SS.html": {
    "href": "ScriptReference/Animeska34.C2D.SS.html",
    "title": "Namespace Animeska34.C2D.SS | Animeska34 Docs",
    "keywords": "Namespace Animeska34.C2D.SS Classes SSCamera Simple constant movement script for the camera in a scroll shooter. SSController Simple scroll shooter controller."
  },
  "ScriptReference/Animeska34.C3D.Controller3D.html": {
    "href": "ScriptReference/Animeska34.C3D.Controller3D.html",
    "title": "Class Controller3D | Animeska34 Docs",
    "keywords": "Class Controller3D Namespace Animeska34.C3D Assembly Animeska34.C3D.dll [RequireComponent(typeof(CharacterController))] public class Controller3D : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Controller3D Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields allowCrouch public bool allowCrouch Field Value bool allowJump [Header(\"Features\")] public bool allowJump Field Value bool allowLook public bool allowLook Field Value bool allowMove public bool allowMove Field Value bool crouchingSpeed public float crouchingSpeed Field Value float heightCrouching public float heightCrouching Field Value float heightStanding [Header(\"Crouching\")] public float heightStanding Field Value float jumpHeight public float jumpHeight Field Value float lookSensetivity public float lookSensetivity Field Value float moveSpeed public float moveSpeed Field Value float onCrouch public UnityEvent onCrouch Field Value UnityEvent onFall public UnityEvent onFall Field Value UnityEvent onGround public UnityEvent onGround Field Value UnityEvent onJump public UnityEvent onJump Field Value UnityEvent onStand public UnityEvent onStand Field Value UnityEvent switchMode public bool switchMode Field Value bool verticalAxis public Transform verticalAxis Field Value Transform verticalBounds public Vector2 verticalBounds Field Value Vector2 Properties controller public CharacterController controller { get; } Property Value CharacterController crouching public bool crouching { get; } Property Value bool falling public bool falling { get; } Property Value bool grounded public bool grounded { get; } Property Value bool jumping public bool jumping { get; } Property Value bool lookDelta public Vector2 lookDelta { get; } Property Value Vector2 moveDelta public Vector3 moveDelta { get; } Property Value Vector3"
  },
  "ScriptReference/Animeska34.C3D.html": {
    "href": "ScriptReference/Animeska34.C3D.html",
    "title": "Namespace Animeska34.C3D | Animeska34 Docs",
    "keywords": "Namespace Animeska34.C3D Classes Controller3D"
  },
  "ScriptReference/Animeska34.DebugTools.Commands.Command.html": {
    "href": "ScriptReference/Animeska34.DebugTools.Commands.Command.html",
    "title": "Class Command | Animeska34 Docs",
    "keywords": "Class Command Namespace Animeska34.DebugTools.Commands Assembly Animeska34.DebugTools.dll public class Command : MonoBehaviour, ICommand Inheritance object Object Component Behaviour MonoBehaviour Command Implements ICommand Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields _command [SerializeField] protected string _command Field Value string _description [SerializeField] protected string _description Field Value string actions public UnityEvent<string[]> actions Field Value UnityEvent<string[]> Properties command public string command { get; } Property Value string description public string description { get; } Property Value string Methods Execute(string[]) public void Execute(string[] args) Parameters args string[]"
  },
  "ScriptReference/Animeska34.DebugTools.Commands.ExportCommand.html": {
    "href": "ScriptReference/Animeska34.DebugTools.Commands.ExportCommand.html",
    "title": "Class ExportCommand | Animeska34 Docs",
    "keywords": "Class ExportCommand Namespace Animeska34.DebugTools.Commands Assembly Animeska34.DebugTools.dll [DisallowMultipleComponent] public class ExportCommand : MonoBehaviour, ICommand Inheritance object Object Component Behaviour MonoBehaviour ExportCommand Implements ICommand Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties command public string command { get; } Property Value string description public string description { get; } Property Value string instance public static ExportCommand instance { get; } Property Value ExportCommand Methods Execute(string[]) public void Execute(string[] args) Parameters args string[]"
  },
  "ScriptReference/Animeska34.DebugTools.Commands.PlayerPrefsCommand.html": {
    "href": "ScriptReference/Animeska34.DebugTools.Commands.PlayerPrefsCommand.html",
    "title": "Class PlayerPrefsCommand | Animeska34 Docs",
    "keywords": "Class PlayerPrefsCommand Namespace Animeska34.DebugTools.Commands Assembly Animeska34.DebugTools.dll public class PlayerPrefsCommand : MonoBehaviour, ICommand Inheritance object Object Component Behaviour MonoBehaviour PlayerPrefsCommand Implements ICommand Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties command public string command { get; } Property Value string description public string description { get; } Property Value string Methods Execute(string[]) public void Execute(string[] args) Parameters args string[]"
  },
  "ScriptReference/Animeska34.DebugTools.Commands.QualitySettingsCommand.html": {
    "href": "ScriptReference/Animeska34.DebugTools.Commands.QualitySettingsCommand.html",
    "title": "Class QualitySettingsCommand | Animeska34 Docs",
    "keywords": "Class QualitySettingsCommand Namespace Animeska34.DebugTools.Commands Assembly Animeska34.DebugTools.dll public class QualitySettingsCommand : MonoBehaviour, ICommand Inheritance object Object Component Behaviour MonoBehaviour QualitySettingsCommand Implements ICommand Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties command public string command { get; } Property Value string description public string description { get; } Property Value string Methods Execute(string[]) public void Execute(string[] args) Parameters args string[]"
  },
  "ScriptReference/Animeska34.DebugTools.Commands.SceneCommand.html": {
    "href": "ScriptReference/Animeska34.DebugTools.Commands.SceneCommand.html",
    "title": "Class SceneCommand | Animeska34 Docs",
    "keywords": "Class SceneCommand Namespace Animeska34.DebugTools.Commands Assembly Animeska34.DebugTools.dll [DisallowMultipleComponent] [AddComponentMenu(\"Animeska34/Debug Tools/Console Commands/SceneHierarhy\")] public class SceneCommand : MonoBehaviour, ICommand Inheritance object Object Component Behaviour MonoBehaviour SceneCommand Implements ICommand Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties command public string command { get; } Property Value string description public string description { get; } Property Value string Methods Execute(string[]) public void Execute(string[] args) Parameters args string[] GetHierarhy() public string GetHierarhy() Returns string GetHierarhy(ref Scene) public string GetHierarhy(ref Scene scene) Parameters scene Scene Returns string GetHierarhy(Transform, int) public string GetHierarhy(Transform go, int level = 0) Parameters go Transform level int Returns string"
  },
  "ScriptReference/Animeska34.DebugTools.Commands.html": {
    "href": "ScriptReference/Animeska34.DebugTools.Commands.html",
    "title": "Namespace Animeska34.DebugTools.Commands | Animeska34 Docs",
    "keywords": "Namespace Animeska34.DebugTools.Commands Classes Command ExportCommand PlayerPrefsCommand QualitySettingsCommand SceneCommand"
  },
  "ScriptReference/Animeska34.DebugTools.Console.html": {
    "href": "ScriptReference/Animeska34.DebugTools.Console.html",
    "title": "Class Console | Animeska34 Docs",
    "keywords": "Class Console Namespace Animeska34.DebugTools Assembly Animeska34.DebugTools.dll public class Console : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Console Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields inputField public InputField inputField Field Value InputField Methods Handle(string) public void Handle(string text) Parameters text string HandleButton(string) public void HandleButton(string text) Parameters text string Submit() public void Submit()"
  },
  "ScriptReference/Animeska34.DebugTools.ConsoleHost.html": {
    "href": "ScriptReference/Animeska34.DebugTools.ConsoleHost.html",
    "title": "Class ConsoleHost | Animeska34 Docs",
    "keywords": "Class ConsoleHost Namespace Animeska34.DebugTools Assembly Animeska34.DebugTools.dll public class ConsoleHost : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ConsoleHost Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields maxBufferLength [Range(1, 255)] public byte maxBufferLength Field Value byte onLogRecived public UnityEvent onLogRecived Field Value UnityEvent Properties commands public static List<ICommand> commands { get; } Property Value List<ICommand> instance public static ConsoleHost instance { get; } Property Value ConsoleHost Methods Handle(string) public void Handle(string cmd) Parameters cmd string"
  },
  "ScriptReference/Animeska34.DebugTools.DebugRayDrawer.html": {
    "href": "ScriptReference/Animeska34.DebugTools.DebugRayDrawer.html",
    "title": "Class DebugRayDrawer | Animeska34 Docs",
    "keywords": "Class DebugRayDrawer Namespace Animeska34.DebugTools Assembly Animeska34.DebugTools.dll public class DebugRayDrawer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DebugRayDrawer Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "ScriptReference/Animeska34.DebugTools.ICommand.html": {
    "href": "ScriptReference/Animeska34.DebugTools.ICommand.html",
    "title": "Interface ICommand | Animeska34 Docs",
    "keywords": "Interface ICommand Namespace Animeska34.DebugTools Assembly Animeska34.DebugTools.dll public interface ICommand Properties command string command { get; } Property Value string description string description { get; } Property Value string Methods Execute(string[]) void Execute(string[] args) Parameters args string[]"
  },
  "ScriptReference/Animeska34.DebugTools.html": {
    "href": "ScriptReference/Animeska34.DebugTools.html",
    "title": "Namespace Animeska34.DebugTools | Animeska34 Docs",
    "keywords": "Namespace Animeska34.DebugTools Classes Console ConsoleHost DebugRayDrawer Interfaces ICommand"
  },
  "ScriptReference/Animeska34.DialogFramework.Character.html": {
    "href": "ScriptReference/Animeska34.DialogFramework.Character.html",
    "title": "Class Character | Animeska34 Docs",
    "keywords": "Class Character Namespace Animeska34.DialogFramework Assembly Animeska34.DialogFramework.dll The Character class represents a character within a dialog in the Unity environment. public class Character : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Character Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields animator The Animator component associated with the character for animation control. public Animator animator Field Value Animator The Character class represents a character within a dialog in the Unity environment. description The description of the character. public string description Field Value string The Character class represents a character within a dialog in the Unity environment. displayName The display name of the character. public string displayName Field Value string The Character class represents a character within a dialog in the Unity environment. Properties isMoving Indicates whether the character is currently in a state of movement. protected bool isMoving { get; } Property Value bool The Character class represents a character within a dialog in the Unity environment. position The position of the character represented by the RectTransform's anchorMin property. public Vector2 position { get; set; } Property Value Vector2 The Character class represents a character within a dialog in the Unity environment. rectTransform The RectTransform component associated with the character for UI positioning and sizing. public RectTransform rectTransform { get; } Property Value RectTransform The Character class represents a character within a dialog in the Unity environment. Methods Activate() Activates the character, enabling its functionality. public void Activate() Deactivate() Deactivates the character, disabling its functionality. public void Deactivate() LinearMove(CharacterPosition, float) Coroutine to linearly move the character to a new position within the dialog at a specified speed. public IEnumerator LinearMove(CharacterPosition newPosition, float speed) Parameters newPosition CharacterPosition The target position to move the character to. speed float The speed of the linear movement. Returns IEnumerator Coroutine enumerator. LinearMove(Vector2, float) Coroutine to linearly move the character to a new position at a specified speed. public IEnumerator LinearMove(Vector2 newPosition, float speed) Parameters newPosition Vector2 The target position to move the character to. speed float The speed of the linear movement. Returns IEnumerator Coroutine enumerator. Load(string) Static method to load a character with the specified name. public static Character Load(string name) Parameters name string The name of the character to load. Returns Character The loaded Character instance. Load(string, CharacterPosition) Static method to load a character with the specified name and position within the dialog. public static Character Load(string name, CharacterPosition position) Parameters name string The name of the character to load. position CharacterPosition The position of the character within the dialog. Returns Character The loaded Character instance. Load(string, Vector2) Static method to load a character with the specified name and initial position. public static Character Load(string name, Vector2 position) Parameters name string The name of the character to load. position Vector2 The initial position of the character. Returns Character The loaded Character instance. Move(CharacterPosition) Instantly moves the character to the specified position within the dialog. public void Move(CharacterPosition newPosition) Parameters newPosition CharacterPosition The target position to move the character to. Move(Vector2) Instantly moves the character to the specified position. public void Move(Vector2 newPosition) Parameters newPosition Vector2 The target position to move the character to. Say(string) Coroutine to make the character say the specified replic. public IEnumerator Say(string replic) Parameters replic string The text to be spoken by the character. Returns IEnumerator Coroutine enumerator. SmoothMove(CharacterPosition, float) Coroutine to smoothly move the character to a new position within the dialog over a specified duration. public IEnumerator SmoothMove(CharacterPosition newPosition, float t) Parameters newPosition CharacterPosition The target position to move the character to. t float The duration of the smooth movement. Returns IEnumerator Coroutine enumerator. SmoothMove(Vector2, float) Coroutine to smoothly move the character to a new position over a specified duration. public IEnumerator SmoothMove(Vector2 newPosition, float t) Parameters newPosition Vector2 The target position to move the character to. t float The duration of the smooth movement. Returns IEnumerator Coroutine enumerator."
  },
  "ScriptReference/Animeska34.DialogFramework.CharacterDatabase.html": {
    "href": "ScriptReference/Animeska34.DialogFramework.CharacterDatabase.html",
    "title": "Class CharacterDatabase | Animeska34 Docs",
    "keywords": "Class CharacterDatabase Namespace Animeska34.DialogFramework Assembly Animeska34.DialogFramework.dll ScriptableObject representing a database of characters in the Unity environment. [CreateAssetMenu(menuName = \"Animeska34/Character Database\")] public class CharacterDatabase : ScriptableObject Inheritance object Object ScriptableObject CharacterDatabase Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields characters List of characters contained in the CharacterDatabase. public List<Character> characters Field Value List<Character> ScriptableObject representing a database of characters in the Unity environment. Methods Find(string) Finds and returns the character with the specified name in the CharacterDatabase. public Character Find(string name) Parameters name string The name of the character to find. Returns Character The found Character instance or null if not found."
  },
  "ScriptReference/Animeska34.DialogFramework.CharacterPosition.html": {
    "href": "ScriptReference/Animeska34.DialogFramework.CharacterPosition.html",
    "title": "Enum CharacterPosition | Animeska34 Docs",
    "keywords": "Enum CharacterPosition Namespace Animeska34.DialogFramework Assembly Animeska34.DialogFramework.dll Enumeration representing the possible positions of a character within a dialog. public enum CharacterPosition Fields Center = 1 Center position. Left = 0 Left position. Right = 2 Right position."
  },
  "ScriptReference/Animeska34.DialogFramework.DialogBehaviour.html": {
    "href": "ScriptReference/Animeska34.DialogFramework.DialogBehaviour.html",
    "title": "Class DialogBehaviour | Animeska34 Docs",
    "keywords": "Class DialogBehaviour Namespace Animeska34.DialogFramework Assembly Animeska34.DialogFramework.dll public abstract class DialogBehaviour : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DialogBehaviour Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Input(string, out string) protected IEnumerator Input(string text, out string answer) Parameters text string answer string Returns IEnumerator Load(string) protected Character Load(string name) Parameters name string Returns Character Load(string, CharacterPosition) protected Character Load(string name, CharacterPosition position) Parameters name string position CharacterPosition Returns Character Load(string, Vector2) protected Character Load(string name, Vector2 position) Parameters name string position Vector2 Returns Character Play() public void Play() Play<T>() public static void Play<T>() where T : DialogBehaviour, new() Type Parameters T Prompt(string, out string, params string[]) protected IEnumerator Prompt(string text, out string answer, params string[] items) Parameters text string answer string items string[] Returns IEnumerator SetBackground(string, bool) protected void SetBackground(string name, bool preserveAspect = true) Parameters name string preserveAspect bool SetBackground(Sprite, bool) protected void SetBackground(Sprite sprite, bool preserveAspect = true) Parameters sprite Sprite preserveAspect bool Start() public abstract IEnumerator Start() Returns IEnumerator"
  },
  "ScriptReference/Animeska34.DialogFramework.DialogConfig.html": {
    "href": "ScriptReference/Animeska34.DialogFramework.DialogConfig.html",
    "title": "Class DialogConfig | Animeska34 Docs",
    "keywords": "Class DialogConfig Namespace Animeska34.DialogFramework Assembly Animeska34.DialogFramework.dll ScriptableObject representing the configuration for dialogs in the Unity environment. public class DialogConfig : ScriptableObject Inheritance object Object ScriptableObject DialogConfig Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields loadScene Indicates whether a specific scene should be loaded before the dialog starts. [SerializeField] public bool loadScene Field Value bool ScriptableObject representing the configuration for dialogs in the Unity environment. m_instance public static DialogConfig m_instance Field Value DialogConfig ScriptableObject representing the configuration for dialogs in the Unity environment. mode [SerializeField] [Tooltip(\"Mode, using to load dialog scene\")] public LoadSceneMode mode Field Value LoadSceneMode ScriptableObject representing the configuration for dialogs in the Unity environment. prefab The prefab of the dialog manager to instantiate when the dialog starts. (Works only if a scene with a dialog manager is not assigned.) [SerializeField] [Tooltip(\"Instantiate dialog manager when dialog starts (Works only if scene with dialog manager is not assigned)\")] public GameObject prefab Field Value GameObject ScriptableObject representing the configuration for dialogs in the Unity environment. scene The name of the scene to load before starting the dialog. [SerializeField] [Tooltip(\"Load scene with dialog manager when dialog starts\")] public string scene Field Value string ScriptableObject representing the configuration for dialogs in the Unity environment. Properties instance Static instance of the DialogConfig, providing access to dialog configuration settings. public static DialogConfig instance { get; } Property Value DialogConfig ScriptableObject representing the configuration for dialogs in the Unity environment."
  },
  "ScriptReference/Animeska34.DialogFramework.DialogManager.html": {
    "href": "ScriptReference/Animeska34.DialogFramework.DialogManager.html",
    "title": "Class DialogManager | Animeska34 Docs",
    "keywords": "Class DialogManager Namespace Animeska34.DialogFramework Assembly Animeska34.DialogFramework.dll The DialogManager class responsible for managing dialogs in the Unity environment. public class DialogManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DialogManager Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields background The Image component representing the background of the dialog. [Header(\"Background\")] public Image background Field Value Image The DialogManager class responsible for managing dialogs in the Unity environment. centerPosition The default position for characters in the center position within the dialog. public Vector2 centerPosition Field Value Vector2 The DialogManager class responsible for managing dialogs in the Unity environment. defaultBackground The default background Sprite to be used in the dialog when a specified background is not found. public Sprite defaultBackground Field Value Sprite The DialogManager class responsible for managing dialogs in the Unity environment. defaultCharacter public Character defaultCharacter Field Value Character The DialogManager class responsible for managing dialogs in the Unity environment. defaultPosition The default position of characters in the dialog when not specified. public CharacterPosition defaultPosition Field Value CharacterPosition The DialogManager class responsible for managing dialogs in the Unity environment. fastForwardMultiplier Multiplier applied to the text speed when fast-forwarding through the dialog. [Range(0, 100)] public float fastForwardMultiplier Field Value float The DialogManager class responsible for managing dialogs in the Unity environment. leftPosition The default position for characters in the left position within the dialog. public Vector2 leftPosition Field Value Vector2 The DialogManager class responsible for managing dialogs in the Unity environment. onDialogEnded UnityEvent invoked when the dialog has ended. public UnityEvent onDialogEnded Field Value UnityEvent The DialogManager class responsible for managing dialogs in the Unity environment. rightPosition The default position for characters in the right position within the dialog. public Vector2 rightPosition Field Value Vector2 The DialogManager class responsible for managing dialogs in the Unity environment. textSpeed The speed at which text is displayed during the dialog. [Range(0, 0.2)] public float textSpeed Field Value float The DialogManager class responsible for managing dialogs in the Unity environment. Properties backgroundDatabase The SpriteDatabase containing background Sprites for the dialog. public SpriteDatabase backgroundDatabase { get; set; } Property Value SpriteDatabase The DialogManager class responsible for managing dialogs in the Unity environment. characterDatabase The default character to be used in the dialog when not specified. Will instantiate if no characters are found in the database. public CharacterDatabase characterDatabase { get; set; } Property Value CharacterDatabase The DialogManager class responsible for managing dialogs in the Unity environment. characterParent The parent Transform under which character objects are placed in the dialog. public Transform characterParent { get; set; } Property Value Transform The DialogManager class responsible for managing dialogs in the Unity environment. currentCharacters The list of characters currently involved in the dialog. public List<Character> currentCharacters { get; } Property Value List<Character> The DialogManager class responsible for managing dialogs in the Unity environment. currentDialog The currently active DialogBehaviour instance in the DialogManager. public DialogBehaviour currentDialog { get; } Property Value DialogBehaviour The DialogManager class responsible for managing dialogs in the Unity environment. fastForward Indicates whether the dialog is currently in fast-forward mode. public bool fastForward { get; } Property Value bool The DialogManager class responsible for managing dialogs in the Unity environment. instance Static instance of the DialogManager, providing global access to dialog management. public static DialogManager instance { get; } Property Value DialogManager The DialogManager class responsible for managing dialogs in the Unity environment. isPlaying Indicates whether the dialog is currently playing. public static bool isPlaying { get; } Property Value bool The DialogManager class responsible for managing dialogs in the Unity environment. speaking Indicates whether someone is currently speaking in the dialog. public bool speaking { get; } Property Value bool The DialogManager class responsible for managing dialogs in the Unity environment. Methods Continue() Continues the dialog by either enabling fast forward or showing the next replic if already fast forwarding. public void Continue() GetBackground(string) Retrieves the background Sprite with the specified name from the backgroundDatabase. public Sprite GetBackground(string name) Parameters name string The name of the background Sprite to retrieve. Returns Sprite The found Sprite or null if not found. GetCharacter(string) Retrieves the character with the specified name from the currentCharacters list. public Character GetCharacter(string name) Parameters name string The name of the character to retrieve. Returns Character The found Character instance or null if not found. GetPosition(CharacterPosition) Retrieves the position vector associated with the specified CharacterPosition. public Vector2 GetPosition(CharacterPosition pos) Parameters pos CharacterPosition The CharacterPosition to get the position for. Returns Vector2 The position vector for the specified CharacterPosition. Play(DialogBehaviour) Plays the specified DialogBehaviour. public void Play(DialogBehaviour behaviour) Parameters behaviour DialogBehaviour The DialogBehaviour to play. Play<T>() Static method to play a dialog of type T. public static void Play<T>() where T : DialogBehaviour Type Parameters T The type of DialogBehaviour to play. Restart() Restarts the dialog, resetting its state. public void Restart() SetBackground(string, bool) Sets the background Sprite with the specified name from the backgroundDatabase. public void SetBackground(string name, bool preserveAspect = true) Parameters name string The name of the background Sprite to set. preserveAspect bool Flag indicating whether to preserve the aspect ratio of the Sprite. SetBackground(Sprite, bool) Sets the background Sprite for the dialog. public void SetBackground(Sprite bg, bool preserveAspect = true) Parameters bg Sprite The Sprite to set as the background. preserveAspect bool Flag indicating whether to preserve the aspect ratio of the Sprite."
  },
  "ScriptReference/Animeska34.DialogFramework.Exceptions.CharacterNotExists.html": {
    "href": "ScriptReference/Animeska34.DialogFramework.Exceptions.CharacterNotExists.html",
    "title": "Class CharacterNotExists | Animeska34 Docs",
    "keywords": "Class CharacterNotExists Namespace Animeska34.DialogFramework.Exceptions Assembly Animeska34.DialogFramework.dll public class CharacterNotExists : Exception, ISerializable Inheritance object Exception CharacterNotExists Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CharacterNotExists() public CharacterNotExists()"
  },
  "ScriptReference/Animeska34.DialogFramework.Exceptions.ManagerNotExists.html": {
    "href": "ScriptReference/Animeska34.DialogFramework.Exceptions.ManagerNotExists.html",
    "title": "Class ManagerNotExists | Animeska34 Docs",
    "keywords": "Class ManagerNotExists Namespace Animeska34.DialogFramework.Exceptions Assembly Animeska34.DialogFramework.dll public class ManagerNotExists : Exception, ISerializable Inheritance object Exception ManagerNotExists Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ManagerNotExists() public ManagerNotExists()"
  },
  "ScriptReference/Animeska34.DialogFramework.Exceptions.html": {
    "href": "ScriptReference/Animeska34.DialogFramework.Exceptions.html",
    "title": "Namespace Animeska34.DialogFramework.Exceptions | Animeska34 Docs",
    "keywords": "Namespace Animeska34.DialogFramework.Exceptions Classes CharacterNotExists ManagerNotExists"
  },
  "ScriptReference/Animeska34.DialogFramework.SpriteDatabase.html": {
    "href": "ScriptReference/Animeska34.DialogFramework.SpriteDatabase.html",
    "title": "Class SpriteDatabase | Animeska34 Docs",
    "keywords": "Class SpriteDatabase Namespace Animeska34.DialogFramework Assembly Animeska34.DialogFramework.dll ScriptableObject representing a database of Sprites in the Unity environment. [CreateAssetMenu(menuName = \"Animeska34/Sprite Database\")] public class SpriteDatabase : ScriptableObject Inheritance object Object ScriptableObject SpriteDatabase Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields sprites List of Sprites contained in the SpriteDatabase. public List<Sprite> sprites Field Value List<Sprite> ScriptableObject representing a database of Sprites in the Unity environment. Methods Find(string) Finds and returns the Sprite with the specified name in the SpriteDatabase. public Sprite Find(string name) Parameters name string The name of the Sprite to find. Returns Sprite The found Sprite or null if not found."
  },
  "ScriptReference/Animeska34.DialogFramework.html": {
    "href": "ScriptReference/Animeska34.DialogFramework.html",
    "title": "Namespace Animeska34.DialogFramework | Animeska34 Docs",
    "keywords": "Namespace Animeska34.DialogFramework Classes Character The Character class represents a character within a dialog in the Unity environment. CharacterDatabase ScriptableObject representing a database of characters in the Unity environment. DialogBehaviour DialogConfig ScriptableObject representing the configuration for dialogs in the Unity environment. DialogManager The DialogManager class responsible for managing dialogs in the Unity environment. SpriteDatabase ScriptableObject representing a database of Sprites in the Unity environment. Enums CharacterPosition Enumeration representing the possible positions of a character within a dialog."
  },
  "ScriptReference/Animeska34.ERCore.BreakVideo.html": {
    "href": "ScriptReference/Animeska34.ERCore.BreakVideo.html",
    "title": "Class BreakVideo | Animeska34 Docs",
    "keywords": "Class BreakVideo Namespace Animeska34.ERCore Assembly Animeska34.ERCore.dll [RequireComponent(typeof(VideoPlayer))] public class BreakVideo : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BreakVideo Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Break() public void Break()"
  },
  "ScriptReference/Animeska34.ERCore.CanvasAutoMainCamAssigner.html": {
    "href": "ScriptReference/Animeska34.ERCore.CanvasAutoMainCamAssigner.html",
    "title": "Class CanvasAutoMainCamAssigner | Animeska34 Docs",
    "keywords": "Class CanvasAutoMainCamAssigner Namespace Animeska34.ERCore Assembly Animeska34.ERCore.dll [RequireComponent(typeof(Canvas))] [AddComponentMenu(\"Animeska34/ER Core/Canvas Auto Main Camera Assigner\")] public class CanvasAutoMainCamAssigner : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CanvasAutoMainCamAssigner Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "ScriptReference/Animeska34.ERCore.CanvasScalerAdjuster.html": {
    "href": "ScriptReference/Animeska34.ERCore.CanvasScalerAdjuster.html",
    "title": "Class CanvasScalerAdjuster | Animeska34 Docs",
    "keywords": "Class CanvasScalerAdjuster Namespace Animeska34.ERCore Assembly Animeska34.ERCore.dll [ExecuteInEditMode] [RequireComponent(typeof(CanvasScaler))] [AddComponentMenu(\"Animeska34/ER Core/Canvas Scaler Adjuster\")] public class CanvasScalerAdjuster : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CanvasScalerAdjuster Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields preset public CanvasScalerPreset preset Field Value CanvasScalerPreset Methods Apply() public void Apply()"
  },
  "ScriptReference/Animeska34.ERCore.CanvasScalerPreset.html": {
    "href": "ScriptReference/Animeska34.ERCore.CanvasScalerPreset.html",
    "title": "Class CanvasScalerPreset | Animeska34 Docs",
    "keywords": "Class CanvasScalerPreset Namespace Animeska34.ERCore Assembly Animeska34.ERCore.dll [CreateAssetMenu] public class CanvasScalerPreset : ScriptableObject Inheritance object Object ScriptableObject CanvasScalerPreset Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields defaultSpriteDPI public float defaultSpriteDPI Field Value float fallbackScreenDPI public float fallbackScreenDPI Field Value float matchWidthOrHeight [Range(0, 1)] public float matchWidthOrHeight Field Value float physicalUnit public CanvasScaler.Unit physicalUnit Field Value CanvasScaler.Unit referencePixelsPerUnit public float referencePixelsPerUnit Field Value float referenceResolution public Vector2 referenceResolution Field Value Vector2 scaleFactor public float scaleFactor Field Value float scaleMode public CanvasScaler.ScaleMode scaleMode Field Value CanvasScaler.ScaleMode screenMatchMode public CanvasScaler.ScreenMatchMode screenMatchMode Field Value CanvasScaler.ScreenMatchMode"
  },
  "ScriptReference/Animeska34.ERCore.ConnectionManager.html": {
    "href": "ScriptReference/Animeska34.ERCore.ConnectionManager.html",
    "title": "Class ConnectionManager | Animeska34 Docs",
    "keywords": "Class ConnectionManager Namespace Animeska34.ERCore Assembly Animeska34.ERCore.dll [AddComponentMenu(\"Animeska34/ER Core/Connection Manager\")] public class ConnectionManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ConnectionManager Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties instance public static ConnectionManager instance { get; } Property Value ConnectionManager Methods Reconnect() public void Reconnect()"
  },
  "ScriptReference/Animeska34.ERCore.ConsoleControls.html": {
    "href": "ScriptReference/Animeska34.ERCore.ConsoleControls.html",
    "title": "Class ConsoleControls | Animeska34 Docs",
    "keywords": "Class ConsoleControls Namespace Animeska34.ERCore Assembly Animeska34.ERCore.dll [AddComponentMenu(\"Animeska34/ER Core/Console controls\")] public class ConsoleControls : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ConsoleControls Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields button public GameObject button Field Value GameObject console public GameObject console Field Value GameObject"
  },
  "ScriptReference/Animeska34.ERCore.DBCounter.html": {
    "href": "ScriptReference/Animeska34.ERCore.DBCounter.html",
    "title": "Class DBCounter | Animeska34 Docs",
    "keywords": "Class DBCounter Namespace Animeska34.ERCore Assembly Animeska34.ERCore.dll [RequireComponent(typeof(Stage))] public class DBCounter : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DBCounter Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields dB [ReadOnly] public float dB Field Value float device public string device Field Value string onRequiredDBLevelReached public UnityEvent onRequiredDBLevelReached Field Value UnityEvent pitch [ReadOnly] public float pitch Field Value float requiredDBLevel public float requiredDBLevel Field Value float rms [ReadOnly] public float rms Field Value float"
  },
  "ScriptReference/Animeska34.ERCore.DBLevelVizualizer.html": {
    "href": "ScriptReference/Animeska34.ERCore.DBLevelVizualizer.html",
    "title": "Class DBLevelVizualizer | Animeska34 Docs",
    "keywords": "Class DBLevelVizualizer Namespace Animeska34.ERCore Assembly Animeska34.ERCore.dll public class DBLevelVizualizer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DBLevelVizualizer Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields activation public float activation Field Value float offset public Vector2 offset Field Value Vector2 onActivation public UnityEvent onActivation Field Value UnityEvent scales public Image[] scales Field Value Image[] speed public float speed Field Value float Methods Set(float) public void Set(float value) Parameters value float"
  },
  "ScriptReference/Animeska34.ERCore.DefaultScenario.html": {
    "href": "ScriptReference/Animeska34.ERCore.DefaultScenario.html",
    "title": "Class DefaultScenario | Animeska34 Docs",
    "keywords": "Class DefaultScenario Namespace Animeska34.ERCore Assembly Animeska34.ERCore.dll public class DefaultScenario : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DefaultScenario Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties instance public static DefaultScenario instance { get; } Property Value DefaultScenario Methods Restart() public virtual void Restart() Scenario() protected virtual IEnumerator Scenario() Returns IEnumerator Start() protected virtual void Start()"
  },
  "ScriptReference/Animeska34.ERCore.DefaultStage.html": {
    "href": "ScriptReference/Animeska34.ERCore.DefaultStage.html",
    "title": "Class DefaultStage | Animeska34 Docs",
    "keywords": "Class DefaultStage Namespace Animeska34.ERCore Assembly Animeska34.ERCore.dll [RequireComponent(typeof(Stage))] public class DefaultStage : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DefaultStage Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties instance public static DefaultStage instance { get; } Property Value DefaultStage stage public Stage stage { get; } Property Value Stage Methods Awake() protected virtual void Awake() OnDisable() protected virtual void OnDisable() OnEnable() protected virtual void OnEnable() WaitForEnd() public static IEnumerator WaitForEnd() Returns IEnumerator"
  },
  "ScriptReference/Animeska34.ERCore.ERCoreConsole.html": {
    "href": "ScriptReference/Animeska34.ERCore.ERCoreConsole.html",
    "title": "Class ERCoreConsole | Animeska34 Docs",
    "keywords": "Class ERCoreConsole Namespace Animeska34.ERCore Assembly Animeska34.ERCore.dll public class ERCoreConsole : MonoBehaviour, ICommand Inheritance object Object Component Behaviour MonoBehaviour ERCoreConsole Implements ICommand Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties command public string command { get; } Property Value string description public string description { get; } Property Value string Methods Execute(string[]) public void Execute(string[] args) Parameters args string[]"
  },
  "ScriptReference/Animeska34.ERCore.PlatformDependantStageLibrary.html": {
    "href": "ScriptReference/Animeska34.ERCore.PlatformDependantStageLibrary.html",
    "title": "Class PlatformDependantStageLibrary | Animeska34 Docs",
    "keywords": "Class PlatformDependantStageLibrary Namespace Animeska34.ERCore Assembly Animeska34.ERCore.dll [CreateAssetMenu] public class PlatformDependantStageLibrary : BaseStageLibrary Inheritance object Object ScriptableObject BaseStageLibrary PlatformDependantStageLibrary Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties stages public override List<Stage> stages { get; } Property Value List<Stage>"
  },
  "ScriptReference/Animeska34.ERCore.Remote.ApplicationInfo.html": {
    "href": "ScriptReference/Animeska34.ERCore.Remote.ApplicationInfo.html",
    "title": "Class ApplicationInfo | Animeska34 Docs",
    "keywords": "Class ApplicationInfo Namespace Animeska34.ERCore.Remote Assembly Animeska34.ERCore.dll [Serializable] public class ApplicationInfo Inheritance object ApplicationInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields api public int api Field Value int developer public string developer Field Value string erCore public string erCore Field Value string isServer public bool isServer Field Value bool m_currentJson public static string m_currentJson Field Value string name public string name Field Value string platform public RuntimePlatform platform Field Value RuntimePlatform unity public string unity Field Value string version public string version Field Value string Properties current public static ApplicationInfo current { get; } Property Value ApplicationInfo currentJson public static string currentJson { get; } Property Value string Methods FromJSON(string) public static ApplicationInfo FromJSON(string json) Parameters json string Returns ApplicationInfo"
  },
  "ScriptReference/Animeska34.ERCore.Remote.ERCorePage.html": {
    "href": "ScriptReference/Animeska34.ERCore.Remote.ERCorePage.html",
    "title": "Class ERCorePage | Animeska34 Docs",
    "keywords": "Class ERCorePage Namespace Animeska34.ERCore.Remote Assembly Animeska34.ERCore.dll public class ERCorePage : UPage Inheritance object Object Component Behaviour MonoBehaviour UPage ERCorePage Inherited Members UPage.responceBody UPage.Awake() UPage.OnEnable() UPage.OnDisable() UPage.url UPage.requestBody UPage.getRequests UPage.postRequests MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods OnRequest(HttpListenerContext) protected override void OnRequest(HttpListenerContext context) Parameters context HttpListenerContext SetupURL() protected override void SetupURL()"
  },
  "ScriptReference/Animeska34.ERCore.Remote.html": {
    "href": "ScriptReference/Animeska34.ERCore.Remote.html",
    "title": "Namespace Animeska34.ERCore.Remote | Animeska34 Docs",
    "keywords": "Namespace Animeska34.ERCore.Remote Classes ApplicationInfo ERCorePage"
  },
  "ScriptReference/Animeska34.ERCore.SceneCon.html": {
    "href": "ScriptReference/Animeska34.ERCore.SceneCon.html",
    "title": "Class SceneCon | Animeska34 Docs",
    "keywords": "Class SceneCon Namespace Animeska34.ERCore Assembly Animeska34.ERCore.dll [AddComponentMenu(\"Animeska34/ER Core/Scene Con\")] public class SceneCon : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SceneCon Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "ScriptReference/Animeska34.ERCore.StageCanvasOffsetAdjuster.html": {
    "href": "ScriptReference/Animeska34.ERCore.StageCanvasOffsetAdjuster.html",
    "title": "Class StageCanvasOffsetAdjuster | Animeska34 Docs",
    "keywords": "Class StageCanvasOffsetAdjuster Namespace Animeska34.ERCore Assembly Animeska34.ERCore.dll [RequireComponent(typeof(RectTransform))] [AddComponentMenu(\"Animeska34/ER Core/Stage Offset Adjuster\")] public class StageCanvasOffsetAdjuster : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour StageCanvasOffsetAdjuster Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object)"
  },
  "ScriptReference/Animeska34.ERCore.html": {
    "href": "ScriptReference/Animeska34.ERCore.html",
    "title": "Namespace Animeska34.ERCore | Animeska34 Docs",
    "keywords": "Namespace Animeska34.ERCore Classes BreakVideo CanvasAutoMainCamAssigner CanvasScalerAdjuster CanvasScalerPreset ConnectionManager ConsoleControls DBCounter DBLevelVizualizer DefaultScenario DefaultStage ERCoreConsole PlatformDependantStageLibrary SceneCon StageCanvasOffsetAdjuster"
  },
  "ScriptReference/Animeska34.Essentials.CustomEditor.PackageImporter.html": {
    "href": "ScriptReference/Animeska34.Essentials.CustomEditor.PackageImporter.html",
    "title": "Class PackageImporter | Animeska34 Docs",
    "keywords": "Class PackageImporter Namespace Animeska34.Essentials.CustomEditor Assembly Animeska34.Essentials.CustomEditor.dll [ScriptedImporter(1, \"package.json\")] public class PackageImporter : ScriptedImporter Inheritance object Object AssetImporter ScriptedImporter PackageImporter Inherited Members ScriptedImporter.SupportsRemappedAssetType(Type) AssetImporter.GetImportLog(string) AssetImporter.SetAssetBundleNameAndVariant(string, string) AssetImporter.GetAtPath(string) AssetImporter.SaveAndReimport() AssetImporter.AddRemap(AssetImporter.SourceAssetIdentifier, Object) AssetImporter.RemoveRemap(AssetImporter.SourceAssetIdentifier) AssetImporter.GetExternalObjectMap() AssetImporter.assetPath AssetImporter.importSettingsMissing AssetImporter.assetTimeStamp AssetImporter.userData AssetImporter.assetBundleName AssetImporter.assetBundleVariant Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields test public int test Field Value int Methods OnImportAsset(AssetImportContext) This method must by overriden by the derived class and is called by the Asset pipeline to import files. public override void OnImportAsset(AssetImportContext ctx) Parameters ctx AssetImportContext This argument contains all the contextual information needed to process the import event and is also used by the custom importer to store the resulting Unity Asset."
  },
  "ScriptReference/Animeska34.Essentials.CustomEditor.html": {
    "href": "ScriptReference/Animeska34.Essentials.CustomEditor.html",
    "title": "Namespace Animeska34.Essentials.CustomEditor | Animeska34 Docs",
    "keywords": "Namespace Animeska34.Essentials.CustomEditor Classes PackageImporter"
  },
  "ScriptReference/Animeska34.Essentials.Editor.Prefabs.html": {
    "href": "ScriptReference/Animeska34.Essentials.Editor.Prefabs.html",
    "title": "Class Prefabs | Animeska34 Docs",
    "keywords": "Class Prefabs Namespace Animeska34.Essentials.Editor Assembly Animeska34.Essentials.Editor.dll public static class Prefabs Inheritance object Prefabs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InstantiateByGUID(string, MenuCommand) public static GameObject InstantiateByGUID(string guid, MenuCommand menuCommand) Parameters guid string menuCommand MenuCommand Returns GameObject InstantiateByGUID<T>(string, MenuCommand) public static T InstantiateByGUID<T>(string guid, MenuCommand menuCommand) where T : MonoBehaviour Parameters guid string menuCommand MenuCommand Returns T Type Parameters T InstantiateFromResources(string, MenuCommand) public static GameObject InstantiateFromResources(string path, MenuCommand menuCommand) Parameters path string menuCommand MenuCommand Returns GameObject InstantiateFromResources<T>(string, MenuCommand) public static T InstantiateFromResources<T>(string path, MenuCommand menuCommand) where T : MonoBehaviour Parameters path string menuCommand MenuCommand Returns T Type Parameters T InstantiateGameObject(GameObject, MenuCommand) public static GameObject InstantiateGameObject(GameObject item, MenuCommand menuCommand) Parameters item GameObject menuCommand MenuCommand Returns GameObject"
  },
  "ScriptReference/Animeska34.Essentials.Editor.ProjectPrefs.html": {
    "href": "ScriptReference/Animeska34.Essentials.Editor.ProjectPrefs.html",
    "title": "Class ProjectPrefs | Animeska34 Docs",
    "keywords": "Class ProjectPrefs Namespace Animeska34.Essentials.Editor Assembly Animeska34.Essentials.Editor.dll public static class ProjectPrefs Inheritance object ProjectPrefs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInt(string, int) public static int GetInt(string name, int defaultValue = 0) Parameters name string defaultValue int Returns int GetString(string, string) public static string GetString(string name, string defaultValue = \"\") Parameters name string defaultValue string Returns string Save() public static void Save() SetInt(string, int) public static void SetInt(string name, int value) Parameters name string value int SetString(string, string) public static void SetString(string name, string value) Parameters name string value string"
  },
  "ScriptReference/Animeska34.Essentials.Editor.ReadOnlyDrawer.html": {
    "href": "ScriptReference/Animeska34.Essentials.Editor.ReadOnlyDrawer.html",
    "title": "Class ReadOnlyDrawer | Animeska34 Docs",
    "keywords": "Class ReadOnlyDrawer Namespace Animeska34.Essentials.Editor Assembly Animeska34.Essentials.CustomEditor.dll [CustomPropertyDrawer(typeof(ReadOnlyAttribute))] public class ReadOnlyDrawer : PropertyDrawer Inheritance object GUIDrawer PropertyDrawer ReadOnlyDrawer Inherited Members PropertyDrawer.CreatePropertyGUI(SerializedProperty) PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) PropertyDrawer.CanCacheInspectorGUI(SerializedProperty) PropertyDrawer.attribute PropertyDrawer.fieldInfo PropertyDrawer.preferredLabel object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnGUI(Rect, SerializedProperty, GUIContent) Override this method to make your own IMGUI based GUI for the property. public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters position Rect Rectangle on the screen to use for the property GUI. property SerializedProperty The SerializedProperty to make the custom GUI for. label GUIContent The label of this property."
  },
  "ScriptReference/Animeska34.Essentials.Editor.SceneHierarchyWindow.html": {
    "href": "ScriptReference/Animeska34.Essentials.Editor.SceneHierarchyWindow.html",
    "title": "Class SceneHierarchyWindow | Animeska34 Docs",
    "keywords": "Class SceneHierarchyWindow Namespace Animeska34.Essentials.Editor Assembly Animeska34.Essentials.Editor.dll public static class SceneHierarchyWindow Inheritance object SceneHierarchyWindow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FrameObject(int, bool) public static void FrameObject(int instanceID, bool ping = false) Parameters instanceID int ping bool FrameObject(GameObject, bool) public static void FrameObject(GameObject go, bool ping = false) Parameters go GameObject ping bool FrameSelected(bool) public static void FrameSelected(bool ping = false) Parameters ping bool GetInstance() public static EditorWindow GetInstance() Returns EditorWindow"
  },
  "ScriptReference/Animeska34.Essentials.Editor.html": {
    "href": "ScriptReference/Animeska34.Essentials.Editor.html",
    "title": "Namespace Animeska34.Essentials.Editor | Animeska34 Docs",
    "keywords": "Namespace Animeska34.Essentials.Editor Classes Prefabs ProjectPrefs SceneHierarchyWindow"
  },
  "ScriptReference/Animeska34.Essentials.ReadOnlyAttribute.html": {
    "href": "ScriptReference/Animeska34.Essentials.ReadOnlyAttribute.html",
    "title": "Class ReadOnlyAttribute | Animeska34 Docs",
    "keywords": "Class ReadOnlyAttribute Namespace Animeska34.Essentials Assembly Animeska34.Essentials.dll public class ReadOnlyAttribute : PropertyAttribute Inheritance object Attribute PropertyAttribute ReadOnlyAttribute Inherited Members PropertyAttribute.order Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "ScriptReference/Animeska34.Essentials.SafeAreaFitter.html": {
    "href": "ScriptReference/Animeska34.Essentials.SafeAreaFitter.html",
    "title": "Class SafeAreaFitter | Animeska34 Docs",
    "keywords": "Class SafeAreaFitter Namespace Animeska34.Essentials Assembly Animeska34.Essentials.dll [RequireComponent(typeof(RectTransform))] public class SafeAreaFitter : UIBehaviour Inheritance object Object Component Behaviour MonoBehaviour UIBehaviour SafeAreaFitter Inherited Members UIBehaviour.Awake() UIBehaviour.OnEnable() UIBehaviour.OnDisable() UIBehaviour.OnDestroy() UIBehaviour.IsActive() UIBehaviour.OnValidate() UIBehaviour.Reset() UIBehaviour.OnBeforeTransformParentChanged() UIBehaviour.OnTransformParentChanged() UIBehaviour.OnDidApplyAnimationProperties() UIBehaviour.OnCanvasGroupChanged() UIBehaviour.OnCanvasHierarchyChanged() UIBehaviour.IsDestroyed() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods OnRectTransformDimensionsChange() protected override void OnRectTransformDimensionsChange() Start() protected override void Start()"
  },
  "ScriptReference/Animeska34.Essentials.TransformExtension.html": {
    "href": "ScriptReference/Animeska34.Essentials.TransformExtension.html",
    "title": "Class TransformExtension | Animeska34 Docs",
    "keywords": "Class TransformExtension Namespace Animeska34.Essentials Assembly Animeska34.Essentials.dll public static class TransformExtension Inheritance object TransformExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods EnsureInsideCanvas(Transform, bool) public static bool EnsureInsideCanvas(this Transform transform, bool createIfNotExists = false) Parameters transform Transform createIfNotExists bool Returns bool EnsureInside<T>(Transform, bool) public static bool EnsureInside<T>(this Transform transform, bool createIfNotExists = false) where T : Component Parameters transform Transform createIfNotExists bool Returns bool Type Parameters T"
  },
  "ScriptReference/Animeska34.Essentials.html": {
    "href": "ScriptReference/Animeska34.Essentials.html",
    "title": "Namespace Animeska34.Essentials | Animeska34 Docs",
    "keywords": "Namespace Animeska34.Essentials Classes ReadOnlyAttribute SafeAreaFitter TransformExtension"
  },
  "ScriptReference/Animeska34.IO.CryptoUtility.html": {
    "href": "ScriptReference/Animeska34.IO.CryptoUtility.html",
    "title": "Class CryptoUtility | Animeska34 Docs",
    "keywords": "Class CryptoUtility Namespace Animeska34.IO Assembly Animeska34.IO.dll public static class CryptoUtility Inheritance object CryptoUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Decode(byte[], string) public static byte[] Decode(byte[] data, string pass) Parameters data byte[] pass string Returns byte[] Decode(string, string) public static byte[] Decode(string data, string pass) Parameters data string pass string Returns byte[] DecodeAsync(byte[], string) public static Task<byte[]> DecodeAsync(byte[] data, string pass) Parameters data byte[] pass string Returns Task<byte[]> DecodeAsync(string, string) public static Task<byte[]> DecodeAsync(string data, string pass) Parameters data string pass string Returns Task<byte[]> DecodeToString(byte[], string) public static string DecodeToString(byte[] data, string pass) Parameters data byte[] pass string Returns string DecodeToString(byte[], string, Encoding) public static string DecodeToString(byte[] data, string pass, Encoding encoding) Parameters data byte[] pass string encoding Encoding Returns string DecodeToString(string, string) public static string DecodeToString(string data, string pass) Parameters data string pass string Returns string DecodeToString(string, string, Encoding) public static string DecodeToString(string data, string pass, Encoding encoding) Parameters data string pass string encoding Encoding Returns string DecodeToStringAsync(byte[], string) public static Task<string> DecodeToStringAsync(byte[] data, string pass) Parameters data byte[] pass string Returns Task<string> DecodeToStringAsync(byte[], string, Encoding) public static Task<string> DecodeToStringAsync(byte[] data, string pass, Encoding encoding) Parameters data byte[] pass string encoding Encoding Returns Task<string> DecodeToStringAsync(string, string) public static Task<string> DecodeToStringAsync(string data, string pass) Parameters data string pass string Returns Task<string> DecodeToStringAsync(string, string, Encoding) public static Task<string> DecodeToStringAsync(string data, string pass, Encoding encoding) Parameters data string pass string encoding Encoding Returns Task<string> Encode(byte[], string) public static byte[] Encode(byte[] data, string pass) Parameters data byte[] pass string Returns byte[] Encode(string, string) public static byte[] Encode(string data, string pass) Parameters data string pass string Returns byte[] Encode(string, string, Encoding) public static byte[] Encode(string data, string pass, Encoding encoding) Parameters data string pass string encoding Encoding Returns byte[] EncodeAsync(byte[], string) public static Task<byte[]> EncodeAsync(byte[] data, string pass) Parameters data byte[] pass string Returns Task<byte[]> EncodeAsync(string, string) public static Task<byte[]> EncodeAsync(string data, string pass) Parameters data string pass string Returns Task<byte[]> EncodeAsync(string, string, Encoding) public static Task<byte[]> EncodeAsync(string data, string pass, Encoding encoding) Parameters data string pass string encoding Encoding Returns Task<byte[]> EncodeToString(byte[], string) public static string EncodeToString(byte[] data, string pass) Parameters data byte[] pass string Returns string EncodeToString(string, string) public static string EncodeToString(string data, string pass) Parameters data string pass string Returns string EncodeToString(string, string, Encoding) public static string EncodeToString(string data, string pass, Encoding encoding) Parameters data string pass string encoding Encoding Returns string EncodeToStringAsync(byte[], string) public static Task<string> EncodeToStringAsync(byte[] data, string pass) Parameters data byte[] pass string Returns Task<string> EncodeToStringAsync(string, string) public static Task<string> EncodeToStringAsync(string data, string pass) Parameters data string pass string Returns Task<string> EncodeToStringAsync(string, string, Encoding) public static Task<string> EncodeToStringAsync(string data, string pass, Encoding encoding) Parameters data string pass string encoding Encoding Returns Task<string> Setup(string, int) public static void Setup(string salt, int iterations = 10000) Parameters salt string iterations int"
  },
  "ScriptReference/Animeska34.IO.DeflateUtility.html": {
    "href": "ScriptReference/Animeska34.IO.DeflateUtility.html",
    "title": "Class DeflateUtility | Animeska34 Docs",
    "keywords": "Class DeflateUtility Namespace Animeska34.IO Assembly Animeska34.IO.dll public static class DeflateUtility Inheritance object DeflateUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Compress(byte[], CompressionLevel) public static byte[] Compress(byte[] data, CompressionLevel level = CompressionLevel.Optimal) Parameters data byte[] level CompressionLevel Returns byte[] Compress(string, CompressionLevel) public static byte[] Compress(string data, CompressionLevel level = CompressionLevel.Optimal) Parameters data string level CompressionLevel Returns byte[] Compress(string, Encoding, CompressionLevel) public static byte[] Compress(string data, Encoding encoding, CompressionLevel level = CompressionLevel.Optimal) Parameters data string encoding Encoding level CompressionLevel Returns byte[] CompressAsync(byte[], CompressionLevel) public static Task<byte[]> CompressAsync(byte[] data, CompressionLevel level = CompressionLevel.Optimal) Parameters data byte[] level CompressionLevel Returns Task<byte[]> CompressAsync(string, CompressionLevel) public static Task<byte[]> CompressAsync(string data, CompressionLevel level = CompressionLevel.Optimal) Parameters data string level CompressionLevel Returns Task<byte[]> CompressAsync(string, Encoding, CompressionLevel) public static Task<byte[]> CompressAsync(string data, Encoding encoding, CompressionLevel level = CompressionLevel.Optimal) Parameters data string encoding Encoding level CompressionLevel Returns Task<byte[]> CompressToString(byte[], CompressionLevel) public static string CompressToString(byte[] data, CompressionLevel level = CompressionLevel.Optimal) Parameters data byte[] level CompressionLevel Returns string CompressToString(string, CompressionLevel) public static string CompressToString(string data, CompressionLevel level = CompressionLevel.Optimal) Parameters data string level CompressionLevel Returns string CompressToString(string, Encoding, CompressionLevel) public static string CompressToString(string data, Encoding encoding, CompressionLevel level = CompressionLevel.Optimal) Parameters data string encoding Encoding level CompressionLevel Returns string CompressToStringAsync(byte[], CompressionLevel) public static Task<string> CompressToStringAsync(byte[] data, CompressionLevel level = CompressionLevel.Optimal) Parameters data byte[] level CompressionLevel Returns Task<string> CompressToStringAsync(string, CompressionLevel) public static Task<string> CompressToStringAsync(string data, CompressionLevel level = CompressionLevel.Optimal) Parameters data string level CompressionLevel Returns Task<string> CompressToStringAsync(string, Encoding, CompressionLevel) public static Task<string> CompressToStringAsync(string data, Encoding encoding, CompressionLevel level = CompressionLevel.Optimal) Parameters data string encoding Encoding level CompressionLevel Returns Task<string> Decompress(byte[]) public static byte[] Decompress(byte[] data) Parameters data byte[] Returns byte[] Decompress(string) public static byte[] Decompress(string data) Parameters data string Returns byte[] DecompressAsync(byte[]) public static Task<byte[]> DecompressAsync(byte[] data) Parameters data byte[] Returns Task<byte[]> DecompressAsync(string) public static Task<byte[]> DecompressAsync(string data) Parameters data string Returns Task<byte[]> DecompressString(byte[]) public static string DecompressString(byte[] data) Parameters data byte[] Returns string DecompressString(byte[], Encoding) public static string DecompressString(byte[] data, Encoding encoding) Parameters data byte[] encoding Encoding Returns string DecompressString(string) public static string DecompressString(string data) Parameters data string Returns string DecompressString(string, Encoding) public static string DecompressString(string data, Encoding encoding) Parameters data string encoding Encoding Returns string DecompressStringAsync(byte[]) public static Task<string> DecompressStringAsync(byte[] data) Parameters data byte[] Returns Task<string> DecompressStringAsync(byte[], Encoding) public static Task<string> DecompressStringAsync(byte[] data, Encoding encoding) Parameters data byte[] encoding Encoding Returns Task<string> DecompressStringAsync(string) public static Task<string> DecompressStringAsync(string data) Parameters data string Returns Task<string> DecompressStringAsync(string, Encoding) public static Task<string> DecompressStringAsync(string data, Encoding encoding) Parameters data string encoding Encoding Returns Task<string>"
  },
  "ScriptReference/Animeska34.IO.FileUtility.html": {
    "href": "ScriptReference/Animeska34.IO.FileUtility.html",
    "title": "Class FileUtility | Animeska34 Docs",
    "keywords": "Class FileUtility Namespace Animeska34.IO Assembly Animeska34.IO.dll Default object save methods. public static class FileUtility Inheritance object FileUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties savePath Current save path of PRJVR public static string savePath { get; } Property Value string Default object save methods. Methods CreatePath(string) Create Path if not exists public static bool CreatePath(string fileName) Parameters fileName string Relative path Returns bool Exists(string) Check if file exists public static bool Exists(string fileName) Parameters fileName string Relative path Returns bool GetPath(string) Get absolute path public static string GetPath(string fileName) Parameters fileName string Relative path Returns string ReadBytes(string, byte[]) Read bytes from file public static byte[] ReadBytes(string fileName, byte[] defaultData = null) Parameters fileName string Relative path defaultData byte[] Default data Returns byte[] ReadJson<T>(string, T) Read object from file. public static T ReadJson<T>(string fileName, T defaultValue = default) Parameters fileName string Name of file to be read defaultValue T Default value will be returned if file not exists Returns T Object loaded from file Type Parameters T Type of object to read from file ReadText(string, string) Read text from file public static string ReadText(string fileName, string defaultValue = \"\") Parameters fileName string Relative path defaultValue string Default text Returns string WriteBytes(string, byte[]) Write bytes to file public static void WriteBytes(string fileName, byte[] data) Parameters fileName string Relative path data byte[] Bytes WriteJson(string, object) Serialize object and write to file public static void WriteJson(string fileName, object data) Parameters fileName string name of file to be saved data object object to save WriteText(string, string) Write text to file public static void WriteText(string fileName, string data) Parameters fileName string Relative path data string Text"
  },
  "ScriptReference/Animeska34.IO.Test.html": {
    "href": "ScriptReference/Animeska34.IO.Test.html",
    "title": "Class Test | Animeska34 Docs",
    "keywords": "Class Test Namespace Animeska34.IO Assembly Animeska34.IO.dll public class Test : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Test Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields decryptedData [TextArea] public string decryptedData Field Value string encrypt public bool encrypt Field Value bool encryptedData [TextArea] public string encryptedData Field Value string password public string password Field Value string rawData [TextArea] public string rawData Field Value string"
  },
  "ScriptReference/Animeska34.IO.html": {
    "href": "ScriptReference/Animeska34.IO.html",
    "title": "Namespace Animeska34.IO | Animeska34 Docs",
    "keywords": "Namespace Animeska34.IO Classes CryptoUtility DeflateUtility FileUtility Default object save methods. Test"
  },
  "ScriptReference/Animeska34.InventorySystem.Durable.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.Durable.html",
    "title": "Class Durable | Animeska34 Docs",
    "keywords": "Class Durable Namespace Animeska34.InventorySystem Assembly Animeska34.InventorySystem.dll Item with durability that can be damaged. [Serializable] [CreateAssetMenu(menuName = \"Animeska34/Inventory System/Item (Durable)\", order = 1)] public class Durable : Item Inheritance object Object ScriptableObject Item Durable Inherited Members Item.data Item.name Item.visualName Item.description Item.icon Item.itemObject Item.weight Item.overallWeight Item.instantiatable Item.instance Item.onDestroy Item.onUpdated Item.Refresh() Item.Instantiate(Vector3, Quaternion, Transform) Item.Instantiate(Vector3, Quaternion) Item.Instantiate(Transform) Item.OnDestroy() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields onBroken Calls when the item is broken. [NonSerialized] public UnityEvent onBroken Field Value UnityEvent Item with durability that can be damaged. onDamage Calls when the item is damaged. [NonSerialized] public UnityEvent onDamage Field Value UnityEvent Item with durability that can be damaged. onRepair Calls when the item is repaired. [NonSerialized] public UnityEvent onRepair Field Value UnityEvent Item with durability that can be damaged. onRepaired Calls when the item is fully repaired. [NonSerialized] public UnityEvent onRepaired Field Value UnityEvent Item with durability that can be damaged. Properties cost Gets the cost of a single item. public override float cost { get; } Property Value float Item with durability that can be damaged. durability Current durability of the durable item. public virtual float durability { get; } Property Value float Item with durability that can be damaged. durabilityNormalized Normalized value representing the current durability relative to the maximum durability. public float durabilityNormalized { get; } Property Value float Item with durability that can be damaged. maxDurability Maximum durability that the durable item can have. public virtual float maxDurability { get; } Property Value float Item with durability that can be damaged. overallCost Gets the overall cost of the item. If the item is stackable, represents the cost of the entire stack. public override float overallCost { get; } Property Value float Item with durability that can be damaged. Methods Damage(float) Damage the item. public virtual void Damage(float points) Parameters points float The amount of damage to apply. Repair(float) Repair the item. public virtual void Repair(float points) Parameters points float The amount of repair to apply. SetDurability(float) Set the durability of the item. public virtual void SetDurability(float newDurability) Parameters newDurability float The new durability value to set. Validate() Validates the item properties. Returns true if the properties are valid, false otherwise. protected override bool Validate() Returns bool True if the properties are valid, false otherwise."
  },
  "ScriptReference/Animeska34.InventorySystem.IInventory.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.IInventory.html",
    "title": "Interface IInventory | Animeska34 Docs",
    "keywords": "Interface IInventory Namespace Animeska34.InventorySystem Assembly Animeska34.InventorySystem.dll Base inventory interface, implementing IEnumerable and IEnumerator. public interface IInventory : IEnumerable, IEnumerator Inherited Members IEnumerable.GetEnumerator() IEnumerator.MoveNext() IEnumerator.Reset() IEnumerator.Current Remarks This interface defines the basic structure for an inventory and extends IEnumerable and IEnumerator. Developers can implement this interface for custom inventory systems, providing iteration and enumeration capabilities. Properties this[Item] Gets the index of a specific item in the inventory. int this[Item item] { get; } Parameters item Item The item to retrieve the index for. Property Value int The index of the specified item in the inventory. Remarks This indexer allows developers to retrieve the index of a specific item in the inventory. Returns the index of the specified item. this[int] Gets an item from the inventory based on its position in the list. Item this[int id] { get; } Parameters id int The position of the item in the list to retrieve from the inventory. Property Value Item The item at the specified position if found; otherwise, null. Remarks This indexer allows developers to retrieve an item from the inventory based on its position in the list. Returns the item at the specified position if found; otherwise, returns null. this[string] Get first item by name Item this[string name] { get; } Parameters name string Item name Property Value Item First item with matching name cost Gets the total cost of the inventory (sum of all items' costs). double cost { get; } Property Value double Base inventory interface, implementing IEnumerable and IEnumerator. Remarks This property returns the total cost of the inventory, which is the sum of the costs of all items within the inventory. Developers can use this property to obtain the combined cost of all items present in the inventory. count Gets the count of items in the inventory. int count { get; } Property Value int Base inventory interface, implementing IEnumerable and IEnumerator. Remarks This property returns the count of items currently present in the inventory. Developers can use this property to retrieve the total number of items within the inventory. loaded UnityEvent invoked when the inventory has been loaded. UnityEvent loaded { get; } Property Value UnityEvent Base inventory interface, implementing IEnumerable and IEnumerator. Remarks This UnityEvent is triggered when the inventory has been successfully loaded. Developers can subscribe to this event to receive notifications about the completion of the inventory loading process. onContentUpdated UnityEvent invoked when the content of the inventory is updated. UnityEvent onContentUpdated { get; } Property Value UnityEvent Base inventory interface, implementing IEnumerable and IEnumerator. Remarks This UnityEvent is triggered when there are changes to the content of the inventory, such as items being added or removed. Developers can subscribe to this event to receive notifications about updates to the inventory content. onItemAdded Gets the first item from the inventory with a specified name. UnityEvent<Item> onItemAdded { get; } Property Value UnityEvent<Item> The first item with the specified name if found; otherwise, null. Remarks This indexer allows developers to retrieve the first item from the inventory with a specified name. Returns the first item with the specified name if found; otherwise, returns null. onItemDestroyed UnityEvent invoked when an item is destroyed in the inventory. UnityEvent<Item> onItemDestroyed { get; } Property Value UnityEvent<Item> Base inventory interface, implementing IEnumerable and IEnumerator. Remarks This UnityEvent is triggered when an item is destroyed (removed with a quantity of zero) from the inventory. Developers can subscribe to this event to receive notifications about item destructions. The event parameter includes the item that was destroyed in the inventory. onItemQuantityChanged UnityEvent invoked when the quantity of an item in the inventory changes. UnityEvent<Item, uint, bool> onItemQuantityChanged { get; } Property Value UnityEvent<Item, uint, bool> Base inventory interface, implementing IEnumerable and IEnumerator. Remarks This UnityEvent is triggered when the quantity of an item in the inventory is modified. Developers can subscribe to this event to receive notifications about changes in item quantity. The event parameters include the item affected, the new quantity, and a boolean indicating if the change was an addition (true) or removal (false). onItemRemoved UnityEvent invoked when an item is removed from the inventory. UnityEvent<Item> onItemRemoved { get; } Property Value UnityEvent<Item> Base inventory interface, implementing IEnumerable and IEnumerator. Remarks This UnityEvent is triggered when an item is successfully removed from the inventory. Developers can subscribe to this event to receive notifications about item removals. The event parameter includes the item that was removed from the inventory. slotLimit Gets the slot limit of the inventory. float slotLimit { get; } Property Value float Base inventory interface, implementing IEnumerable and IEnumerator. Remarks This property returns the slot limit of the inventory, indicating the maximum number of slots available. Developers can use this property to retrieve and manage the slot limit of the inventory. useSlotLimit Gets a value indicating whether the inventory uses slot limits. bool useSlotLimit { get; } Property Value bool Base inventory interface, implementing IEnumerable and IEnumerator. Remarks This property returns a boolean value indicating whether the inventory implements slot limits. Developers can use this property to check if the inventory has a limit on the number of slots available. useWeightLimit Gets a value indicating whether the inventory uses weight limits. bool useWeightLimit { get; } Property Value bool Base inventory interface, implementing IEnumerable and IEnumerator. Remarks This property returns a boolean value indicating whether the inventory implements weight limits. Developers can use this property to check if the inventory has a limit on the total weight it can hold. weight Gets the total weight of items in the inventory. float weight { get; } Property Value float Base inventory interface, implementing IEnumerable and IEnumerator. Remarks This property returns the total weight of items currently present in the inventory. Developers can use this property to retrieve the combined weight of all items within the inventory. weightLimit Gets the weight limit of the inventory. float weightLimit { get; } Property Value float Base inventory interface, implementing IEnumerable and IEnumerator. Remarks This property returns the weight limit of the inventory, indicating the maximum total weight it can hold. Developers can use this property to retrieve and manage the weight limit of the inventory. Methods Contains(string, uint) Checks if the inventory contains a specific item with the given name and quantity. bool Contains(string name, uint quantity = 1) Parameters name string The name of the item to check for in the inventory. quantity uint The quantity of the item to check for (default is 1). Returns bool True if the inventory contains the item with the specified name and quantity (or the item is non-stackable and quantity is 1); otherwise, false. Remarks This method allows developers to check if the inventory contains a specific item with the given name and quantity. Returns true if the item is found in the inventory with at least the specified quantity (or the item is non-stackable and quantity is 1); otherwise, returns false. GetIndexed<T>() Gets items of a specific type as a dictionary. Dictionary<int, T> GetIndexed<T>() where T : Item Returns Dictionary<int, T> A dictionary where the key is the index of the item in the inventory. Type Parameters T Type of items to get. Remarks This method allows developers to retrieve items of a specific type from the inventory as a dictionary. The dictionary key represents the index of the item in the inventory. GetItemsIndexed(Type) Gets items of a specific type as a dictionary with index as the key. Dictionary<int, Item> GetItemsIndexed(Type t) Parameters t Type Type of items to get. Returns Dictionary<int, Item> A dictionary where the key is the index of the item in the inventory. Remarks This method allows developers to retrieve items of a specific type from the inventory as a dictionary. The dictionary key represents the index of the item in the inventory. GetItemsIndexed<T>() Gets items of a specific type as a dictionary with index as key. Dictionary<int, Item> GetItemsIndexed<T>() where T : Item Returns Dictionary<int, Item> A dictionary where the key is the index of the item in the inventory. Type Parameters T Type of items to get. Remarks This method allows developers to retrieve items of a specific type from the inventory as a dictionary. The dictionary key represents the index of the item in the inventory. GetItemsList(Type) Gets items of a specific type as a list. List<Item> GetItemsList(Type t) Parameters t Type Type of items to get. Returns List<Item> A list of items. Remarks This method allows developers to retrieve items of a specific type from the inventory as a list. GetItemsList<T>() Gets items of a specific type as a list. List<Item> GetItemsList<T>() where T : Item Returns List<Item> A list of items. Type Parameters T Type of items to get. Remarks This method allows developers to retrieve items of a specific type from the inventory as a list. GetList<T>() Gets items of a specific type as a list. List<T> GetList<T>() where T : Item Returns List<T> A list of items. Type Parameters T Type of items to get. Remarks This method allows developers to retrieve items of a specific type from the inventory as a list. Put(Item) Puts a specific item into the inventory. PutOperation Put(Item item) Parameters item Item The item to put into the inventory. Returns PutOperation The result of the PutOperation as a PutOperation value. Remarks This method allows developers to put a specific item into the inventory. Returns the result of the PutOperation as a PutOperation value. Put(string, uint) Puts a specific quantity of an item into the inventory by name. Cannot put multiple non-stackable items. PutOperation Put(string name, uint quantity = 1) Parameters name string Name of the item to put into the inventory. quantity uint The quantity of the item to put into the inventory (default is 1). Returns PutOperation The result of the PutOperation as a PutOperation value. Remarks This method allows developers to put a specific quantity of an item into the inventory by specifying the name. Cannot put multiple non-stackable items. Returns the result of the PutOperation as a PutOperation value. For putting multiple items, use PutMultiple(string, uint). PutMultiple(string, uint) Puts multiple items into the inventory by name. Can be used to put multiple non-stackable items. PutOperation PutMultiple(string name, uint quantity) Parameters name string Name of the item to put into the inventory. quantity uint The quantity of the item to put into the inventory. Returns PutOperation The result of the PutOperation as a PutOperation value. Remarks This method allows developers to put multiple items into the inventory by specifying the name and quantity. Can be used to put multiple non-stackable items. Returns the result of the PutOperation as a PutOperation value. Recalculate() Recalculates the weight and cost of the inventory. void Recalculate() Remarks This method allows developers to recalculate the weight and cost of the inventory. It updates the inventory's internal values based on the current contents. Remove(Item) Removes a specific item from the inventory. bool Remove(Item item) Parameters item Item The item to remove from the inventory. Returns bool True if the item is successfully removed; otherwise, false. Remarks This method allows developers to remove a specific item from the inventory. Returns true if the item is successfully removed; otherwise, returns false. Remove(int) Removes the item at the specified index from the inventory. bool Remove(int index) Parameters index int The index of the item to remove from the inventory. Returns bool True if the item is successfully removed; otherwise, false. Remarks This method allows developers to remove the item at the specified index from the inventory. Returns true if the item is successfully removed; otherwise, returns false. Remove(string) Removes the first occurrence of an item with the specified name from the inventory. bool Remove(string name) Parameters name string The name of the item to remove from the inventory. Returns bool True if the item is successfully removed; otherwise, false. Remarks This method allows developers to remove the first occurrence of an item with the specified name from the inventory. Returns true if the item is successfully removed; otherwise, returns false. Take(Item, uint) Takes a specific quantity of an item from the inventory. Item Take(Item item, uint quantity) Parameters item Item The item to take from the inventory. quantity uint The quantity of the item to take. Returns Item The taken quantity of items if successful; otherwise, 0. Remarks This method allows developers to take a specific quantity of an item from the inventory. Returns the taken quantity of items if successful; otherwise, 0. If the quantity is not 1 and the item is non-stackable, the method returns 0. Take(int, uint) Takes a specific quantity of an item from the inventory based on its index. Item Take(int index, uint quantity = 1) Parameters index int The index of the item to take from the inventory. quantity uint The quantity of the item to take (default is 1). Returns Item The taken item if successful; otherwise, null. Remarks This method allows developers to take a specific quantity of an item from the inventory based on its index. Returns the taken item if successful; otherwise, returns null. If the item is non-stackable and the quantity is not 1, the method returns null. Take(string, uint) Takes a specific quantity of an item from the inventory based on its name. Item Take(string name, uint quantity = 1) Parameters name string The name of the item to take from the inventory. quantity uint The quantity of the item to take (default is 1). Returns Item The taken item if successful; otherwise, null. Remarks This method allows developers to take a specific quantity of an item from the inventory based on its name. Returns the taken item if successful; otherwise, returns null. If the item is non-stackable and the quantity is not 1, the method returns null. Transfer(Item, IInventory, uint) Transfers a specific quantity of an item to the specified destination inventory. TransferOperation Transfer(Item item, IInventory destination, uint quantity = 1) Parameters item Item The item to transfer to the destination inventory. destination IInventory The destination inventory to receive the transferred item. quantity uint The quantity of the item to transfer (default is 1). Returns TransferOperation The result of the transfer operation as a TransferOperation value. Remarks This method allows developers to transfer a specific quantity of an item to the specified destination inventory. Returns the result of the transfer operation as a TransferOperation value. Transfer(int, IInventory, uint) Transfers a specific quantity of an item, based on its index, to the specified destination inventory. TransferOperation Transfer(int index, IInventory destination, uint quantity = 1) Parameters index int The index of the item to transfer from the source inventory. destination IInventory The destination inventory to receive the transferred item. quantity uint The quantity of the item to transfer (default is 1). Returns TransferOperation The result of the transfer operation as a TransferOperation value. Remarks This method allows developers to transfer a specific quantity of an item, based on its index, to the specified destination inventory. Returns the result of the transfer operation as a TransferOperation value. Transfer(string, IInventory, uint) Transfers a specific quantity of an item, based on its name, to the specified destination inventory. TransferOperation Transfer(string name, IInventory destination, uint quantity = 1) Parameters name string The name of the item to transfer from the source inventory. destination IInventory The destination inventory to receive the transferred item. quantity uint The quantity of the item to transfer (default is 1). Returns TransferOperation The result of the transfer operation as a TransferOperation value. Remarks This method allows developers to transfer a specific quantity of an item, based on its name, to the specified destination inventory. Returns the result of the transfer operation as a TransferOperation value."
  },
  "ScriptReference/Animeska34.InventorySystem.IntegratedInventory.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.IntegratedInventory.html",
    "title": "Class IntegratedInventory | Animeska34 Docs",
    "keywords": "Class IntegratedInventory Namespace Animeska34.InventorySystem Assembly Animeska34.InventorySystem.dll Represents an inventory system that can be added to any object. [Serializable] public class IntegratedInventory : IInventory, IEnumerable, IEnumerator Inheritance object IntegratedInventory Implements IInventory IEnumerable IEnumerator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This class is marked as serializable and implements the IInventory interface. Properties this[Item] Gets the index of a specific item in the inventory. public int this[Item item] { get; } Parameters item Item The item to retrieve the index for. Property Value int The index of the specified item in the inventory. Remarks This indexer allows developers to retrieve the index of a specific item in the inventory. Returns the index of the specified item. this[int] Gets an item from the inventory based on its position in the list. public Item this[int id] { get; } Parameters id int The position of the item in the list to retrieve from the inventory. Property Value Item The item at the specified position if found; otherwise, null. Remarks This indexer allows developers to retrieve an item from the inventory based on its position in the list. Returns the item at the specified position if found; otherwise, returns null. this[string] Get first item by name public Item this[string name] { get; } Parameters name string Item name Property Value Item First item with matching name cost Gets the total cost of the inventory (sum of all items' costs). public virtual double cost { get; } Property Value double Represents an inventory system that can be added to any object. Remarks This property returns the total cost of the inventory, which is the sum of the costs of all items within the inventory. Developers can use this property to obtain the combined cost of all items present in the inventory. count Gets the count of items in the inventory. public virtual int count { get; } Property Value int Represents an inventory system that can be added to any object. Remarks This property returns the count of items currently present in the inventory. Developers can use this property to retrieve the total number of items within the inventory. loaded UnityEvent invoked when the inventory has been loaded. public UnityEvent loaded { get; } Property Value UnityEvent Represents an inventory system that can be added to any object. Remarks This UnityEvent is triggered when the inventory has been successfully loaded. Developers can subscribe to this event to receive notifications about the completion of the inventory loading process. onContentUpdated UnityEvent invoked when the content of the inventory is updated. public UnityEvent onContentUpdated { get; } Property Value UnityEvent Represents an inventory system that can be added to any object. Remarks This UnityEvent is triggered when there are changes to the content of the inventory, such as items being added or removed. Developers can subscribe to this event to receive notifications about updates to the inventory content. onItemAdded Gets the first item from the inventory with a specified name. public UnityEvent<Item> onItemAdded { get; } Property Value UnityEvent<Item> The first item with the specified name if found; otherwise, null. Remarks This indexer allows developers to retrieve the first item from the inventory with a specified name. Returns the first item with the specified name if found; otherwise, returns null. onItemDestroyed UnityEvent invoked when an item is destroyed in the inventory. public UnityEvent<Item> onItemDestroyed { get; } Property Value UnityEvent<Item> Represents an inventory system that can be added to any object. Remarks This UnityEvent is triggered when an item is destroyed (removed with a quantity of zero) from the inventory. Developers can subscribe to this event to receive notifications about item destructions. The event parameter includes the item that was destroyed in the inventory. onItemQuantityChanged UnityEvent invoked when the quantity of an item in the inventory changes. public UnityEvent<Item, uint, bool> onItemQuantityChanged { get; } Property Value UnityEvent<Item, uint, bool> Represents an inventory system that can be added to any object. Remarks This UnityEvent is triggered when the quantity of an item in the inventory is modified. Developers can subscribe to this event to receive notifications about changes in item quantity. The event parameters include the item affected, the new quantity, and a boolean indicating if the change was an addition (true) or removal (false). onItemRemoved UnityEvent invoked when an item is removed from the inventory. public UnityEvent<Item> onItemRemoved { get; } Property Value UnityEvent<Item> Represents an inventory system that can be added to any object. Remarks This UnityEvent is triggered when an item is successfully removed from the inventory. Developers can subscribe to this event to receive notifications about item removals. The event parameter includes the item that was removed from the inventory. slotLimit Gets the slot limit of the inventory. public virtual float slotLimit { get; } Property Value float Represents an inventory system that can be added to any object. Remarks This property returns the slot limit of the inventory, indicating the maximum number of slots available. Developers can use this property to retrieve and manage the slot limit of the inventory. useSlotLimit Gets a value indicating whether the inventory uses slot limits. public bool useSlotLimit { get; } Property Value bool Represents an inventory system that can be added to any object. Remarks This property returns a boolean value indicating whether the inventory implements slot limits. Developers can use this property to check if the inventory has a limit on the number of slots available. useWeightLimit Gets a value indicating whether the inventory uses weight limits. public bool useWeightLimit { get; } Property Value bool Represents an inventory system that can be added to any object. Remarks This property returns a boolean value indicating whether the inventory implements weight limits. Developers can use this property to check if the inventory has a limit on the total weight it can hold. weight Gets the total weight of items in the inventory. public virtual float weight { get; } Property Value float Represents an inventory system that can be added to any object. Remarks This property returns the total weight of items currently present in the inventory. Developers can use this property to retrieve the combined weight of all items within the inventory. weightLimit Gets the weight limit of the inventory. public virtual float weightLimit { get; } Property Value float Represents an inventory system that can be added to any object. Remarks This property returns the weight limit of the inventory, indicating the maximum total weight it can hold. Developers can use this property to retrieve and manage the weight limit of the inventory. Methods Contains(string, uint) Checks if the inventory contains a specific item with the given name and quantity. public bool Contains(string name, uint quantity = 1) Parameters name string The name of the item to check for in the inventory. quantity uint The quantity of the item to check for (default is 1). Returns bool True if the inventory contains the item with the specified name and quantity (or the item is non-stackable and quantity is 1); otherwise, false. Remarks This method allows developers to check if the inventory contains a specific item with the given name and quantity. Returns true if the item is found in the inventory with at least the specified quantity (or the item is non-stackable and quantity is 1); otherwise, returns false. GetIndexed<T>() Gets items of a specific type as a dictionary. public Dictionary<int, T> GetIndexed<T>() where T : Item Returns Dictionary<int, T> A dictionary where the key is the index of the item in the inventory. Type Parameters T Type of items to get. Remarks This method allows developers to retrieve items of a specific type from the inventory as a dictionary. The dictionary key represents the index of the item in the inventory. GetItemsIndexed(Type) Gets items of a specific type as a dictionary with index as the key. public Dictionary<int, Item> GetItemsIndexed(Type t) Parameters t Type Type of items to get. Returns Dictionary<int, Item> A dictionary where the key is the index of the item in the inventory. Remarks This method allows developers to retrieve items of a specific type from the inventory as a dictionary. The dictionary key represents the index of the item in the inventory. GetItemsIndexed<T>() Gets items of a specific type as a dictionary with index as key. public Dictionary<int, Item> GetItemsIndexed<T>() where T : Item Returns Dictionary<int, Item> A dictionary where the key is the index of the item in the inventory. Type Parameters T Type of items to get. Remarks This method allows developers to retrieve items of a specific type from the inventory as a dictionary. The dictionary key represents the index of the item in the inventory. GetItemsList(Type) Gets items of a specific type as a list. public List<Item> GetItemsList(Type t) Parameters t Type Type of items to get. Returns List<Item> A list of items. Remarks This method allows developers to retrieve items of a specific type from the inventory as a list. GetItemsList<T>() Gets items of a specific type as a list. public List<Item> GetItemsList<T>() where T : Item Returns List<Item> A list of items. Type Parameters T Type of items to get. Remarks This method allows developers to retrieve items of a specific type from the inventory as a list. GetList<T>() Gets items of a specific type as a list. public List<T> GetList<T>() where T : Item Returns List<T> A list of items. Type Parameters T Type of items to get. Remarks This method allows developers to retrieve items of a specific type from the inventory as a list. Loaded() public void Loaded() Put(Item) Puts a specific item into the inventory. public PutOperation Put(Item item) Parameters item Item The item to put into the inventory. Returns PutOperation The result of the PutOperation as a PutOperation value. Remarks This method allows developers to put a specific item into the inventory. Returns the result of the PutOperation as a PutOperation value. Put(string, uint) Puts a specific quantity of an item into the inventory by name. Cannot put multiple non-stackable items. public PutOperation Put(string name, uint quantity = 1) Parameters name string Name of the item to put into the inventory. quantity uint The quantity of the item to put into the inventory (default is 1). Returns PutOperation The result of the PutOperation as a PutOperation value. Remarks This method allows developers to put a specific quantity of an item into the inventory by specifying the name. Cannot put multiple non-stackable items. Returns the result of the PutOperation as a PutOperation value. For putting multiple items, use PutMultiple(string, uint). PutMultiple(string, uint) Puts multiple items into the inventory by name. Can be used to put multiple non-stackable items. public PutOperation PutMultiple(string name, uint quantity) Parameters name string Name of the item to put into the inventory. quantity uint The quantity of the item to put into the inventory. Returns PutOperation The result of the PutOperation as a PutOperation value. Remarks This method allows developers to put multiple items into the inventory by specifying the name and quantity. Can be used to put multiple non-stackable items. Returns the result of the PutOperation as a PutOperation value. Recalculate() Recalculates the weight and cost of the inventory. public void Recalculate() Remarks This method allows developers to recalculate the weight and cost of the inventory. It updates the inventory's internal values based on the current contents. Remove(Item) Removes a specific item from the inventory. public bool Remove(Item item) Parameters item Item The item to remove from the inventory. Returns bool True if the item is successfully removed; otherwise, false. Remarks This method allows developers to remove a specific item from the inventory. Returns true if the item is successfully removed; otherwise, returns false. Remove(int) Removes the item at the specified index from the inventory. public bool Remove(int index) Parameters index int The index of the item to remove from the inventory. Returns bool True if the item is successfully removed; otherwise, false. Remarks This method allows developers to remove the item at the specified index from the inventory. Returns true if the item is successfully removed; otherwise, returns false. Remove(string) Removes the first occurrence of an item with the specified name from the inventory. public bool Remove(string name) Parameters name string The name of the item to remove from the inventory. Returns bool True if the item is successfully removed; otherwise, false. Remarks This method allows developers to remove the first occurrence of an item with the specified name from the inventory. Returns true if the item is successfully removed; otherwise, returns false. Take(Item, uint) Takes a specific quantity of an item from the inventory. public Item Take(Item item, uint quantity) Parameters item Item The item to take from the inventory. quantity uint The quantity of the item to take. Returns Item The taken quantity of items if successful; otherwise, 0. Remarks This method allows developers to take a specific quantity of an item from the inventory. Returns the taken quantity of items if successful; otherwise, 0. If the quantity is not 1 and the item is non-stackable, the method returns 0. Take(int, uint) Takes a specific quantity of an item from the inventory based on its index. public Item Take(int index, uint quantity = 1) Parameters index int The index of the item to take from the inventory. quantity uint The quantity of the item to take (default is 1). Returns Item The taken item if successful; otherwise, null. Remarks This method allows developers to take a specific quantity of an item from the inventory based on its index. Returns the taken item if successful; otherwise, returns null. If the item is non-stackable and the quantity is not 1, the method returns null. Take(string, uint) Takes a specific quantity of an item from the inventory based on its name. public Item Take(string name, uint quantity = 1) Parameters name string The name of the item to take from the inventory. quantity uint The quantity of the item to take (default is 1). Returns Item The taken item if successful; otherwise, null. Remarks This method allows developers to take a specific quantity of an item from the inventory based on its name. Returns the taken item if successful; otherwise, returns null. If the item is non-stackable and the quantity is not 1, the method returns null. Transfer(Item, IInventory, uint) Transfers a specific quantity of an item to the specified destination inventory. public TransferOperation Transfer(Item item, IInventory destination, uint quantity = 1) Parameters item Item The item to transfer to the destination inventory. destination IInventory The destination inventory to receive the transferred item. quantity uint The quantity of the item to transfer (default is 1). Returns TransferOperation The result of the transfer operation as a TransferOperation value. Remarks This method allows developers to transfer a specific quantity of an item to the specified destination inventory. Returns the result of the transfer operation as a TransferOperation value. Transfer(int, IInventory, uint) Transfers a specific quantity of an item, based on its index, to the specified destination inventory. public TransferOperation Transfer(int index, IInventory destination, uint quantity = 1) Parameters index int The index of the item to transfer from the source inventory. destination IInventory The destination inventory to receive the transferred item. quantity uint The quantity of the item to transfer (default is 1). Returns TransferOperation The result of the transfer operation as a TransferOperation value. Remarks This method allows developers to transfer a specific quantity of an item, based on its index, to the specified destination inventory. Returns the result of the transfer operation as a TransferOperation value. Transfer(string, IInventory, uint) Transfers a specific quantity of an item, based on its name, to the specified destination inventory. public TransferOperation Transfer(string name, IInventory destination, uint quantity = 1) Parameters name string The name of the item to transfer from the source inventory. destination IInventory The destination inventory to receive the transferred item. quantity uint The quantity of the item to transfer (default is 1). Returns TransferOperation The result of the transfer operation as a TransferOperation value. Remarks This method allows developers to transfer a specific quantity of an item, based on its name, to the specified destination inventory. Returns the result of the transfer operation as a TransferOperation value."
  },
  "ScriptReference/Animeska34.InventorySystem.Inventory.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.Inventory.html",
    "title": "Class Inventory | Animeska34 Docs",
    "keywords": "Class Inventory Namespace Animeska34.InventorySystem Assembly Animeska34.InventorySystem.dll Inventory component that can be added to any GameObject. Compatible with the SaveSystem. [DisallowMultipleComponent] [AddComponentMenu(\"Animeska34/Inventory System/Inventory\")] public class Inventory : MonoBehaviour, IInventory, IEnumerable, IEnumerator Inheritance object Object Component Behaviour MonoBehaviour Inventory Implements IInventory IEnumerable IEnumerator Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This class represents an inventory system component that can be attached to any GameObject. It is designed to be compatible with the SaveSystem. Properties this[Item] Gets the index of a specific item in the inventory. public int this[Item item] { get; } Parameters item Item The item to retrieve the index for. Property Value int The index of the specified item in the inventory. Remarks This indexer allows developers to retrieve the index of a specific item in the inventory. Returns the index of the specified item. this[int] Gets an item from the inventory based on its position in the list. public Item this[int id] { get; } Parameters id int The position of the item in the list to retrieve from the inventory. Property Value Item The item at the specified position if found; otherwise, null. Remarks This indexer allows developers to retrieve an item from the inventory based on its position in the list. Returns the item at the specified position if found; otherwise, returns null. this[string] Get first item by name public Item this[string name] { get; } Parameters name string Item name Property Value Item First item with matching name cost Gets the total cost of the inventory (sum of all items' costs). public double cost { get; } Property Value double Inventory component that can be added to any GameObject. Compatible with the SaveSystem. Remarks This property returns the total cost of the inventory, which is the sum of the costs of all items within the inventory. Developers can use this property to obtain the combined cost of all items present in the inventory. count Gets the count of items in the inventory. public int count { get; } Property Value int Inventory component that can be added to any GameObject. Compatible with the SaveSystem. Remarks This property returns the count of items currently present in the inventory. Developers can use this property to retrieve the total number of items within the inventory. loaded UnityEvent invoked when the inventory has been loaded. public UnityEvent loaded { get; } Property Value UnityEvent Inventory component that can be added to any GameObject. Compatible with the SaveSystem. Remarks This UnityEvent is triggered when the inventory has been successfully loaded. Developers can subscribe to this event to receive notifications about the completion of the inventory loading process. onContentUpdated UnityEvent invoked when the content of the inventory is updated. public UnityEvent onContentUpdated { get; } Property Value UnityEvent Inventory component that can be added to any GameObject. Compatible with the SaveSystem. Remarks This UnityEvent is triggered when there are changes to the content of the inventory, such as items being added or removed. Developers can subscribe to this event to receive notifications about updates to the inventory content. onItemAdded Gets the first item from the inventory with a specified name. public UnityEvent<Item> onItemAdded { get; } Property Value UnityEvent<Item> The first item with the specified name if found; otherwise, null. Remarks This indexer allows developers to retrieve the first item from the inventory with a specified name. Returns the first item with the specified name if found; otherwise, returns null. onItemDestroyed UnityEvent invoked when an item is destroyed in the inventory. public UnityEvent<Item> onItemDestroyed { get; } Property Value UnityEvent<Item> Inventory component that can be added to any GameObject. Compatible with the SaveSystem. Remarks This UnityEvent is triggered when an item is destroyed (removed with a quantity of zero) from the inventory. Developers can subscribe to this event to receive notifications about item destructions. The event parameter includes the item that was destroyed in the inventory. onItemQuantityChanged UnityEvent invoked when the quantity of an item in the inventory changes. public UnityEvent<Item, uint, bool> onItemQuantityChanged { get; } Property Value UnityEvent<Item, uint, bool> Inventory component that can be added to any GameObject. Compatible with the SaveSystem. Remarks This UnityEvent is triggered when the quantity of an item in the inventory is modified. Developers can subscribe to this event to receive notifications about changes in item quantity. The event parameters include the item affected, the new quantity, and a boolean indicating if the change was an addition (true) or removal (false). onItemRemoved UnityEvent invoked when an item is removed from the inventory. public UnityEvent<Item> onItemRemoved { get; } Property Value UnityEvent<Item> Inventory component that can be added to any GameObject. Compatible with the SaveSystem. Remarks This UnityEvent is triggered when an item is successfully removed from the inventory. Developers can subscribe to this event to receive notifications about item removals. The event parameter includes the item that was removed from the inventory. slotLimit Gets the slot limit of the inventory. public float slotLimit { get; } Property Value float Inventory component that can be added to any GameObject. Compatible with the SaveSystem. Remarks This property returns the slot limit of the inventory, indicating the maximum number of slots available. Developers can use this property to retrieve and manage the slot limit of the inventory. useSlotLimit Gets a value indicating whether the inventory uses slot limits. public bool useSlotLimit { get; } Property Value bool Inventory component that can be added to any GameObject. Compatible with the SaveSystem. Remarks This property returns a boolean value indicating whether the inventory implements slot limits. Developers can use this property to check if the inventory has a limit on the number of slots available. useWeightLimit Gets a value indicating whether the inventory uses weight limits. public bool useWeightLimit { get; } Property Value bool Inventory component that can be added to any GameObject. Compatible with the SaveSystem. Remarks This property returns a boolean value indicating whether the inventory implements weight limits. Developers can use this property to check if the inventory has a limit on the total weight it can hold. weight Gets the total weight of items in the inventory. public float weight { get; } Property Value float Inventory component that can be added to any GameObject. Compatible with the SaveSystem. Remarks This property returns the total weight of items currently present in the inventory. Developers can use this property to retrieve the combined weight of all items within the inventory. weightLimit Gets the weight limit of the inventory. public float weightLimit { get; } Property Value float Inventory component that can be added to any GameObject. Compatible with the SaveSystem. Remarks This property returns the weight limit of the inventory, indicating the maximum total weight it can hold. Developers can use this property to retrieve and manage the weight limit of the inventory. Methods Contains(string, uint) Checks if the inventory contains a specific item with the given name and quantity. public bool Contains(string name, uint quantity = 1) Parameters name string The name of the item to check for in the inventory. quantity uint The quantity of the item to check for (default is 1). Returns bool True if the inventory contains the item with the specified name and quantity (or the item is non-stackable and quantity is 1); otherwise, false. Remarks This method allows developers to check if the inventory contains a specific item with the given name and quantity. Returns true if the item is found in the inventory with at least the specified quantity (or the item is non-stackable and quantity is 1); otherwise, returns false. GetIndexed<T>() Gets items of a specific type as a dictionary. public Dictionary<int, T> GetIndexed<T>() where T : Item Returns Dictionary<int, T> A dictionary where the key is the index of the item in the inventory. Type Parameters T Type of items to get. Remarks This method allows developers to retrieve items of a specific type from the inventory as a dictionary. The dictionary key represents the index of the item in the inventory. GetItemsIndexed(Type) Gets items of a specific type as a dictionary with index as the key. public Dictionary<int, Item> GetItemsIndexed(Type t) Parameters t Type Type of items to get. Returns Dictionary<int, Item> A dictionary where the key is the index of the item in the inventory. Remarks This method allows developers to retrieve items of a specific type from the inventory as a dictionary. The dictionary key represents the index of the item in the inventory. GetItemsIndexed<T>() Gets items of a specific type as a dictionary with index as key. public Dictionary<int, Item> GetItemsIndexed<T>() where T : Item Returns Dictionary<int, Item> A dictionary where the key is the index of the item in the inventory. Type Parameters T Type of items to get. Remarks This method allows developers to retrieve items of a specific type from the inventory as a dictionary. The dictionary key represents the index of the item in the inventory. GetItemsList(Type) Gets items of a specific type as a list. public List<Item> GetItemsList(Type t) Parameters t Type Type of items to get. Returns List<Item> A list of items. Remarks This method allows developers to retrieve items of a specific type from the inventory as a list. GetItemsList<T>() Gets items of a specific type as a list. public List<Item> GetItemsList<T>() where T : Item Returns List<Item> A list of items. Type Parameters T Type of items to get. Remarks This method allows developers to retrieve items of a specific type from the inventory as a list. GetList<T>() Gets items of a specific type as a list. public List<T> GetList<T>() where T : Item Returns List<T> A list of items. Type Parameters T Type of items to get. Remarks This method allows developers to retrieve items of a specific type from the inventory as a list. Put(Item) Puts a specific item into the inventory. public PutOperation Put(Item item) Parameters item Item The item to put into the inventory. Returns PutOperation The result of the PutOperation as a PutOperation value. Remarks This method allows developers to put a specific item into the inventory. Returns the result of the PutOperation as a PutOperation value. Put(string, uint) Puts a specific quantity of an item into the inventory by name. Cannot put multiple non-stackable items. public PutOperation Put(string name, uint quantity = 1) Parameters name string Name of the item to put into the inventory. quantity uint The quantity of the item to put into the inventory (default is 1). Returns PutOperation The result of the PutOperation as a PutOperation value. Remarks This method allows developers to put a specific quantity of an item into the inventory by specifying the name. Cannot put multiple non-stackable items. Returns the result of the PutOperation as a PutOperation value. For putting multiple items, use PutMultiple(string, uint). PutMultiple(string, uint) Puts multiple items into the inventory by name. Can be used to put multiple non-stackable items. public PutOperation PutMultiple(string name, uint quantity) Parameters name string Name of the item to put into the inventory. quantity uint The quantity of the item to put into the inventory. Returns PutOperation The result of the PutOperation as a PutOperation value. Remarks This method allows developers to put multiple items into the inventory by specifying the name and quantity. Can be used to put multiple non-stackable items. Returns the result of the PutOperation as a PutOperation value. Recalculate() Recalculates the weight and cost of the inventory. public void Recalculate() Remarks This method allows developers to recalculate the weight and cost of the inventory. It updates the inventory's internal values based on the current contents. Remove(Item) Removes a specific item from the inventory. public bool Remove(Item item) Parameters item Item The item to remove from the inventory. Returns bool True if the item is successfully removed; otherwise, false. Remarks This method allows developers to remove a specific item from the inventory. Returns true if the item is successfully removed; otherwise, returns false. Remove(int) Removes the item at the specified index from the inventory. public bool Remove(int index) Parameters index int The index of the item to remove from the inventory. Returns bool True if the item is successfully removed; otherwise, false. Remarks This method allows developers to remove the item at the specified index from the inventory. Returns true if the item is successfully removed; otherwise, returns false. Remove(string) Removes the first occurrence of an item with the specified name from the inventory. public bool Remove(string name) Parameters name string The name of the item to remove from the inventory. Returns bool True if the item is successfully removed; otherwise, false. Remarks This method allows developers to remove the first occurrence of an item with the specified name from the inventory. Returns true if the item is successfully removed; otherwise, returns false. Take(Item, uint) Takes a specific quantity of an item from the inventory. public Item Take(Item item, uint quantity) Parameters item Item The item to take from the inventory. quantity uint The quantity of the item to take. Returns Item The taken quantity of items if successful; otherwise, 0. Remarks This method allows developers to take a specific quantity of an item from the inventory. Returns the taken quantity of items if successful; otherwise, 0. If the quantity is not 1 and the item is non-stackable, the method returns 0. Take(int, uint) Takes a specific quantity of an item from the inventory based on its index. public Item Take(int index, uint quantity = 1) Parameters index int The index of the item to take from the inventory. quantity uint The quantity of the item to take (default is 1). Returns Item The taken item if successful; otherwise, null. Remarks This method allows developers to take a specific quantity of an item from the inventory based on its index. Returns the taken item if successful; otherwise, returns null. If the item is non-stackable and the quantity is not 1, the method returns null. Take(string, uint) Takes a specific quantity of an item from the inventory based on its name. public Item Take(string name, uint quantity = 1) Parameters name string The name of the item to take from the inventory. quantity uint The quantity of the item to take (default is 1). Returns Item The taken item if successful; otherwise, null. Remarks This method allows developers to take a specific quantity of an item from the inventory based on its name. Returns the taken item if successful; otherwise, returns null. If the item is non-stackable and the quantity is not 1, the method returns null. Transfer(Item, IInventory, uint) Transfers a specific quantity of an item to the specified destination inventory. public TransferOperation Transfer(Item item, IInventory destination, uint quantity = 1) Parameters item Item The item to transfer to the destination inventory. destination IInventory The destination inventory to receive the transferred item. quantity uint The quantity of the item to transfer (default is 1). Returns TransferOperation The result of the transfer operation as a TransferOperation value. Remarks This method allows developers to transfer a specific quantity of an item to the specified destination inventory. Returns the result of the transfer operation as a TransferOperation value. Transfer(int, IInventory, uint) Transfers a specific quantity of an item, based on its index, to the specified destination inventory. public TransferOperation Transfer(int index, IInventory destination, uint quantity = 1) Parameters index int The index of the item to transfer from the source inventory. destination IInventory The destination inventory to receive the transferred item. quantity uint The quantity of the item to transfer (default is 1). Returns TransferOperation The result of the transfer operation as a TransferOperation value. Remarks This method allows developers to transfer a specific quantity of an item, based on its index, to the specified destination inventory. Returns the result of the transfer operation as a TransferOperation value. Transfer(string, IInventory, uint) Transfers a specific quantity of an item, based on its name, to the specified destination inventory. public TransferOperation Transfer(string name, IInventory destination, uint quantity = 1) Parameters name string The name of the item to transfer from the source inventory. destination IInventory The destination inventory to receive the transferred item. quantity uint The quantity of the item to transfer (default is 1). Returns TransferOperation The result of the transfer operation as a TransferOperation value. Remarks This method allows developers to transfer a specific quantity of an item, based on its name, to the specified destination inventory. Returns the result of the transfer operation as a TransferOperation value."
  },
  "ScriptReference/Animeska34.InventorySystem.InventoryManager.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.InventoryManager.html",
    "title": "Class InventoryManager | Animeska34 Docs",
    "keywords": "Class InventoryManager Namespace Animeska34.InventorySystem Assembly Animeska34.InventorySystem.dll Manages all item libraries, providing access to items and their properties. [DisallowMultipleComponent] [AddComponentMenu(\"Animeska34/Inventory System/Inventory Manager\")] public class InventoryManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour InventoryManager Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This class is marked as disallowing multiple components and can be found in the \"Animeska34/Inventory System\" menu. Properties this[string] Finds an item by its name. public Item this[string name] { get; } Parameters name string Name of the item to search for. Property Value Item The found item, if any. instance Gets the current instance of the InventoryManager. public static InventoryManager instance { get; } Property Value InventoryManager Manages all item libraries, providing access to items and their properties."
  },
  "ScriptReference/Animeska34.InventorySystem.Item.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.Item.html",
    "title": "Class Item | Animeska34 Docs",
    "keywords": "Class Item Namespace Animeska34.InventorySystem Assembly Animeska34.InventorySystem.dll Represents a basic item in the inventory system. [Serializable] [CreateAssetMenu(menuName = \"Animeska34/Inventory System/Item\", order = 0)] public class Item : ScriptableObject Inheritance object Object ScriptableObject Item Derived Durable Stackable Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields onDestroy Event that is triggered when the item is destroyed. [NonSerialized] public UnityEvent onDestroy Field Value UnityEvent Represents a basic item in the inventory system. onUpdated Event that is triggered when the item information is updated. [NonSerialized] public UnityEvent onUpdated Field Value UnityEvent Represents a basic item in the inventory system. Properties cost Gets the cost of a single item. public virtual float cost { get; } Property Value float Represents a basic item in the inventory system. data Gets the data associated with this item, providing static information. public virtual ItemData data { get; } Property Value ItemData Represents a basic item in the inventory system. description Gets the description of the item, using the description property from the associated ItemData. public virtual string description { get; } Property Value string Represents a basic item in the inventory system. icon Gets the icon of the item, using the sprite property from the associated ItemData. public virtual Sprite icon { get; } Property Value Sprite Represents a basic item in the inventory system. instance Gets the instance of the item if it was instantiated. public ItemObject instance { get; } Property Value ItemObject Represents a basic item in the inventory system. instantiatable Gets a value indicating whether the item is instantiatable, meaning it has an associated ItemObject. public bool instantiatable { get; } Property Value bool Represents a basic item in the inventory system. itemObject Gets the ItemObject component attached to a GameObject instantiated by calling Item.Instantiate(). public virtual ItemObject itemObject { get; } Property Value ItemObject Represents a basic item in the inventory system. name Gets the name of the item, excluding \"(Clone)\" from the base name if present. public string name { get; } Property Value string Represents a basic item in the inventory system. overallCost Gets the overall cost of the item. If the item is stackable, represents the cost of the entire stack. public virtual float overallCost { get; } Property Value float Represents a basic item in the inventory system. overallWeight Gets the overall weight of the item. If the item is stackable, represents the weight of the entire stack. public virtual float overallWeight { get; } Property Value float Represents a basic item in the inventory system. visualName Gets the visual name of the item, using the visualName property from the associated ItemData. public virtual string visualName { get; } Property Value string Represents a basic item in the inventory system. weight Gets the weight of a single item. public virtual float weight { get; } Property Value float Represents a basic item in the inventory system. Methods Instantiate(Transform) Instantiates ItemObject if it is assigned to item. public ItemObject Instantiate(Transform parent) Parameters parent Transform Parent transform of the instantiated object. Returns ItemObject Instance of the ItemObject. Instantiate(Vector3, Quaternion) Instantiates ItemObject if it is assigned to item. public ItemObject Instantiate(Vector3 position, Quaternion rotation) Parameters position Vector3 Position of the instantiated object. rotation Quaternion Rotation of the instantiated object. Returns ItemObject Instance of the ItemObject. Instantiate(Vector3, Quaternion, Transform) Instantiates ItemObject if it is assigned to item. public ItemObject Instantiate(Vector3 position, Quaternion rotation, Transform parent) Parameters position Vector3 Position of the instantiated object. rotation Quaternion Rotation of the instantiated object. parent Transform Parent transform of the instantiated object. Returns ItemObject Instance of the ItemObject. OnDestroy() protected virtual void OnDestroy() Refresh() Calls the onUpdated event to refresh the item information. [ContextMenu(\"Refresh\")] public void Refresh() Validate() Validates the item properties. Returns true if the properties are valid, false otherwise. protected virtual bool Validate() Returns bool True if the properties are valid, false otherwise."
  },
  "ScriptReference/Animeska34.InventorySystem.ItemData.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.ItemData.html",
    "title": "Class ItemData | Animeska34 Docs",
    "keywords": "Class ItemData Namespace Animeska34.InventorySystem Assembly Animeska34.InventorySystem.dll Static data of an item, which is universal across all item instances. [CreateAssetMenu(menuName = \"Animeska34/Inventory System/Item Data\", order = 1000)] public class ItemData : ScriptableObject Inheritance object Object ScriptableObject ItemData Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties description Gets the description of the item. public string description { get; } Property Value string Static data of an item, which is universal across all item instances. itemObject Gets the ItemObject associated with the item. public ItemObject itemObject { get; } Property Value ItemObject Static data of an item, which is universal across all item instances. sprite Gets the sprite associated with the item. public Sprite sprite { get; } Property Value Sprite Static data of an item, which is universal across all item instances. visualName Gets the name of the item displayed to the player. public string visualName { get; } Property Value string Static data of an item, which is universal across all item instances."
  },
  "ScriptReference/Animeska34.InventorySystem.ItemLibrary.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.ItemLibrary.html",
    "title": "Class ItemLibrary | Animeska34 Docs",
    "keywords": "Class ItemLibrary Namespace Animeska34.InventorySystem Assembly Animeska34.InventorySystem.dll ScriptableObject representing a library of items for the inventory system. [CreateAssetMenu(menuName = \"Animeska34/Inventory System/Item Library\", order = -100)] public class ItemLibrary : ScriptableObject Inheritance object Object ScriptableObject ItemLibrary Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties this[string] Gets the item from the library by its name. public Item this[string name] { get; } Parameters name string Name of the item to retrieve. Property Value Item The item with the specified name, or null if not found. Remarks If the specified item name is not found in the library, null is returned."
  },
  "ScriptReference/Animeska34.InventorySystem.ItemObject.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.ItemObject.html",
    "title": "Class ItemObject | Animeska34 Docs",
    "keywords": "Class ItemObject Namespace Animeska34.InventorySystem Assembly Animeska34.InventorySystem.dll Represents an instantiated item within the game. [DisallowMultipleComponent] [AddComponentMenu(\"Animeska34/Inventory System/Item Object\")] public class ItemObject : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ItemObject Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties properties Accesses the properties of the item. public Item properties { get; } Property Value Item Represents an instantiated item within the game. Methods GetProperties() Gets the properties of the item. public Item GetProperties() Returns Item The properties of the item. GetProperties<T>() Gets the properties of the item. public T GetProperties<T>() Returns T The properties of the item. Type Parameters T Type of the properties."
  },
  "ScriptReference/Animeska34.InventorySystem.ItemSerializer.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.ItemSerializer.html",
    "title": "Class ItemSerializer | Animeska34 Docs",
    "keywords": "Class ItemSerializer Namespace Animeska34.InventorySystem Assembly Animeska34.InventorySystem.dll public class ItemSerializer : IXMLParser Inheritance object ItemSerializer Implements IXMLParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.InventorySystem.LimitedStackable.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.LimitedStackable.html",
    "title": "Class LimitedStackable | Animeska34 Docs",
    "keywords": "Class LimitedStackable Namespace Animeska34.InventorySystem Assembly Animeska34.InventorySystem.dll Limited stackable item, which can be stacked up to a custom limit. [Serializable] [CreateAssetMenu(menuName = \"Animeska34/Inventory System/Item (Limited Stackable)\", order = 3)] public class LimitedStackable : Stackable Inheritance object Object ScriptableObject Item Stackable LimitedStackable Inherited Members Stackable.quantity Stackable.overallWeight Stackable.overallCost Stackable.Take(uint) Item.data Item.name Item.visualName Item.description Item.icon Item.itemObject Item.cost Item.weight Item.instantiatable Item.instance Item.onDestroy Item.onUpdated Item.Refresh() Item.Validate() Item.Instantiate(Vector3, Quaternion, Transform) Item.Instantiate(Vector3, Quaternion) Item.Instantiate(Transform) Item.OnDestroy() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties limit Limit of items in the stack. public virtual uint limit { get; } Property Value uint Limited stackable item, which can be stacked up to a custom limit. quantityNormalized Normalized quantity value, representing the ratio of current quantity to the stack limit. public float quantityNormalized { get; } Property Value float Limited stackable item, which can be stacked up to a custom limit. Methods SetQuantity(uint) Sets the quantity of the stackable item. public override bool SetQuantity(uint newQuantity) Parameters newQuantity uint New quantity value to set. Returns bool True if the quantity was successfully set; otherwise, false."
  },
  "ScriptReference/Animeska34.InventorySystem.Ops.PutOperation.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.Ops.PutOperation.html",
    "title": "Enum PutOperation | Animeska34 Docs",
    "keywords": "Enum PutOperation Namespace Animeska34.InventorySystem.Ops Assembly Animeska34.InventorySystem.dll Result of a Put operation in an inventory. public enum PutOperation Fields NonStackable = 4 Attempting to put multiple non-stackable items using Put(). Use PutMultiple() instead. OverCount = 2 The item count is more than the free space available in the inventory. OverWeight = 3 The item weight is more than the free space available in the inventory. Success = 1 The Put operation was successful. UnknownError = 0 An unknown error occurred during the Put operation. Zero = 5 Attempting to put zero items. Remarks This enumeration represents the possible outcomes of a Put operation in an inventory. Developers can use these values to handle different scenarios during item placement."
  },
  "ScriptReference/Animeska34.InventorySystem.Ops.TransferOperation.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.Ops.TransferOperation.html",
    "title": "Enum TransferOperation | Animeska34 Docs",
    "keywords": "Enum TransferOperation Namespace Animeska34.InventorySystem.Ops Assembly Animeska34.InventorySystem.dll Result of a transfer operation between inventories. public enum TransferOperation Fields NoItem = 2 No item was found in the source inventory. NonStackable = 5 The item being transferred is not stackable. OverCount = 4 The transfer operation exceeds the size count limits of the destination inventory. OverWeight = 3 The transfer operation exceeds the weight limits of the destination inventory. Success = 1 The transfer operation was successful. UnknownError = 0 An unknown error occurred during the transfer operation. Remarks This enumeration represents the possible outcomes of a transfer operation between two inventories. Developers can use these values to handle different scenarios during inventory transfers."
  },
  "ScriptReference/Animeska34.InventorySystem.Ops.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.Ops.html",
    "title": "Namespace Animeska34.InventorySystem.Ops | Animeska34 Docs",
    "keywords": "Namespace Animeska34.InventorySystem.Ops Enums PutOperation Result of a Put operation in an inventory. TransferOperation Result of a transfer operation between inventories."
  },
  "ScriptReference/Animeska34.InventorySystem.Sorting.Sort.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.Sorting.Sort.html",
    "title": "Class Sort | Animeska34 Docs",
    "keywords": "Class Sort Namespace Animeska34.InventorySystem.Sorting Assembly Animeska34.InventorySystem.dll Static class containing sorting algorithms for inventory management. public static class Sort Inheritance object Sort Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Alphabetical(List<Item>, bool) Sorts a list of items alphabetically. public static List<Item> Alphabetical(List<Item> source, bool ascending = true) Parameters source List<Item> The list of items to be sorted. ascending bool Flag to determine whether to sort in ascending or descending order. Returns List<Item> Sorted list of items. ByCost(List<Item>, bool) Sorts a list of items by their cost. public static List<Item> ByCost(List<Item> source, bool ascending = true) Parameters source List<Item> The list of items to be sorted. ascending bool Flag to determine whether to sort in ascending or descending order. Returns List<Item> Sorted list of items. ByQuantity(List<Item>, bool) Sorts a list of stackable items by their quantity. public static List<Item> ByQuantity(List<Item> source, bool ascending = true) Parameters source List<Item> The list of stackable items to be sorted. ascending bool Flag to determine whether to sort in ascending or descending order. Returns List<Item> Sorted list of stackable items. ByWeight(List<Item>, bool) Sorts a list of items by their weight. public static List<Item> ByWeight(List<Item> source, bool ascending = true) Parameters source List<Item> The list of items to be sorted. ascending bool Flag to determine whether to sort in ascending or descending order. Returns List<Item> Sorted list of items."
  },
  "ScriptReference/Animeska34.InventorySystem.Sorting.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.Sorting.html",
    "title": "Namespace Animeska34.InventorySystem.Sorting | Animeska34 Docs",
    "keywords": "Namespace Animeska34.InventorySystem.Sorting Classes Sort Static class containing sorting algorithms for inventory management."
  },
  "ScriptReference/Animeska34.InventorySystem.Stackable.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.Stackable.html",
    "title": "Class Stackable | Animeska34 Docs",
    "keywords": "Class Stackable Namespace Animeska34.InventorySystem Assembly Animeska34.InventorySystem.dll Stackable item, which can be stacked up to 4E9. [Serializable] [CreateAssetMenu(menuName = \"Animeska34/Inventory System/Item (Stackable)\", order = 2)] public class Stackable : Item Inheritance object Object ScriptableObject Item Stackable Derived LimitedStackable Inherited Members Item.data Item.name Item.visualName Item.description Item.icon Item.itemObject Item.cost Item.weight Item.instantiatable Item.instance Item.onDestroy Item.onUpdated Item.Refresh() Item.Validate() Item.Instantiate(Vector3, Quaternion, Transform) Item.Instantiate(Vector3, Quaternion) Item.Instantiate(Transform) Item.OnDestroy() ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties overallCost Gets the overall cost of the item. If the item is stackable, represents the cost of the entire stack. public override float overallCost { get; } Property Value float Stackable item, which can be stacked up to 4E9. overallWeight Gets the overall weight of the item. If the item is stackable, represents the weight of the entire stack. public override float overallWeight { get; } Property Value float Stackable item, which can be stacked up to 4E9. quantity public virtual uint quantity { get; } Property Value uint Stackable item, which can be stacked up to 4E9. Methods SetQuantity(uint) Sets the quantity of the stackable item. public virtual bool SetQuantity(uint newQuantity) Parameters newQuantity uint New quantity value to set. Returns bool True if the quantity was successfully set; otherwise, false. Take(uint) Takes a specified quantity from the stackable item. public virtual Stackable Take(uint quantity) Parameters quantity uint Quantity to take from the stackable item. Returns Stackable A new stackable item with the taken quantity, or null if the operation fails."
  },
  "ScriptReference/Animeska34.InventorySystem.UI.FullItemView.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.UI.FullItemView.html",
    "title": "Class FullItemView | Animeska34 Docs",
    "keywords": "Class FullItemView Namespace Animeska34.InventorySystem.UI Assembly Animeska34.InventorySystem.dll Component, to graphically represent Item using Unity UI [AddComponentMenu(\"Animeska34/Inventory System/Full Item View\")] public class FullItemView : ItemView Inheritance object Object Component Behaviour MonoBehaviour ItemView FullItemView Inherited Members ItemView.target ItemView.source ItemView.onSelected ItemView.onDeselected ItemView.Setup(InventoryView, Item) ItemView.Select() MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Refresh() Refreshes the ItemView. public override void Refresh()"
  },
  "ScriptReference/Animeska34.InventorySystem.UI.InventoryView.InventorySortMethod.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.UI.InventoryView.InventorySortMethod.html",
    "title": "Delegate InventoryView.InventorySortMethod | Animeska34 Docs",
    "keywords": "Delegate InventoryView.InventorySortMethod Namespace Animeska34.InventorySystem.UI Assembly Animeska34.InventorySystem.dll Sort method, used to sort items in Inventory View public delegate List<Item> InventoryView.InventorySortMethod(List<Item> source, bool ascending = true) Parameters source List<Item> List to sort ascending bool Is ascending sorting required Returns List<Item> Sorted List"
  },
  "ScriptReference/Animeska34.InventorySystem.UI.InventoryView.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.UI.InventoryView.html",
    "title": "Class InventoryView | Animeska34 Docs",
    "keywords": "Class InventoryView Namespace Animeska34.InventorySystem.UI Assembly Animeska34.InventorySystem.dll Component to graphically represent the content of an inventory using Unity UI. [AddComponentMenu(\"Animeska34/Inventory System/Inventory View\")] public class InventoryView : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour InventoryView Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields onItemDeselected Event that is triggered when an ItemView is deselected. public UnityEvent<ItemView> onItemDeselected Field Value UnityEvent<ItemView> Component to graphically represent the content of an inventory using Unity UI. onItemSelected Event that is triggered when an ItemView is selected. public UnityEvent<ItemView> onItemSelected Field Value UnityEvent<ItemView> Component to graphically represent the content of an inventory using Unity UI. parent public Transform parent Field Value Transform Component to graphically represent the content of an inventory using Unity UI. Properties selected Gets or sets the currently selected ItemView. public ItemView selected { get; } Property Value ItemView Component to graphically represent the content of an inventory using Unity UI. setup Gets whether the Inventory View is set up. public bool setup { get; } Property Value bool Component to graphically represent the content of an inventory using Unity UI. Methods Clear() Remove all ItemViews. public void Clear() ClearRoutine() Coroutine to remove all ItemViews. public IEnumerator ClearRoutine() Returns IEnumerator Component to graphically represent the content of an inventory using Unity UI. Deselect() Deselect the currently selected ItemView. public virtual void Deselect() Refresh() Refresh every ItemView in this InventoryView. [ContextMenu(\"Refresh\")] public void Refresh() RefreshRoutine() Coroutine to refresh every ItemView in the InventoryView. public IEnumerator RefreshRoutine() Returns IEnumerator Component to graphically represent the content of an inventory using Unity UI. Resetup() Completely resets the inventory setup. public void Resetup() ResetupRoutine() Coroutine to completely reset the inventory setup. public IEnumerator ResetupRoutine() Returns IEnumerator Component to graphically represent the content of an inventory using Unity UI. Select(ItemView) Select a specific ItemView in the inventory. public virtual void Select(ItemView view) Parameters view ItemView ItemView to select SetupRoutine(IInventory, Type, InventorySortMethod, bool) Coroutine to set up the inventory view. public IEnumerator SetupRoutine(IInventory target, Type filter = null, InventoryView.InventorySortMethod sortMethod = null, bool ascending = false) Parameters target IInventory Target inventory filter Type Type of items to show sortMethod InventoryView.InventorySortMethod Method used for sorting items ascending bool Is ascending sorting required Returns IEnumerator Component to graphically represent the content of an inventory using Unity UI. Setup<T>(IInventory, InventorySortMethod, bool) Sets up the inventory view. public void Setup<T>(IInventory target, InventoryView.InventorySortMethod sortMethod = null, bool ascending = false) where T : Item Parameters target IInventory Target inventory sortMethod InventoryView.InventorySortMethod Method used for sorting ascending bool Flag indicating whether ascending sorting is required Type Parameters T Type of item to show Start() protected virtual void Start()"
  },
  "ScriptReference/Animeska34.InventorySystem.UI.ItemView.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.UI.ItemView.html",
    "title": "Class ItemView | Animeska34 Docs",
    "keywords": "Class ItemView Namespace Animeska34.InventorySystem.UI Assembly Animeska34.InventorySystem.dll Unity UI component to graphically represent an Item. [AddComponentMenu(\"Animeska34/Inventory System/Item View\")] public class ItemView : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ItemView Derived FullItemView Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields onDeselected Event triggered when this ItemView is deselected. public UnityEvent onDeselected Field Value UnityEvent Unity UI component to graphically represent an Item. onSelected Event triggered when this ItemView is selected. public UnityEvent onSelected Field Value UnityEvent Unity UI component to graphically represent an Item. Properties source InventoryView assigned to public InventoryView source { get; } Property Value InventoryView Unity UI component to graphically represent an Item. target The Item represented by this ItemView. public Item target { get; } Property Value Item Unity UI component to graphically represent an Item. Methods Refresh() Refreshes the ItemView. public virtual void Refresh() Select() Selects this ItemView. public virtual void Select() Setup(InventoryView, Item) Set up the ItemView. public virtual void Setup(InventoryView source, Item target) Parameters source InventoryView The InventoryView to which this ItemView is assigned. target Item The Item to represent."
  },
  "ScriptReference/Animeska34.InventorySystem.UI.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.UI.html",
    "title": "Namespace Animeska34.InventorySystem.UI | Animeska34 Docs",
    "keywords": "Namespace Animeska34.InventorySystem.UI Classes FullItemView Component, to graphically represent Item using Unity UI InventoryView Component to graphically represent the content of an inventory using Unity UI. ItemView Unity UI component to graphically represent an Item. Delegates InventoryView.InventorySortMethod Sort method, used to sort items in Inventory View"
  },
  "ScriptReference/Animeska34.InventorySystem.html": {
    "href": "ScriptReference/Animeska34.InventorySystem.html",
    "title": "Namespace Animeska34.InventorySystem | Animeska34 Docs",
    "keywords": "Namespace Animeska34.InventorySystem Classes Durable Item with durability that can be damaged. IntegratedInventory Represents an inventory system that can be added to any object. Inventory Inventory component that can be added to any GameObject. Compatible with the SaveSystem. InventoryManager Manages all item libraries, providing access to items and their properties. Item Represents a basic item in the inventory system. ItemData Static data of an item, which is universal across all item instances. ItemLibrary ScriptableObject representing a library of items for the inventory system. ItemObject Represents an instantiated item within the game. LimitedStackable Limited stackable item, which can be stacked up to a custom limit. Stackable Stackable item, which can be stacked up to 4E9. Interfaces IInventory Base inventory interface, implementing IEnumerable and IEnumerator."
  },
  "ScriptReference/Animeska34.NetworkDiscovery.DiscoveredServer.html": {
    "href": "ScriptReference/Animeska34.NetworkDiscovery.DiscoveredServer.html",
    "title": "Class DiscoveredServer | Animeska34 Docs",
    "keywords": "Class DiscoveredServer Namespace Animeska34.NetworkDiscovery Assembly Animeska34.NetworkDiscovery.dll [Serializable] public class DiscoveredServer Inheritance object DiscoveredServer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties endPoint public EndPoint endPoint { get; } Property Value EndPoint message public string message { get; } Property Value string"
  },
  "ScriptReference/Animeska34.NetworkDiscovery.DiscoveryConfirmation.html": {
    "href": "ScriptReference/Animeska34.NetworkDiscovery.DiscoveryConfirmation.html",
    "title": "Class DiscoveryConfirmation | Animeska34 Docs",
    "keywords": "Class DiscoveryConfirmation Namespace Animeska34.NetworkDiscovery Assembly Animeska34.NetworkDiscovery.dll public abstract class DiscoveryConfirmation : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DiscoveryConfirmation Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Accept(string) public abstract bool Accept(string message) Parameters message string Returns bool"
  },
  "ScriptReference/Animeska34.NetworkDiscovery.Test.html": {
    "href": "ScriptReference/Animeska34.NetworkDiscovery.Test.html",
    "title": "Class Test | Animeska34 Docs",
    "keywords": "Class Test Namespace Animeska34.NetworkDiscovery Assembly Animeska34.NetworkDiscovery.dll public class Test : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Test Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods PrintResult(List<DiscoveredServer>) public void PrintResult(List<DiscoveredServer> discovered) Parameters discovered List<DiscoveredServer>"
  },
  "ScriptReference/Animeska34.NetworkDiscovery.Transceiver.html": {
    "href": "ScriptReference/Animeska34.NetworkDiscovery.Transceiver.html",
    "title": "Class Transceiver | Animeska34 Docs",
    "keywords": "Class Transceiver Namespace Animeska34.NetworkDiscovery Assembly Animeska34.NetworkDiscovery.dll [AddComponentMenu(\"Animeska34/Network Discovery/Transceiver\")] public class Transceiver : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Transceiver Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields discoveredServers public List<DiscoveredServer> discoveredServers Field Value List<DiscoveredServer> discoveryMessage [TextArea] public string discoveryMessage Field Value string onDiscovered public UnityEvent<DiscoveredServer> onDiscovered Field Value UnityEvent<DiscoveredServer> onDiscoveryCompleted public UnityEvent<List<DiscoveredServer>> onDiscoveryCompleted Field Value UnityEvent<List<DiscoveredServer>> port public int port Field Value int timeout public float timeout Field Value float Methods Recive() public void Recive()"
  },
  "ScriptReference/Animeska34.NetworkDiscovery.Transponder.html": {
    "href": "ScriptReference/Animeska34.NetworkDiscovery.Transponder.html",
    "title": "Class Transponder | Animeska34 Docs",
    "keywords": "Class Transponder Namespace Animeska34.NetworkDiscovery Assembly Animeska34.NetworkDiscovery.dll [AddComponentMenu(\"Animeska34/Network Discovery/Transponder\")] public class Transponder : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Transponder Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields confirmation public DiscoveryConfirmation confirmation Field Value DiscoveryConfirmation port public int port Field Value int responceMessage [TextArea] public string responceMessage Field Value string"
  },
  "ScriptReference/Animeska34.NetworkDiscovery.html": {
    "href": "ScriptReference/Animeska34.NetworkDiscovery.html",
    "title": "Namespace Animeska34.NetworkDiscovery | Animeska34 Docs",
    "keywords": "Namespace Animeska34.NetworkDiscovery Classes DiscoveredServer DiscoveryConfirmation Test Transceiver Transponder"
  },
  "ScriptReference/Animeska34.SaveSystem.ISaveable.html": {
    "href": "ScriptReference/Animeska34.SaveSystem.ISaveable.html",
    "title": "Interface ISaveable | Animeska34 Docs",
    "keywords": "Interface ISaveable Namespace Animeska34.SaveSystem Assembly Animeska34.SaveSystem.dll ISaveable interface used by Saveable to serialize/deserialize MonoBehaviours attached to Saveable GameObjects. public interface ISaveable Remarks This interface is implemented by MonoBehaviours that need custom serialization and deserialization logic when attached to Saveable GameObjects. Saveable objects use this interface to interact with attached components during the game's saving and loading processes. Methods Deserialize(XmlElement, XMLUtility) Method called by Saveable to deserialize this ISaveable. bool Deserialize(XmlElement element, XMLUtility utility) Parameters element XmlElement The XmlElement containing the serialized data for the ISaveable. utility XMLUtility The XMLUtility instance to assist in deserialization. Returns bool True if deserialization is successful, otherwise false. Remarks This method is called by Saveable to deserialize the current ISaveable object. Developers should implement custom deserialization logic for the ISaveable component within this method. Load() Virtual method called when a SaveBehaviour component is starting to load. void Load() Remarks This method is called when a SaveBehaviour component is starting the loading process. Developers can override this method to implement custom loading logic for the SaveBehaviour. Loaded() Virtual method called when a SaveBehaviour component has just been loaded. void Loaded() Remarks This method is called when a SaveBehaviour component has completed the loading process. Developers can override this method to implement custom logic for when the SaveBehaviour has been loaded. Save() Virtual method called when a SaveBehaviour component is starting to save. void Save() Remarks This method is called when a SaveBehaviour component is starting the saving process. Developers can override this method to implement custom saving logic for the SaveBehaviour. Saved() Virtual method called when a SaveBehaviour component has just been saved. void Saved() Remarks This method is called when a SaveBehaviour component has completed the saving process. Developers can override this method to implement custom logic for when the SaveBehaviour has been saved. Serialize(XmlElement, XMLUtility) Method called by Saveable to serialize this ISaveable. bool Serialize(XmlElement element, XMLUtility utility) Parameters element XmlElement The XmlElement to serialize the ISaveable into. utility XMLUtility The XMLUtility instance to assist in serialization. Returns bool True if serialization is successful, otherwise false. Remarks This method is called by Saveable to serialize the current ISaveable object. Developers should implement custom serialization logic for the ISaveable component within this method."
  },
  "ScriptReference/Animeska34.SaveSystem.Parsers.MonoBehaviourParser.html": {
    "href": "ScriptReference/Animeska34.SaveSystem.Parsers.MonoBehaviourParser.html",
    "title": "Class MonoBehaviourParser | Animeska34 Docs",
    "keywords": "Class MonoBehaviourParser Namespace Animeska34.SaveSystem.Parsers Assembly Animeska34.SaveSystem.dll Obsolete class representing an old MonoBehaviour parser that is no longer functional. [Obsolete] public class MonoBehaviourParser : IXMLParser Inheritance object MonoBehaviourParser Implements IXMLParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This class, marked as Obsolete, previously served as a MonoBehaviour parser but is no longer functional. Developers are advised not to use this class, as it may not work as intended and could lead to issues. Properties elementName public string elementName { get; } Property Value string Obsolete class representing an old MonoBehaviour parser that is no longer functional. suppotedType public Type suppotedType { get; } Property Value Type Obsolete class representing an old MonoBehaviour parser that is no longer functional. Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement data, XMLUtility source) Parameters data XmlElement Obsolete class representing an old MonoBehaviour parser that is no longer functional. source XMLUtility Obsolete class representing an old MonoBehaviour parser that is no longer functional. Returns object Obsolete class representing an old MonoBehaviour parser that is no longer functional. Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement target, ref object data, XMLUtility source) Parameters target XmlElement Obsolete class representing an old MonoBehaviour parser that is no longer functional. data object Obsolete class representing an old MonoBehaviour parser that is no longer functional. source XMLUtility Obsolete class representing an old MonoBehaviour parser that is no longer functional. Returns bool Obsolete class representing an old MonoBehaviour parser that is no longer functional."
  },
  "ScriptReference/Animeska34.SaveSystem.Parsers.html": {
    "href": "ScriptReference/Animeska34.SaveSystem.Parsers.html",
    "title": "Namespace Animeska34.SaveSystem.Parsers | Animeska34 Docs",
    "keywords": "Namespace Animeska34.SaveSystem.Parsers Classes MonoBehaviourParser Obsolete class representing an old MonoBehaviour parser that is no longer functional."
  },
  "ScriptReference/Animeska34.SaveSystem.PrefabLibrary.html": {
    "href": "ScriptReference/Animeska34.SaveSystem.PrefabLibrary.html",
    "title": "Class PrefabLibrary | Animeska34 Docs",
    "keywords": "Class PrefabLibrary Namespace Animeska34.SaveSystem Assembly Animeska34.SaveSystem.dll PrefabLibrary class representing a library of prefabs. [CreateAssetMenu(menuName = \"Animeska34/Save System/Prefab Library\")] public class PrefabLibrary : ScriptableObject Inheritance object Object ScriptableObject PrefabLibrary Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This ScriptableObject class serves as a library of prefabs, which can be recreated by GUID during the game's loading process from a file. Developers can use this class to organize and manage a collection of prefabs for easy access and instantiation. Fields prefabs Gets a list of current Saveable objects attached to this PrefabLibrary. public List<Saveable> prefabs Field Value List<Saveable> PrefabLibrary class representing a library of prefabs. Remarks This property returns a list of current Saveable objects that are attached to this PrefabLibrary. Developers can use this list to access and manage the Saveable objects associated with the library. Properties this[string] Finds a Saveable object in the library by GUID. public Saveable this[string guid] { get; } Parameters guid string The GUID (Globally Unique Identifier) of the Saveable object to find. Property Value Saveable The Saveable object with the specified GUID if found; otherwise, null. Remarks This indexer allows developers to find a Saveable object in the library based on its GUID. Returns the Saveable object with the specified GUID if found; otherwise, returns null."
  },
  "ScriptReference/Animeska34.SaveSystem.SaveBehaviour.html": {
    "href": "ScriptReference/Animeska34.SaveSystem.SaveBehaviour.html",
    "title": "Class SaveBehaviour | Animeska34 Docs",
    "keywords": "Class SaveBehaviour Namespace Animeska34.SaveSystem Assembly Animeska34.SaveSystem.dll SaveBehaviour abstract class implementing ISaveable interface. [RequireComponent(typeof(Saveable))] [Serializable] public abstract class SaveBehaviour : MonoBehaviour, ISaveable Inheritance object Object Component Behaviour MonoBehaviour SaveBehaviour Implements ISaveable Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This class, derived from MonoBehaviour, is designed to be saved to the save file during scene saving. Developers can extend this class for MonoBehaviour components that need to persist across scene loads. Methods Deserialize(XmlElement, XMLUtility) Method called by Saveable to deserialize this ISaveable. public virtual bool Deserialize(XmlElement element, XMLUtility utility) Parameters element XmlElement The XmlElement containing the serialized data for the ISaveable. utility XMLUtility The XMLUtility instance to assist in deserialization. Returns bool True if deserialization is successful, otherwise false. Remarks This method is called by Saveable to deserialize the current ISaveable object. Developers should implement custom deserialization logic for the ISaveable component within this method. Load() Virtual method called when a SaveBehaviour component is starting to load. public virtual void Load() Remarks This method is called when a SaveBehaviour component is starting the loading process. Developers can override this method to implement custom loading logic for the SaveBehaviour. Loaded() Virtual method called when a SaveBehaviour component has just been loaded. public virtual void Loaded() Remarks This method is called when a SaveBehaviour component has completed the loading process. Developers can override this method to implement custom logic for when the SaveBehaviour has been loaded. Save() Virtual method called when a SaveBehaviour component is starting to save. public virtual void Save() Remarks This method is called when a SaveBehaviour component is starting the saving process. Developers can override this method to implement custom saving logic for the SaveBehaviour. Saved() Virtual method called when a SaveBehaviour component has just been saved. public virtual void Saved() Remarks This method is called when a SaveBehaviour component has completed the saving process. Developers can override this method to implement custom logic for when the SaveBehaviour has been saved. Serialize(XmlElement, XMLUtility) Method called by Saveable to serialize this ISaveable. public virtual bool Serialize(XmlElement element, XMLUtility utility) Parameters element XmlElement The XmlElement to serialize the ISaveable into. utility XMLUtility The XMLUtility instance to assist in serialization. Returns bool True if serialization is successful, otherwise false. Remarks This method is called by Saveable to serialize the current ISaveable object. Developers should implement custom serialization logic for the ISaveable component within this method."
  },
  "ScriptReference/Animeska34.SaveSystem.SaveManager.html": {
    "href": "ScriptReference/Animeska34.SaveSystem.SaveManager.html",
    "title": "Class SaveManager | Animeska34 Docs",
    "keywords": "Class SaveManager Namespace Animeska34.SaveSystem Assembly Animeska34.SaveSystem.dll SaveManager class responsible for game saving and loading features. [AddComponentMenu(\"Animeska34/Save System/Save Manager\")] public class SaveManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SaveManager Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This class is designed to handle the management of saving and loading game-related data. Developers can use this class as a central component for implementing save and load functionalities in their Unity projects. Fields compressData Flag indicating whether to compress save data. [Header(\"Compression\")] public bool compressData Field Value bool SaveManager class responsible for game saving and loading features. Remarks When set to true, the save data will be compressed to reduce storage space. Developers can use this flag to control whether compression is applied to save data. compression The compression strength used for compressing save data. public CompressionLevel compression Field Value CompressionLevel SaveManager class responsible for game saving and loading features. Remarks This enum variable represents the compression level or strength used for compressing save data. Developers can adjust this value to control the compression strength when compressData is set to true. defaultSaveName The default save name used for saving scenes when a specific save name is not provided. public string defaultSaveName Field Value string SaveManager class responsible for game saving and loading features. Remarks This string variable represents the default save name that will be used if a save name is not explicitly provided to the SaveScene method. Developers can adjust this value to set the default save name for saving scenes. encryptData Flag indicating whether to encrypt compressed save data with a password. public bool encryptData Field Value bool SaveManager class responsible for game saving and loading features. Remarks When set to true, the compressed save data will be encrypted using a password. Developers can use this flag to control whether encryption is applied to compressed save data. libraries List of PrefabLibrary instances representing saveable object libraries. public List<PrefabLibrary> libraries Field Value List<PrefabLibrary> SaveManager class responsible for game saving and loading features. Remarks This List contains PrefabLibrary instances that serve as libraries for saveable objects. Developers can add PrefabLibrary instances to this list to organize and manage saveable objects in the game. onSceneLoadingFinished Event triggered when the scene loading process has finished. public UnityEvent onSceneLoadingFinished Field Value UnityEvent SaveManager class responsible for game saving and loading features. Remarks This UnityEvent is invoked when the scene loading process is successfully completed. Subscribers can listen to this event to perform actions when the loading of a scene is finished. onSceneLoadingStarted Event triggered when the scene loading process has started. public UnityEvent onSceneLoadingStarted Field Value UnityEvent SaveManager class responsible for game saving and loading features. Remarks This UnityEvent is invoked when the scene loading process is initiated. Subscribers can listen to this event to perform actions when the loading of a scene has begun. onSceneSavingFinished Event triggered when the scene saving process has finished. public UnityEvent onSceneSavingFinished Field Value UnityEvent SaveManager class responsible for game saving and loading features. Remarks This UnityEvent is invoked when the scene saving process is successfully completed. Subscribers can listen to this event to perform actions when the saving of a scene is finished. onSceneSavingStarted Event triggered when the scene saving process has started. public UnityEvent onSceneSavingStarted Field Value UnityEvent SaveManager class responsible for game saving and loading features. Remarks This UnityEvent is invoked when the scene saving process is initiated. Subscribers can listen to this event to perform actions when the saving of a scene has begun. onXMLDocumentCreated Event triggered when an XML document is created during game loading, providing access to the XMLUtility instance. public UnityEvent<XMLUtility> onXMLDocumentCreated Field Value UnityEvent<XMLUtility> SaveManager class responsible for game saving and loading features. Remarks This UnityEvent is invoked when an XML document is created or loaded during game loading. Subscribers can listen to this event to perform actions when the XML document is ready, such as parsing custom data. onXMLDocumentLoaded Event triggered when an XML document is loaded, providing access to the XMLUtility instance. public UnityEvent<XMLUtility> onXMLDocumentLoaded Field Value UnityEvent<XMLUtility> SaveManager class responsible for game saving and loading features. Remarks This UnityEvent is invoked when an XML document is created or loaded. Subscribers can listen to this event to perform actions when the XML document is ready, such as inserting custom data into the save file. password The password used for encrypting save data if encryption is enabled. public string password Field Value string SaveManager class responsible for game saving and loading features. Remarks This string variable represents the password used for encrypting save data when encryption is enabled. Developers should set this value with a secure password to enhance the security of encrypted save data. savePath Partial path from FileUtility.savePath to the folder containing all save game files. public string savePath Field Value string SaveManager class responsible for game saving and loading features. Remarks This string variable represents the partial path from FileUtility.savePath to the folder containing all save game files. Developers can adjust this value to customize the directory structure for storing save game data. type Constant string representing the type of save. public const string type = \"1\" Field Value string SaveManager class responsible for game saving and loading features. Remarks This constant string is used to determine if a save uses the same format supported by the current save system. Properties instance The singleton instance of the SaveManager class. public static SaveManager instance { get; } Property Value SaveManager SaveManager class responsible for game saving and loading features. Remarks This static property provides access to the singleton instance of the SaveManager class. Developers can use this instance to access save and load functionalities across the game. loading Property indicating whether the game is currently in the process of loading. public bool loading { get; } Property Value bool SaveManager class responsible for game saving and loading features. Remarks This boolean property returns true if the game is actively loading and can be set privately. Developers can use this property to check the loading status of the SaveManager. saving Property indicating whether the game is currently in the process of saving. public bool saving { get; } Property Value bool SaveManager class responsible for game saving and loading features. Remarks This boolean property returns true if the game is actively saving and can be set privately. Developers can use this property to check the saving status of the SaveManager. Methods Deserialize(string) Deserializes the current scene from XML format. public void Deserialize(string xml) Parameters xml string The XML data representing the scene to be deserialized. Remarks This method deserializes the current scene using the provided XML data. Developers can use this method to restore the scene state from previously serialized XML data. GetPath(string) Gets the full path to a save file based on its name. public string GetPath(string saveName) Parameters saveName string The name of the save file. Returns string The full path to the save file. Remarks This method returns the full path to a save file based on its name. Developers can use this method to obtain the complete file path for a specific save file. LoadScene(string) Loads a scene with an optional custom save name. public void LoadScene(string saveName = \"\") Parameters saveName string Optional custom save name for loading a specific scene. Remarks This method initiates the process of loading a scene, allowing developers to provide a custom save name if desired. SaveScene(string) Saves the current scene with an optional custom save name. public void SaveScene(string saveName = \"\") Parameters saveName string Optional custom save name for the scene. Remarks This method initiates the process of saving the current scene, allowing developers to provide a custom save name if desired. Serialize() Serializes the current scene to XML format. public string Serialize() Returns string The serialized XML representation of the current scene. Remarks This method serializes the current scene and returns the XML representation of its data. Developers can use this method to obtain the serialized XML data for further processing or saving."
  },
  "ScriptReference/Animeska34.SaveSystem.SavePrefs.html": {
    "href": "ScriptReference/Animeska34.SaveSystem.SavePrefs.html",
    "title": "Class SavePrefs | Animeska34 Docs",
    "keywords": "Class SavePrefs Namespace Animeska34.SaveSystem Assembly Animeska34.SaveSystem.dll SavePrefs class representing game save-scope saved variables. public class SavePrefs : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SavePrefs Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This class is responsible for managing saved variables within the game's save scope. Data is saved using the SaveManager, making the saved data available only after the save file is loaded. Note that saved data will be lost if the scene was not saved in the SaveManager. Methods Deserialize(XmlElement, XMLUtility) Manually deserializes the SavePrefs object from an XmlElement using the provided XMLUtility. public static void Deserialize(XmlElement element, XMLUtility utility) Parameters element XmlElement The root XmlElement containing the serialized data for the SavePrefs. utility XMLUtility The XMLUtility instance to assist in deserialization. Remarks This static method allows developers to manually deserialize the SavePrefs object from an XmlElement using custom logic. It is called during the deserialization process, and developers can implement custom logic to restore the SavePrefs state. Get<T>(string, T) Gets a saved object of type T by its name. public static T Get<T>(string name, T defaultValue = default) Parameters name string The name associated with the saved object. defaultValue T The default value to return if the saved object is not found. Returns T The saved object of type T, or the default value if not found. Type Parameters T The type of the saved object. Remarks This static method retrieves a saved object by its name within the game's save scope. Developers can use this method to obtain saved objects with optional default values. HasValue(string) Checks if a value with the specified name is present in the saved values. public static bool HasValue(string name) Parameters name string The name associated with the saved value. Returns bool True if a value with the specified name is present, otherwise false. Remarks This static method checks if a value with the specified name is present in the SavePrefs within the game's save scope. Developers can use this method to determine the existence of a saved value. Serialize(XmlElement, XMLUtility) Manually serializes the SavePrefs object into an XmlElement using the provided XMLUtility. public static void Serialize(XmlElement element, XMLUtility utility) Parameters element XmlElement The XmlElement to serialize the SavePrefs into. utility XMLUtility The XMLUtility instance to assist in serialization. Remarks This static method allows developers to manually serialize the SavePrefs object into an XmlElement using custom logic. It is called during the serialization process and returns the XmlElement containing the serialized data. Set<T>(string, T) Saves a value to the SavePrefs using its associated name. public static void Set<T>(string name, T obj) Parameters name string The name associated with the saved value. obj T The value to be saved. Type Parameters T The type of the value to be saved. Remarks This static method saves a value to the SavePrefs using its associated name within the game's save scope. Developers can use this method to store values for later retrieval."
  },
  "ScriptReference/Animeska34.SaveSystem.Saveable.SerializeData.html": {
    "href": "ScriptReference/Animeska34.SaveSystem.Saveable.SerializeData.html",
    "title": "Enum Saveable.SerializeData | Animeska34 Docs",
    "keywords": "Enum Saveable.SerializeData Namespace Animeska34.SaveSystem Assembly Animeska34.SaveSystem.dll Flags enumeration representing the serialization data options for Saveable objects. [Flags] public enum Saveable.SerializeData Fields Active = 16 Serialize the active state of the GameObject. Layer = 128 Serialize the layer of the GameObject. Name = 32 Serialize the name of the GameObject. Position = 2 Serialize the position of the GameObject. Rotation = 4 Serialize the rotation of the GameObject. Scale = 8 Serialize the scale of the GameObject. Static = 256 Serialize the static status of the GameObject. Tag = 64 Serialize the tag of the GameObject. Remarks The SerializeData enum is used to determine which specific data should be serialized for Saveable objects during the game's saving process. Each enum value represents a different piece of data associated with a GameObject that can be serialized."
  },
  "ScriptReference/Animeska34.SaveSystem.Saveable.Type.html": {
    "href": "ScriptReference/Animeska34.SaveSystem.Saveable.Type.html",
    "title": "Enum Saveable.Type | Animeska34 Docs",
    "keywords": "Enum Saveable.Type Namespace Animeska34.SaveSystem Assembly Animeska34.SaveSystem.dll Enumeration representing the type of Saveable object. public enum Saveable.Type Fields Prefab = 1 The 'Prefab' type indicates a Saveable object associated with a prefab GameObject. Static = 0 The 'Static' type indicates a Saveable object associated with a static GameObject in the scene. Remarks Developers can use this enum to identify the type of a Saveable object."
  },
  "ScriptReference/Animeska34.SaveSystem.Saveable.html": {
    "href": "ScriptReference/Animeska34.SaveSystem.Saveable.html",
    "title": "Class Saveable | Animeska34 Docs",
    "keywords": "Class Saveable Namespace Animeska34.SaveSystem Assembly Animeska34.SaveSystem.dll Saveable class responsible for serializing and deserializing GameObjects during game saving/loading. [DisallowMultipleComponent] [Serializable] [AddComponentMenu(\"Animeska34/Save System/Saveable\")] public class Saveable : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Saveable Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This class is designed to handle the serialization and deserialization of GameObjects during the game's saving and loading processes. Developers can attach this script to GameObjects they want to persist across scene loads and customize serialization/deserialization logic. Fields ignore Flag indicating whether to ignore this object during scene serialization. public bool ignore Field Value bool Saveable class responsible for serializing and deserializing GameObjects during game saving/loading. Remarks When set to true, this flag indicates that the Saveable object should be ignored during the serialization process. Developers can use this flag to exclude specific objects from being serialized with the scene. Properties guid Gets the GUID (Globally Unique Identifier) of the Saveable object. public string guid { get; } Property Value string Saveable class responsible for serializing and deserializing GameObjects during game saving/loading. Remarks This property returns the GUID associated with the Saveable object. Developers can use this property to obtain the unique identifier for the object. type public Saveable.Type type { get; } Property Value Saveable.Type Saveable class responsible for serializing and deserializing GameObjects during game saving/loading. Methods Deserialize(XmlElement, XMLUtility) Manually deserializes the Saveable object from an XmlElement using the provided XMLUtility. public void Deserialize(XmlElement root, XMLUtility utility) Parameters root XmlElement The root XmlElement containing the serialized data for the Saveable object. utility XMLUtility The XMLUtility instance to assist in deserialization. Remarks This method allows developers to manually deserialize the Saveable object from an XmlElement using custom logic. It is called during the deserialization process, and developers can implement custom logic to restore the object's state. Serialize(XMLUtility) Manually serializes the Saveable object into an XmlElement using the provided XMLUtility. public XmlElement Serialize(XMLUtility utility) Parameters utility XMLUtility The XMLUtility instance to assist in serialization. Returns XmlElement The XmlElement representing the serialized data of the Saveable object. Remarks This method allows developers to manually serialize the Saveable object into an XmlElement using custom logic. It is called during the serialization process and returns the XmlElement containing the serialized data."
  },
  "ScriptReference/Animeska34.SaveSystem.html": {
    "href": "ScriptReference/Animeska34.SaveSystem.html",
    "title": "Namespace Animeska34.SaveSystem | Animeska34 Docs",
    "keywords": "Namespace Animeska34.SaveSystem Classes PrefabLibrary PrefabLibrary class representing a library of prefabs. SaveBehaviour SaveBehaviour abstract class implementing ISaveable interface. SaveManager SaveManager class responsible for game saving and loading features. SavePrefs SavePrefs class representing game save-scope saved variables. Saveable Saveable class responsible for serializing and deserializing GameObjects during game saving/loading. Interfaces ISaveable ISaveable interface used by Saveable to serialize/deserialize MonoBehaviours attached to Saveable GameObjects. Enums Saveable.SerializeData Flags enumeration representing the serialization data options for Saveable objects. Saveable.Type Enumeration representing the type of Saveable object."
  },
  "ScriptReference/Animeska34.SceneLoading.SceneLoader.html": {
    "href": "ScriptReference/Animeska34.SceneLoading.SceneLoader.html",
    "title": "Class SceneLoader | Animeska34 Docs",
    "keywords": "Class SceneLoader Namespace Animeska34.SceneLoading Assembly Animeska34.SceneLoading.dll Used for scene loading using loading scene public class SceneLoader : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SceneLoader Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields autoFinish Allows auto destroy loading scene when loading completed public bool autoFinish Field Value bool Used for scene loading using loading scene autoStart Allows auto load loading scene when loading starts public bool autoStart Field Value bool Used for scene loading using loading scene loadingFinished Calls when scene loading was finished public UnityEvent loadingFinished Field Value UnityEvent Used for scene loading using loading scene loadingStarted Calls, when loading acttally starts public UnityEvent loadingStarted Field Value UnityEvent Used for scene loading using loading scene offsetAfter Offset, in seconds before destroying loading scene (useful, for loading scene end animation) public float offsetAfter Field Value float Used for scene loading using loading scene offsetBefore Offset, in seconds before unloading old scene (useful for loading scene start animation) public float offsetBefore Field Value float Used for scene loading using loading scene Properties loading Is scene currently loading public static bool loading { get; } Property Value bool Used for scene loading using loading scene loadingScene Get or set name of loading scene, containing loading component public static string loadingScene { get; } Property Value string Used for scene loading using loading scene progress Current scene loading progress public float progress { get; } Property Value float Used for scene loading using loading scene Methods FinishLoading() Allows to destroy loading scene after loading was ended (required to call only if autoFinish set to false) public void FinishLoading() Load(string) Call, to load scene by name public static void Load(string scene) Parameters scene string Name of scene to load StartLoading() Manually start loading scene (required to call manually only if autoStart set to false) public void StartLoading()"
  },
  "ScriptReference/Animeska34.SceneLoading.SceneLoaderConfig.html": {
    "href": "ScriptReference/Animeska34.SceneLoading.SceneLoaderConfig.html",
    "title": "Class SceneLoaderConfig | Animeska34 Docs",
    "keywords": "Class SceneLoaderConfig Namespace Animeska34.SceneLoading Assembly Animeska34.SceneLoading.dll public class SceneLoaderConfig : ScriptableObject Inheritance object Object ScriptableObject SceneLoaderConfig Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields loadingScene public string loadingScene Field Value string Properties instance public static SceneLoaderConfig instance { get; } Property Value SceneLoaderConfig"
  },
  "ScriptReference/Animeska34.SceneLoading.html": {
    "href": "ScriptReference/Animeska34.SceneLoading.html",
    "title": "Namespace Animeska34.SceneLoading | Animeska34 Docs",
    "keywords": "Namespace Animeska34.SceneLoading Classes SceneLoader Used for scene loading using loading scene SceneLoaderConfig"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.ArrayParser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.ArrayParser.html",
    "title": "Class ArrayParser | Animeska34 Docs",
    "keywords": "Class ArrayParser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class ArrayParser : IXMLParser Inheritance object ArrayParser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.BooleanParser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.BooleanParser.html",
    "title": "Class BooleanParser | Animeska34 Docs",
    "keywords": "Class BooleanParser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class BooleanParser : IXMLParser Inheritance object BooleanParser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.DictionaryParser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.DictionaryParser.html",
    "title": "Class DictionaryParser | Animeska34 Docs",
    "keywords": "Class DictionaryParser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class DictionaryParser : IXMLParser Inheritance object DictionaryParser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement data, XMLUtility source) Parameters data XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement target, ref object data, XMLUtility source) Parameters target XmlElement data object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.DoubleParser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.DoubleParser.html",
    "title": "Class DoubleParser | Animeska34 Docs",
    "keywords": "Class DoubleParser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class DoubleParser : IXMLParser Inheritance object DoubleParser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.EnumParser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.EnumParser.html",
    "title": "Class EnumParser | Animeska34 Docs",
    "keywords": "Class EnumParser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class EnumParser : IXMLParser Inheritance object EnumParser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement data, XMLUtility source) Parameters data XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement target, ref object data, XMLUtility source) Parameters target XmlElement data object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.Int16Parser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.Int16Parser.html",
    "title": "Class Int16Parser | Animeska34 Docs",
    "keywords": "Class Int16Parser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class Int16Parser : IXMLParser Inheritance object Int16Parser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.Int32Parser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.Int32Parser.html",
    "title": "Class Int32Parser | Animeska34 Docs",
    "keywords": "Class Int32Parser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class Int32Parser : IXMLParser Inheritance object Int32Parser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.Int64Parser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.Int64Parser.html",
    "title": "Class Int64Parser | Animeska34 Docs",
    "keywords": "Class Int64Parser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class Int64Parser : IXMLParser Inheritance object Int64Parser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.ListParser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.ListParser.html",
    "title": "Class ListParser | Animeska34 Docs",
    "keywords": "Class ListParser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class ListParser : IXMLParser Inheritance object ListParser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.ObjectParser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.ObjectParser.html",
    "title": "Class ObjectParser | Animeska34 Docs",
    "keywords": "Class ObjectParser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class ObjectParser : IXMLParser Inheritance object ObjectParser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.QuaternionParser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.QuaternionParser.html",
    "title": "Class QuaternionParser | Animeska34 Docs",
    "keywords": "Class QuaternionParser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class QuaternionParser : IXMLParser Inheritance object QuaternionParser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.SingleParser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.SingleParser.html",
    "title": "Class SingleParser | Animeska34 Docs",
    "keywords": "Class SingleParser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class SingleParser : IXMLParser Inheritance object SingleParser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.StringParser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.StringParser.html",
    "title": "Class StringParser | Animeska34 Docs",
    "keywords": "Class StringParser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class StringParser : IXMLParser Inheritance object StringParser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement data, XMLUtility source) Parameters data XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement target, ref object data, XMLUtility source) Parameters target XmlElement data object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.UInt16Parser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.UInt16Parser.html",
    "title": "Class UInt16Parser | Animeska34 Docs",
    "keywords": "Class UInt16Parser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class UInt16Parser : IXMLParser Inheritance object UInt16Parser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.UInt32Parser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.UInt32Parser.html",
    "title": "Class UInt32Parser | Animeska34 Docs",
    "keywords": "Class UInt32Parser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class UInt32Parser : IXMLParser Inheritance object UInt32Parser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.UInt64Parser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.UInt64Parser.html",
    "title": "Class UInt64Parser | Animeska34 Docs",
    "keywords": "Class UInt64Parser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class UInt64Parser : IXMLParser Inheritance object UInt64Parser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.Vector2IntParser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.Vector2IntParser.html",
    "title": "Class Vector2IntParser | Animeska34 Docs",
    "keywords": "Class Vector2IntParser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class Vector2IntParser : IXMLParser Inheritance object Vector2IntParser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.Vector2Parser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.Vector2Parser.html",
    "title": "Class Vector2Parser | Animeska34 Docs",
    "keywords": "Class Vector2Parser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class Vector2Parser : IXMLParser Inheritance object Vector2Parser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.Vector3IntParser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.Vector3IntParser.html",
    "title": "Class Vector3IntParser | Animeska34 Docs",
    "keywords": "Class Vector3IntParser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class Vector3IntParser : IXMLParser Inheritance object Vector3IntParser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.Vector3Parser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.Vector3Parser.html",
    "title": "Class Vector3Parser | Animeska34 Docs",
    "keywords": "Class Vector3Parser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class Vector3Parser : IXMLParser Inheritance object Vector3Parser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.Vector4Parser.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.Vector4Parser.html",
    "title": "Class Vector4Parser | Animeska34 Docs",
    "keywords": "Class Vector4Parser Namespace Animeska34.Serialization.XML.Parsers Assembly Animeska34.Serialization.XML.dll public class Vector4Parser : IXMLParser Inheritance object Vector4Parser Implements IXMLParser Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Properties elementName public string elementName { get; } Property Value string suppotedType public Type suppotedType { get; } Property Value Type Methods Deserialize(XmlElement, XMLUtility) public object Deserialize(XmlElement serialized, XMLUtility source) Parameters serialized XmlElement source XMLUtility Returns object Serialize(XmlElement, ref object, XMLUtility) public bool Serialize(XmlElement element, ref object o, XMLUtility source) Parameters element XmlElement o object source XMLUtility Returns bool"
  },
  "ScriptReference/Animeska34.Serialization.XML.Parsers.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Parsers.html",
    "title": "Namespace Animeska34.Serialization.XML.Parsers | Animeska34 Docs",
    "keywords": "Namespace Animeska34.Serialization.XML.Parsers Classes ArrayParser BooleanParser DictionaryParser DoubleParser EnumParser Int16Parser Int32Parser Int64Parser ListParser ObjectParser QuaternionParser SingleParser StringParser UInt16Parser UInt32Parser UInt64Parser Vector2IntParser Vector2Parser Vector3IntParser Vector3Parser Vector4Parser"
  },
  "ScriptReference/Animeska34.Serialization.XML.Service.XMLTypeLibrary.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Service.XMLTypeLibrary.html",
    "title": "Class XMLTypeLibrary | Animeska34 Docs",
    "keywords": "Class XMLTypeLibrary Namespace Animeska34.Serialization.XML.Service Assembly Animeska34.Serialization.XML.dll public static class XMLTypeLibrary Inheritance object XMLTypeLibrary Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields defaultParser public static readonly IXMLParser defaultParser Field Value IXMLParser Methods GetParser(string) public static IXMLParser GetParser(string elementName) Parameters elementName string Returns IXMLParser GetParser(Type) public static IXMLParser GetParser(Type t) Parameters t Type Returns IXMLParser GetParser<T>() public static IXMLParser GetParser<T>() Returns IXMLParser Type Parameters T Register<T>() public static void Register<T>() where T : IXMLParser, new() Type Parameters T Unregister<T>() public static void Unregister<T>() Type Parameters T"
  },
  "ScriptReference/Animeska34.Serialization.XML.Service.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.Service.html",
    "title": "Namespace Animeska34.Serialization.XML.Service | Animeska34 Docs",
    "keywords": "Namespace Animeska34.Serialization.XML.Service Classes XMLTypeLibrary"
  },
  "ScriptReference/Animeska34.Serialization.XML.XMLUtility.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.XMLUtility.html",
    "title": "Class XMLUtility | Animeska34 Docs",
    "keywords": "Class XMLUtility Namespace Animeska34.Serialization.XML Assembly Animeska34.Serialization.XML.dll public class XMLUtility Inheritance object XMLUtility Inherited Members object.ToString() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() Fields currentField public FieldInfo currentField Field Value FieldInfo formatting public static Formatting formatting Field Value Formatting xmlDocument public readonly XmlDocument xmlDocument Field Value XmlDocument Methods Deserialize(XmlElement) public object Deserialize(XmlElement element) Parameters element XmlElement Returns object Deserialize(XmlNode) public object Deserialize(XmlNode element) Parameters element XmlNode Returns object Deserialize<T>(XmlElement) public T Deserialize<T>(XmlElement element) Parameters element XmlElement Returns T Type Parameters T Deserialize<T>(XmlNode) public T Deserialize<T>(XmlNode element) Parameters element XmlNode Returns T Type Parameters T FromXML(string) public static object FromXML(string xml) Parameters xml string Returns object FromXML<T>(string) public static T FromXML<T>(string xml) Parameters xml string Returns T Type Parameters T Serialize(object, FieldInfo) public XmlElement Serialize(object o, FieldInfo field) Parameters o object field FieldInfo Returns XmlElement Serialize(object, Type, FieldInfo) public XmlElement Serialize(object o, Type t, FieldInfo field) Parameters o object t Type field FieldInfo Returns XmlElement Serialize<T>(object, FieldInfo) public XmlElement Serialize<T>(object o, FieldInfo field) Parameters o object field FieldInfo Returns XmlElement Type Parameters T ToXML(object) public static string ToXML(object o) Parameters o object Returns string"
  },
  "ScriptReference/Animeska34.Serialization.XML.html": {
    "href": "ScriptReference/Animeska34.Serialization.XML.html",
    "title": "Namespace Animeska34.Serialization.XML | Animeska34 Docs",
    "keywords": "Namespace Animeska34.Serialization.XML Classes XMLUtility"
  },
  "ScriptReference/Animeska34.Shared.Editor.Prefabs.html": {
    "href": "ScriptReference/Animeska34.Shared.Editor.Prefabs.html",
    "title": "Class Prefabs | Animeska34 Docs",
    "keywords": "Class Prefabs Namespace Animeska34.Shared.Editor Assembly Animeska34.Essentials.Editor.dll [Obsolete(\"Use Prefabs from Animeska34.Essentials.Editor\")] public static class Prefabs Inheritance object Prefabs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods InstantiateByGUID(string) [Obsolete] public static GameObject InstantiateByGUID(string guid) Parameters guid string Returns GameObject InstantiateByGUID(string, MenuCommand) public static GameObject InstantiateByGUID(string guid, MenuCommand menuCommand) Parameters guid string menuCommand MenuCommand Returns GameObject InstantiateByGUID<T>(string) [Obsolete] public static T InstantiateByGUID<T>(string guid) where T : MonoBehaviour Parameters guid string Returns T Type Parameters T InstantiateByGUID<T>(string, MenuCommand) public static T InstantiateByGUID<T>(string guid, MenuCommand menuCommand) where T : MonoBehaviour Parameters guid string menuCommand MenuCommand Returns T Type Parameters T InstantiateFromResources(string) [Obsolete] public static GameObject InstantiateFromResources(string path) Parameters path string Returns GameObject InstantiateFromResources(string, MenuCommand) public static GameObject InstantiateFromResources(string path, MenuCommand menuCommand) Parameters path string menuCommand MenuCommand Returns GameObject InstantiateFromResources<T>(string) [Obsolete] public static T InstantiateFromResources<T>(string path) where T : MonoBehaviour Parameters path string Returns T Type Parameters T InstantiateFromResources<T>(string, MenuCommand) public static T InstantiateFromResources<T>(string path, MenuCommand menuCommand) where T : MonoBehaviour Parameters path string menuCommand MenuCommand Returns T Type Parameters T InstantiateGameObject(GameObject, MenuCommand) public static GameObject InstantiateGameObject(GameObject item, MenuCommand menuCommand) Parameters item GameObject menuCommand MenuCommand Returns GameObject"
  },
  "ScriptReference/Animeska34.Shared.Editor.SceneHierarchyWindow.html": {
    "href": "ScriptReference/Animeska34.Shared.Editor.SceneHierarchyWindow.html",
    "title": "Class SceneHierarchyWindow | Animeska34 Docs",
    "keywords": "Class SceneHierarchyWindow Namespace Animeska34.Shared.Editor Assembly Animeska34.Essentials.Editor.dll [Obsolete(\"Use SceneHierarchyWindow from Animeska34.Essentials.Editor\")] public static class SceneHierarchyWindow Inheritance object SceneHierarchyWindow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FrameObject(int, bool) public static void FrameObject(int instanceID, bool ping = false) Parameters instanceID int ping bool FrameObject(GameObject, bool) public static void FrameObject(GameObject go, bool ping = false) Parameters go GameObject ping bool FrameSelected(bool) public static void FrameSelected(bool ping = false) Parameters ping bool GetInstance() public static EditorWindow GetInstance() Returns EditorWindow"
  },
  "ScriptReference/Animeska34.Shared.Editor.html": {
    "href": "ScriptReference/Animeska34.Shared.Editor.html",
    "title": "Namespace Animeska34.Shared.Editor | Animeska34 Docs",
    "keywords": "Namespace Animeska34.Shared.Editor Classes Prefabs SceneHierarchyWindow"
  },
  "ScriptReference/Animeska34.Shared.TransformExtension.html": {
    "href": "ScriptReference/Animeska34.Shared.TransformExtension.html",
    "title": "Class TransformExtension | Animeska34 Docs",
    "keywords": "Class TransformExtension Namespace Animeska34.Shared Assembly Animeska34.Essentials.dll [Obsolete(\"Use TransformExtension from Animeska34.Essentials\")] public static class TransformExtension Inheritance object TransformExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods EnsureInsideCanvas(Transform, bool) public static bool EnsureInsideCanvas(this Transform transform, bool createIfNotExists = false) Parameters transform Transform createIfNotExists bool Returns bool EnsureInside<T>(Transform, bool) public static bool EnsureInside<T>(this Transform transform, bool createIfNotExists = false) where T : Component Parameters transform Transform createIfNotExists bool Returns bool Type Parameters T"
  },
  "ScriptReference/Animeska34.Shared.html": {
    "href": "ScriptReference/Animeska34.Shared.html",
    "title": "Namespace Animeska34.Shared | Animeska34 Docs",
    "keywords": "Namespace Animeska34.Shared Classes TransformExtension"
  },
  "ScriptReference/Animeska34.UHTTP.UHTTPManager.html": {
    "href": "ScriptReference/Animeska34.UHTTP.UHTTPManager.html",
    "title": "Class UHTTPManager | Animeska34 Docs",
    "keywords": "Class UHTTPManager Namespace Animeska34.UHTTP Assembly Animeska34.UHTTP.dll [AddComponentMenu(\"Animeska34/UHTTP/UHTTP Manager\")] public class UHTTPManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UHTTPManager Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields port public int port Field Value int Properties instance public static UHTTPManager instance { get; } Property Value UHTTPManager"
  },
  "ScriptReference/Animeska34.UHTTP.UPage.html": {
    "href": "ScriptReference/Animeska34.UHTTP.UPage.html",
    "title": "Class UPage | Animeska34 Docs",
    "keywords": "Class UPage Namespace Animeska34.UHTTP Assembly Animeska34.UHTTP.dll public abstract class UPage : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UPage Derived ERCorePage Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields responceBody protected string responceBody Field Value string Properties getRequests protected Dictionary<string, string> getRequests { get; } Property Value Dictionary<string, string> postRequests protected Dictionary<string, string> postRequests { get; } Property Value Dictionary<string, string> requestBody protected string requestBody { get; } Property Value string url public virtual string url { get; protected set; } Property Value string Methods Awake() protected virtual void Awake() OnDisable() protected virtual void OnDisable() OnEnable() protected virtual void OnEnable() OnRequest(HttpListenerContext) protected abstract void OnRequest(HttpListenerContext context) Parameters context HttpListenerContext SetupURL() protected virtual void SetupURL()"
  },
  "ScriptReference/Animeska34.UHTTP.html": {
    "href": "ScriptReference/Animeska34.UHTTP.html",
    "title": "Namespace Animeska34.UHTTP | Animeska34 Docs",
    "keywords": "Namespace Animeska34.UHTTP Classes UHTTPManager UPage"
  },
  "ScriptReference/Animeska34.WeaponSystem.Beam.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem.Beam.html",
    "title": "Class Beam | Animeska34 Docs",
    "keywords": "Class Beam Namespace Animeska34.WeaponSystem Assembly Animeska34.WeaponSystem.dll Represents a beam weapon in the game. [RequireComponent(typeof(LineRenderer))] [AddComponentMenu(\"Animeska34/Weapon System/Beam\")] public class Beam : Weapon Inheritance object Object Component Behaviour MonoBehaviour Weapon Beam Inherited Members Weapon.safeLock Weapon.GetSpread(float) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This class derives from the Weapon base class and is specifically designed to represent a beam weapon. Developers can use this class as a foundation for implementing beam weapons in their Unity projects. Fields beamOffset The offset from the collision point where the beam reflection should occur. public float beamOffset Field Value float Represents a beam weapon in the game. Remarks This float variable represents the offset from the collision point where the beam reflection point is adjusted. Developers can adjust this value to control the offset distance for the beam reflection point. damageType The type of damage inflicted by the beam weapon. public byte damageType Field Value byte Represents a beam weapon in the game. Remarks This byte variable represents the type of damage, such as elemental damage. Developers can use different values to denote various damage types, providing flexibility for categorizing damage. dps The damage per second (DPS) inflicted by the beam weapon. public float dps Field Value float Represents a beam weapon in the game. Remarks This float variable represents the amount of damage the beam inflicts per second. Developers can adjust this value to control the DPS of the beam weapon. dpsScale Scale applied to the damage per second (DPS) based on distance. public float dpsScale Field Value float Represents a beam weapon in the game. Remarks This float variable represents the scale applied to the DPS based on the distance from the origin to the target. Developers can adjust this value to control how much the DPS scales with distance when scaled DPS is enabled. line protected LineRenderer line Field Value LineRenderer Represents a beam weapon in the game. mask The layer mask determining which layers are affected by the beam weapon. public LayerMask mask Field Value LayerMask Represents a beam weapon in the game. Remarks This LayerMask variable specifies the layers that the beam weapon can interact with. Developers can adjust this mask to control which layers are affected by the beam. maxLength The maximum length or range of the beam. public float maxLength Field Value float Represents a beam weapon in the game. Remarks This float variable represents the maximum length or range of the beam weapon. Developers can adjust this value to control the maximum distance the beam can reach. maxReflections The maximum number of reflections allowed for the beam. public ushort maxReflections Field Value ushort Represents a beam weapon in the game. Remarks This ushort variable represents the maximum number of times the beam can reflect off surfaces. Developers can adjust this value to control the maximum number of reflections for the beam. origin The origin point from which the beam is emitted. public Transform origin Field Value Transform Represents a beam weapon in the game. Remarks This Transform variable represents the point of origin for the beam emission. Developers can assign a specific Transform to control the starting position of the beam. reflectFromDamageable Flag indicating whether the beam should reflect from objects implementing the IDamageable interface. public bool reflectFromDamageable Field Value bool Represents a beam weapon in the game. Remarks When set to true, the beam will reflect from objects that implement the IDamageable interface. Developers can use this flag to control whether reflection occurs from objects implementing IDamageable. reflectFromReflectiveOnly Flag indicating whether the beam should reflect only from objects with reflective properties. public bool reflectFromReflectiveOnly Field Value bool Represents a beam weapon in the game. Remarks When set to true, the beam will only reflect from objects with reflective properties. Developers can use this flag to control whether reflection occurs only from reflective surfaces. reflectiveTag The tag assigned to objects that are considered reflective for beam reflection. public string reflectiveTag Field Value string Represents a beam weapon in the game. Remarks This string variable represents the tag assigned to objects that the beam can reflect from. Developers can adjust this value to define the tag used for identifying reflective surfaces. scaledDps Flag indicating whether to scale the damage per second (DPS) based on distance. public bool scaledDps Field Value bool Represents a beam weapon in the game. Remarks When set to true, the DPS will be scaled based on the distance from the origin to the target. Developers can use this flag to control whether the DPS should vary depending on the distance. switchMode Flag indicating whether to switch the beam on and off with the Fire method. public bool switchMode Field Value bool Represents a beam weapon in the game. Remarks When set to true, the beam is toggled on and off by calling the Fire method. If set to false, the Fire method needs to be called continuously each frame to keep the beam shooting. Properties firing Property indicating whether the beam weapon is currently in the firing state. public bool firing { get; } Property Value bool Represents a beam weapon in the game. Remarks This boolean property returns true if the beam weapon is currently firing, and it can be set privately. Developers can use this property to check the firing status of the beam. Methods Fire() Abstract method for firing the weapon. [ContextMenu(\"Fire\")] public override void Fire() Remarks Derived classes must implement this method to define the firing behavior specific to each type of weapon. Start() protected void Start() Update() protected void Update()"
  },
  "ScriptReference/Animeska34.WeaponSystem.Cannon.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem.Cannon.html",
    "title": "Class Cannon | Animeska34 Docs",
    "keywords": "Class Cannon Namespace Animeska34.WeaponSystem Assembly Animeska34.WeaponSystem.dll Cannon class responsible for instantiating physical shells during the Fire operation. [AddComponentMenu(\"Animeska34/Weapon System/Cannon\")] public class Cannon : Weapon Inheritance object Object Component Behaviour MonoBehaviour Weapon Cannon Inherited Members Weapon.safeLock Weapon.GetSpread(float) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This class derives from the Weapon base class and is specifically designed to represent a cannon with the ability to fire physical shells. Developers can use this class as a foundation for implementing cannons in their Unity projects. Fields delay Delay between shooting from the next origin, useful for multiple barrel systems like naval guns. public float delay Field Value float Cannon class responsible for instantiating physical shells during the Fire operation. Remarks This float variable represents the duration, in seconds, between consecutive shots from different origins. Developers can adjust this value to introduce a delay between shots when firing from multiple barrel systems. maxRandomDelay The maximum amount of random delay introduced between shots. public float maxRandomDelay Field Value float Cannon class responsible for instantiating physical shells during the Fire operation. Remarks This float variable represents the maximum duration, in seconds, of the random delay introduced between consecutive shots. Developers can adjust this value to control the maximum randomization of the delay. onFire Event triggered when the cannon is fired, providing the firing origin. public UnityEvent<Transform> onFire Field Value UnityEvent<Transform> Cannon class responsible for instantiating physical shells during the Fire operation. Remarks This UnityEvent is parameterized with a Transform representing the firing origin. Subscribers can listen to this event to perform actions when the cannon is fired from a specific origin. origins Array of origins for shell instantiation. public Transform[] origins Field Value Transform[] Cannon class responsible for instantiating physical shells during the Fire operation. Remarks Each element in this array represents a position for instantiating shells, useful for multiple barrel systems such as naval guns. randomDelay Flag indicating whether to slightly randomize the delay between shots. public bool randomDelay Field Value bool Cannon class responsible for instantiating physical shells during the Fire operation. Remarks When set to true, the delay between consecutive shots will be slightly randomized, adding variability to the firing pattern. Developers can use this flag to introduce randomness in the delay between shots. reload Time between consecutive shots, representing the reload time for the cannon. public float reload Field Value float Cannon class responsible for instantiating physical shells during the Fire operation. Remarks This float variable represents the duration, in seconds, between each shot as the cannon reloads for the next firing. Developers can adjust this value to control the reload time for the cannon. shell The Shell prefab associated with the cannon for instantiating during the Fire operation. [SerializeField] protected Shell shell Field Value Shell Cannon class responsible for instantiating physical shells during the Fire operation. Remarks This variable represents the Shell prefab that will be instantiated when the cannon is fired. Developers can assign the appropriate Shell prefab to be launched from the cannon. spread The random spread of shells fired from the cannon. public float spread Field Value float Cannon class responsible for instantiating physical shells during the Fire operation. Remarks This float variable represents the random spread angle, in degrees, applied to shells fired from the cannon. Developers can adjust this value to control the dispersion or randomness in the firing direction. Properties cooldown Property representing the remaining time until the next shot is ready. public float cooldown { get; } Property Value float Cannon class responsible for instantiating physical shells during the Fire operation. Remarks This read-only float property provides the remaining cooldown time until the next shot can be fired. Developers can use this property to check the cooldown status of the cannon. reloading Property indicating whether the cannon is currently in the process of reloading. public bool reloading { get; } Property Value bool Cannon class responsible for instantiating physical shells during the Fire operation. Remarks This boolean property returns true if the cooldown is greater than 0, indicating that the cannon is actively reloading. Developers can use this property to check if the cannon is in the reloading state. Methods Fire() Abstract method for firing the weapon. public override void Fire() Remarks Derived classes must implement this method to define the firing behavior specific to each type of weapon. FireCoroutine() protected IEnumerator FireCoroutine() Returns IEnumerator Cannon class responsible for instantiating physical shells during the Fire operation. Start() protected void Start() Update() protected void Update()"
  },
  "ScriptReference/Animeska34.WeaponSystem.Damageable.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem.Damageable.html",
    "title": "Class Damageable | Animeska34 Docs",
    "keywords": "Class Damageable Namespace Animeska34.WeaponSystem Assembly Animeska34.WeaponSystem.dll Default implementation of IDamageable interface. Does not use damage types. [AddComponentMenu(\"Animeska34/Weapon System/Damageable\")] public class Damageable : MonoBehaviour, IDamageable Inheritance object Object Component Behaviour MonoBehaviour Damageable Implements IDamageable Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields autoDestroy Determines whether the object should be automatically destroyed upon reaching zero health. public bool autoDestroy Field Value bool Default implementation of IDamageable interface. Does not use damage types. destroyDelay Delay before automatically destroying the object when reaching zero health. public float destroyDelay Field Value float Default implementation of IDamageable interface. Does not use damage types. m_hp [SerializeField] protected float m_hp Field Value float Default implementation of IDamageable interface. Does not use damage types. maxHp Maximum amount of health points for the IDamageable object. public float maxHp Field Value float Default implementation of IDamageable interface. Does not use damage types. onDamage Event triggered when the object takes damage. [SerializeField] public UnityEvent<float> onDamage Field Value UnityEvent<float> Default implementation of IDamageable interface. Does not use damage types. Remarks This UnityEvent is parameterized with a float representing the amount of damage taken. Subscribers can listen to this event to respond to damage events. onDie Event triggered when the object dies. [SerializeField] public UnityEvent onDie Field Value UnityEvent Default implementation of IDamageable interface. Does not use damage types. Remarks This UnityEvent is parameterless and can be subscribed to by listeners to handle the death of the object. onHeal Event triggered when the object receives healing. [SerializeField] public UnityEvent<float> onHeal Field Value UnityEvent<float> Default implementation of IDamageable interface. Does not use damage types. Remarks This UnityEvent is parameterized with a float representing the amount of healing received. Subscribers can listen to this event to respond to healing events. onHealed Event triggered when the object is healed. [SerializeField] public UnityEvent onHealed Field Value UnityEvent Default implementation of IDamageable interface. Does not use damage types. Remarks This UnityEvent is parameterless and can be subscribed to by listeners to handle the healing of the object. Properties hp Current amount of health points for the IDamageable object. public float hp { get; } Property Value float Default implementation of IDamageable interface. Does not use damage types. Methods Damage(float, int) Apply certain amaount of damage to object public void Damage(float damage, int type = 0) Parameters damage float Default implementation of IDamageable interface. Does not use damage types. type int Damage type Heal(float) Restore some amount of heath of object public void Heal(float count) Parameters count float"
  },
  "ScriptReference/Animeska34.WeaponSystem.Explosion.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem.Explosion.html",
    "title": "Class Explosion | Animeska34 Docs",
    "keywords": "Class Explosion Namespace Animeska34.WeaponSystem Assembly Animeska34.WeaponSystem.dll Explosion physics [AddComponentMenu(\"Animeska34/Weapon System/Explosion\")] [RequireComponent(typeof(SphereCollider))] public class Explosion : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Explosion Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields autoDestroy Flag indicating whether the object should be automatically destroyed after it dies. [Header(\"Auto destroy\")] public bool autoDestroy Field Value bool Explosion physics Remarks When set to true, the object will be automatically destroyed after the death event occurs. Developers can use this flag to control whether the object should persist or be removed upon death. damage The base damage of the explosion. public float damage Field Value float Explosion physics Remarks This float variable represents the initial or base amount of damage caused by the explosion. Developers can adjust this value to set the baseline damage inflicted by the explosion. damageType The type of damage inflicted by the explosion. public int damageType Field Value int Explosion physics Remarks This integer variable represents the type of damage, such as elemental damage. Developers can use different values to denote various damage types, providing flexibility for categorizing damage. destroyAfter Time until the object is automatically destroyed after death. public float destroyAfter Field Value float Explosion physics Remarks This float variable represents the duration, in seconds, until the object is automatically destroyed after the death event. Developers can adjust this value to control the delay before the object removal. force The force of the explosion. [Header(\"Explosion\")] public float force Field Value float Explosion physics Remarks This float variable represents the strength or magnitude of the explosion. Developers can adjust this value to control the impact force of the explosion. m_collider protected SphereCollider m_collider Field Value SphereCollider Explosion physics scaleToForce Flag indicating whether to scale explosion damage to explosion force. [Header(\"Damage\")] public bool scaleToForce Field Value bool Explosion physics Remarks When set to true, the explosion damage will be scaled based on the force of the explosion. Developers can use this flag to control whether the damage should be proportional to the explosion force. scaledDamage Flag indicating whether to scale damage based on normalized distance from the explosion center to its radius. public bool scaledDamage Field Value bool Explosion physics Remarks When set to true, the damage will be scaled based on the normalized distance from the explosion center to its radius. Developers can use this flag to control whether the damage should vary depending on the distance from the explosion center. upwardsModifier The upwards modifier of the explosion. public float upwardsModifier Field Value float Explosion physics Remarks This float variable represents the additional upward force applied to the explosion. Developers can adjust this value to control the upward lift or movement caused by the explosion."
  },
  "ScriptReference/Animeska34.WeaponSystem.Firearm.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem.Firearm.html",
    "title": "Class Firearm | Animeska34 Docs",
    "keywords": "Class Firearm Namespace Animeska34.WeaponSystem Assembly Animeska34.WeaponSystem.dll Represents a basic firearm using physical raycast to hit targets. [AddComponentMenu(\"Animeska34/Weapon System/Firearm\")] public class Firearm : Weapon Inheritance object Object Component Behaviour MonoBehaviour Weapon Firearm Inherited Members Weapon.safeLock Weapon.GetSpread(float) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This class defines a simple firearm that utilizes a physical raycast mechanism to detect and hit targets. Developers can use this class as a foundation for implementing firearms in their Unity projects. Fields applyExplosionForce Flag indicating whether to apply explosion force on hit. [Header(\"Explosion\")] public bool applyExplosionForce Field Value bool Represents a basic firearm using physical raycast to hit targets. Remarks When set to true, the firearm will apply explosion force on hit, providing additional impact dynamics. Developers can use this flag to control whether an explosion force should be added upon hitting a target. damage The base damage of the firearm. [Header(\"Damage\")] public float damage Field Value float Represents a basic firearm using physical raycast to hit targets. Remarks This float variable represents the initial or base amount of damage inflicted by the firearm. Developers can adjust this value to set the baseline damage caused by the firearm. damageScale Scale applied to normalized distance before adding to base damage. public float damageScale Field Value float Represents a basic firearm using physical raycast to hit targets. Remarks This float variable represents the scale applied to the normalized distance before being added to the base damage. Developers can adjust this value to control how much the damage scales with distance when normalized distance scaling is enabled. damageType The type of damage inflicted by the firearm. public int damageType Field Value int Represents a basic firearm using physical raycast to hit targets. Remarks This integer variable represents the type of damage, such as elemental damage. Developers can use different values to denote various damage types, providing flexibility for categorizing damage. force The force of the explosion applied on hit. public float force Field Value float Represents a basic firearm using physical raycast to hit targets. Remarks This float variable represents the strength or magnitude of the explosion force applied when hitting a target. Developers can adjust this value to control the impact force of the explosion. mask The LayerMask defining the layers affected by raycasting. public LayerMask mask Field Value LayerMask Represents a basic firearm using physical raycast to hit targets. Remarks This LayerMask variable determines which layers are considered when performing raycasting. Developers can use this mask to specify the layers that the firearm's raycasts interact with. maxRange The maximum range of the firearm. public float maxRange Field Value float Represents a basic firearm using physical raycast to hit targets. Remarks This float variable represents the maximum distance at which the firearm can effectively hit targets. Developers can adjust this value to set the maximum range of the firearm. onFire Event triggered when the firearm is fired. [Header(\"Events\")] public UnityEvent onFire Field Value UnityEvent Represents a basic firearm using physical raycast to hit targets. Remarks This UnityEvent is parameterless and can be subscribed to by listeners to handle the firing event of the firearm. Developers can use this event to execute actions when the firearm is fired. onHit Event triggered when the ray hits a collider at a specific point. public UnityEvent<Collider, Vector3> onHit Field Value UnityEvent<Collider, Vector3> Represents a basic firearm using physical raycast to hit targets. Remarks This UnityEvent is parameterized with the Collider representing the hit collider and the Vector3 representing the hit point. Subscribers can listen to this event to perform actions when the ray from the firearm hits a collider at a specific point. onRay Event triggered when raycasting from transform to direction. public UnityEvent<Transform, Vector3> onRay Field Value UnityEvent<Transform, Vector3> Represents a basic firearm using physical raycast to hit targets. Remarks This UnityEvent is parameterized with the Transform representing the origin and the Vector3 representing the direction of the ray. Subscribers can listen to this event to perform actions when raycasting occurs from the specified transform to the given direction. origins Array of raycasting origins for the firearm. public Transform[] origins Field Value Transform[] Represents a basic firearm using physical raycast to hit targets. Remarks This Transform array represents the origins from which rays will be cast when the firearm is fired. Developers can specify multiple origins, making it useful for shotgun-style guns or firearms with spread. radius The radius of the explosion force applied on hit. public float radius Field Value float Represents a basic firearm using physical raycast to hit targets. Remarks This float variable represents the radius of the explosion force applied when hitting a target. Developers can adjust this value to control the area affected by the explosion force. reload Time between consecutive shots, representing the reload time. [Header(\"Reloading\")] public float reload Field Value float Represents a basic firearm using physical raycast to hit targets. Remarks This float variable represents the duration, in seconds, between each shot as the firearm reloads. Developers can adjust this value to control the reload time for the firearm. scaleForce Flag indicating whether to scale explosion force based on normalized distance from the firearm. public bool scaleForce Field Value bool Represents a basic firearm using physical raycast to hit targets. Remarks When set to true, the explosion force will be scaled based on the normalized distance from the firearm. Developers can use this flag to control whether the explosion force should vary depending on distance. scaledDamage Flag indicating whether to scale damage based on normalized distance. public bool scaledDamage Field Value bool Represents a basic firearm using physical raycast to hit targets. Remarks When set to false, damage will not be scaled based on normalized distance from the firearm. Developers can use this flag to control whether the damage should vary depending on distance. scaledForce Scale applied to normalized distance before adding to explosion force. public float scaledForce Field Value float Represents a basic firearm using physical raycast to hit targets. Remarks This float variable represents the scale applied to the normalized distance before being added to the explosion force. Developers can adjust this value to control how much the force scales with distance when normalized distance scaling is enabled. spread Random spread of raycasts from firearm origins' initial direction. public float spread Field Value float Represents a basic firearm using physical raycast to hit targets. Remarks This float variable represents the degree of random spread applied to the raycasts from the firearm's origins. Developers can adjust this value to control the spread of bullets, creating a more realistic and dynamic firing pattern. upwardsModifier Upwards modifier of the explosion force. public float upwardsModifier Field Value float Represents a basic firearm using physical raycast to hit targets. Remarks This float variable represents the additional upward force applied to the explosion. Developers can adjust this value to control the upward lift or movement caused by the explosion. Properties cooldown Property representing the remaining time until the next shot is loaded. public float cooldown { get; } Property Value float Represents a basic firearm using physical raycast to hit targets. Remarks This read-only float property provides the remaining cooldown time until the next shot can be fired. Developers can use this property to check the cooldown status of the firearm. reloading Property indicating whether the firearm is currently in the process of reloading. public bool reloading { get; } Property Value bool Represents a basic firearm using physical raycast to hit targets. Remarks This read-only boolean property returns true if the firearm is in the reloading state (cooldown is greater than 0), otherwise false. Developers can use this property to check if the firearm is actively reloading. Methods Fire() Abstract method for firing the weapon. [ContextMenu(\"Fire\")] public override void Fire() Remarks Derived classes must implement this method to define the firing behavior specific to each type of weapon. Update() protected void Update()"
  },
  "ScriptReference/Animeska34.WeaponSystem.IDamageable.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem.IDamageable.html",
    "title": "Interface IDamageable | Animeska34 Docs",
    "keywords": "Interface IDamageable Namespace Animeska34.WeaponSystem Assembly Animeska34.WeaponSystem.dll Interface to apply damage to object public interface IDamageable Methods Damage(float, int) Apply certain amaount of damage to object void Damage(float count, int type = 0) Parameters count float Count of damage type int Damage type Heal(float) Restore some amount of heath of object void Heal(float count) Parameters count float"
  },
  "ScriptReference/Animeska34.WeaponSystem.Meele.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem.Meele.html",
    "title": "Class Meele | Animeska34 Docs",
    "keywords": "Class Meele Namespace Animeska34.WeaponSystem Assembly Animeska34.WeaponSystem.dll Represents a simple melee weapon based on a trigger mechanism. [AddComponentMenu(\"Animeska34/Weapon System/Melee\")] public class Meele : Weapon Inheritance object Object Component Behaviour MonoBehaviour Weapon Meele Inherited Members Weapon.safeLock Weapon.GetSpread(float) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This class defines a basic melee weapon that operates based on a trigger input. Developers can use this class as a foundation for implementing melee weapons in their Unity projects. Fields damage The base damage of the melee weapon. public float damage Field Value float Represents a simple melee weapon based on a trigger mechanism. Remarks This float variable represents the initial or base amount of damage inflicted by the melee weapon. Developers can adjust this value to set the baseline damage caused by the melee weapon. damageType The type of damage inflicted by the melee weapon. public int damageType Field Value int Represents a simple melee weapon based on a trigger mechanism. Remarks This integer variable represents the type of damage, such as elemental damage. Developers can use different values to denote various damage types, providing flexibility for categorizing damage. onFire Event triggered when the melee weapon is used (fire event). public UnityEvent onFire Field Value UnityEvent Represents a simple melee weapon based on a trigger mechanism. Remarks This UnityEvent is parameterless and can be subscribed to by listeners to handle the event when the melee weapon is used. Developers can use this event to execute actions when the melee weapon is triggered or \"fired.\" onHit Event triggered when the melee weapon successfully hits an object implementing the IDamageable interface. public UnityEvent<IDamageable> onHit Field Value UnityEvent<IDamageable> Represents a simple melee weapon based on a trigger mechanism. Remarks This UnityEvent is parameterized with an IDamageable interface representing the object that was successfully hit. Subscribers can listen to this event to perform actions when the melee weapon hits an object implementing IDamageable. reload Time between consecutive attacks, representing the reload time for the melee weapon. public float reload Field Value float Represents a simple melee weapon based on a trigger mechanism. Remarks This float variable represents the duration, in seconds, between each attack as the melee weapon \"reloads\" for the next strike. Developers can adjust this value to control the time between successive attacks for the melee weapon. Properties cooldown Property representing the remaining time until the next attack is possible. public float cooldown { get; } Property Value float Represents a simple melee weapon based on a trigger mechanism. Remarks This read-only float property provides the remaining cooldown time until the next attack can be initiated. Developers can use this property to check the cooldown status of the melee weapon. reloading Property indicating whether the melee weapon is currently in the process of reloading. public bool reloading { get; } Property Value bool Represents a simple melee weapon based on a trigger mechanism. Remarks This boolean property returns true if the cooldown is less than or equal to zero, indicating that the melee weapon is ready for the next attack. Developers can use this property to check if the melee weapon is actively reloading or ready for another strike. Methods Fire() Abstract method for firing the weapon. public override void Fire() Remarks Derived classes must implement this method to define the firing behavior specific to each type of weapon. Update() protected void Update()"
  },
  "ScriptReference/Animeska34.WeaponSystem.PhysicalMelee.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem.PhysicalMelee.html",
    "title": "Class PhysicalMelee | Animeska34 Docs",
    "keywords": "Class PhysicalMelee Namespace Animeska34.WeaponSystem Assembly Animeska34.WeaponSystem.dll Represents a physically based melee weapon damaging objects colliding with it. [RequireComponent(typeof(Collider))] [AddComponentMenu(\"Animeska34/Weapon System/Physical Melee\")] public class PhysicalMelee : Weapon Inheritance object Object Component Behaviour MonoBehaviour Weapon PhysicalMelee Inherited Members Weapon.safeLock Weapon.GetSpread(float) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This class defines a melee weapon that utilizes physics to inflict damage on objects colliding with it. Developers can use this class as a foundation for implementing physically interactive melee weapons in their Unity projects. Fields damage The base damage of the melee weapon. public float damage Field Value float Represents a physically based melee weapon damaging objects colliding with it. Remarks This float variable represents the initial or base amount of damage inflicted by the melee weapon. Developers can adjust this value to set the baseline damage caused by the physically based melee weapon. damageScale Scale applied to impact force before adding to base damage. public float damageScale Field Value float Represents a physically based melee weapon damaging objects colliding with it. Remarks This float variable represents the scale applied to the impact force before being added to the base damage. Developers can adjust this value to control how much the damage scales with impact force when scaled damage is enabled. damageType The base damage of the melee weapon. public int damageType Field Value int Represents a physically based melee weapon damaging objects colliding with it. Remarks This float variable represents the initial or base amount of damage inflicted by the melee weapon. Developers can adjust this value to set the baseline damage caused by the physically based melee weapon. onDamage Event triggered when the physically based melee weapon inflicts damage during a collision. public UnityEvent<Collision, float, int> onDamage Field Value UnityEvent<Collision, float, int> Represents a physically based melee weapon damaging objects colliding with it. Remarks This UnityEvent is parameterized with a Collision object representing the collision data, a float for the inflicted damage, and an int for the damage type. Subscribers can listen to this event to perform actions when the weapon damages an object during a collision. onHit Event triggered when the physically based melee weapon collides with an object. public UnityEvent<Collision> onHit Field Value UnityEvent<Collision> Represents a physically based melee weapon damaging objects colliding with it. Remarks This UnityEvent is parameterized with a Collision object representing the collision data. Subscribers can listen to this event to perform actions when the melee weapon collides with an object. scaledDamage Flag indicating whether to scale damage based on impact during collisions. public bool scaledDamage Field Value bool Represents a physically based melee weapon damaging objects colliding with it. Remarks When set to true, the damage will be scaled based on the impact force during collisions. Developers can use this flag to control whether the damage should vary depending on the impact force. Methods Fire() Implements the Fire method for compatibility with the parent class. public override void Fire() Remarks This method is provided for compatibility with the parent class and does nothing. Developers can override this method in derived classes to implement specific firing behavior if needed."
  },
  "ScriptReference/Animeska34.WeaponSystem.Shell.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem.Shell.html",
    "title": "Class Shell | Animeska34 Docs",
    "keywords": "Class Shell Namespace Animeska34.WeaponSystem Assembly Animeska34.WeaponSystem.dll Represents a shell object that follows a ballistical trajectory, inflicting damage on hit and capable of ricocheting or exploding. [AddComponentMenu(\"Animeska34/Weapon System/Shell\")] [RequireComponent(typeof(Rigidbody))] public class Shell : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Shell Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This class defines a projectile (shell) that exhibits ballistic motion, causing damage upon impact and possessing additional behaviors such as ricocheting or exploding. Developers can use this class as a foundation for implementing shell-based projectiles in their Unity projects. Fields damage The base damage inflicted when the shell hits an object. public float damage Field Value float Represents a shell object that follows a ballistical trajectory, inflicting damage on hit and capable of ricocheting or exploding. Remarks This float variable represents the initial or base amount of damage inflicted by the shell upon hitting an object. Developers can adjust this value to set the baseline damage caused by the shell on impact. damageScale Scale applied to impact force before adding to base damage. public float damageScale Field Value float Represents a shell object that follows a ballistical trajectory, inflicting damage on hit and capable of ricocheting or exploding. Remarks This float variable represents the scale applied to the impact force before being added to the base damage. Developers can adjust this value to control how much the damage scales with impact force when scaled damage is enabled. damageType The type of damage inflicted by the shell. public int damageType Field Value int Represents a shell object that follows a ballistical trajectory, inflicting damage on hit and capable of ricocheting or exploding. Remarks This integer variable represents the type of damage, such as elemental damage. Developers can use different values to denote various damage types, providing flexibility for categorizing damage. explosionPrefab The Explosion prefab associated with the shell for explosive effects upon impact. public Explosion explosionPrefab Field Value Explosion Represents a shell object that follows a ballistical trajectory, inflicting damage on hit and capable of ricocheting or exploding. Remarks This variable represents the Explosion prefab that will be instantiated upon the shell's impact to create explosive effects. Developers can assign the appropriate Explosion prefab to be triggered when the shell hits an object. force The initial impulse force applied to launch the shell. public float force Field Value float Represents a shell object that follows a ballistical trajectory, inflicting damage on hit and capable of ricocheting or exploding. Remarks This float variable represents the force applied to the shell at the start, providing the initial impulse for its ballistic trajectory. Developers can adjust this value to control the strength of the impulse that launches the shell. forceMode The mode of the starting force applied to launch the shell. protected ForceMode forceMode Field Value ForceMode Represents a shell object that follows a ballistical trajectory, inflicting damage on hit and capable of ricocheting or exploding. Remarks This ForceMode variable represents the mode used for applying the initial force that launches the shell. Developers can adjust this value to use different force modes (e.g., Impulse, Acceleration) for the shell's starting force. lifetime The maximum lifetime of the shell. The shell will be destroyed after this specified time. public float lifetime Field Value float Represents a shell object that follows a ballistical trajectory, inflicting damage on hit and capable of ricocheting or exploding. Remarks This float variable represents the maximum duration, in seconds, that the shell is allowed to exist before being automatically destroyed. Developers can adjust this value to control the maximum lifetime of the shell. m_rigidbody protected Rigidbody m_rigidbody Field Value Rigidbody Represents a shell object that follows a ballistical trajectory, inflicting damage on hit and capable of ricocheting or exploding. onHit Event triggered when the shell collides with an object, providing collision data, damage, and damage type. public UnityEvent<Collision, float, int> onHit Field Value UnityEvent<Collision, float, int> Represents a shell object that follows a ballistical trajectory, inflicting damage on hit and capable of ricocheting or exploding. Remarks This UnityEvent is parameterized with a Collision object, a float for inflicted damage, and an int for the damage type. Subscribers can listen to this event to perform actions when the shell hits an object, providing collision details and damage information. onRicochet Event triggered when the shell initiates a ricochet, providing collision data, damage, and damage type. public UnityEvent<Collision, float, int> onRicochet Field Value UnityEvent<Collision, float, int> Represents a shell object that follows a ballistical trajectory, inflicting damage on hit and capable of ricocheting or exploding. Remarks This UnityEvent is parameterized with a Collision object, a float for inflicted damage, and an int for the damage type. Subscribers can listen to this event to perform actions when the shell initiates a ricochet, providing collision details and damage information. ricochet Flag indicating whether the shell is capable of ricocheting off surfaces. public bool ricochet Field Value bool Represents a shell object that follows a ballistical trajectory, inflicting damage on hit and capable of ricocheting or exploding. Remarks When set to true, the shell is designed to ricochet off surfaces upon collision. Developers can use this flag to control whether the shell exhibits ricochet behavior. ricochetTreshold The angle of impact at which the shell will be allowed to ricochet. public float ricochetTreshold Field Value float Represents a shell object that follows a ballistical trajectory, inflicting damage on hit and capable of ricocheting or exploding. Remarks This float variable represents the angle of impact at which the shell is permitted to initiate a ricochet. Developers can adjust this value to control the allowable angle for ricochet behavior. scaledDamage Flag indicating whether to scale damage based on impact force during collisions. public bool scaledDamage Field Value bool Represents a shell object that follows a ballistical trajectory, inflicting damage on hit and capable of ricocheting or exploding. Remarks When set to true, the damage will be scaled based on the impact force during collisions. Developers can use this flag to control whether the damage should vary depending on the impact force. Methods OnCollisionEnter(Collision) protected void OnCollisionEnter(Collision collision) Parameters collision Collision Represents a shell object that follows a ballistical trajectory, inflicting damage on hit and capable of ricocheting or exploding. Start() protected void Start()"
  },
  "ScriptReference/Animeska34.WeaponSystem.Weapon.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem.Weapon.html",
    "title": "Class Weapon | Animeska34 Docs",
    "keywords": "Class Weapon Namespace Animeska34.WeaponSystem Assembly Animeska34.WeaponSystem.dll Abstract class representing a generic weapon in the game. public abstract class Weapon : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Weapon Derived Beam Cannon Firearm Meele PhysicalMelee Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Remarks This class is designed to serve as a base class for various types of weapons in the game. Developers can derive specific weapon classes from this base class to implement custom functionality for different types of weapons. Fields safeLock Flag indicating whether the weapon is in a safe-locked state. public bool safeLock Field Value bool Abstract class representing a generic weapon in the game. Remarks When set to true, the weapon is in a safe-locked state, meaning it cannot be fired or used. Developers can use this flag to implement safety features for the weapon. Methods Fire() Abstract method for firing the weapon. public abstract void Fire() Remarks Derived classes must implement this method to define the firing behavior specific to each type of weapon. GetSpread(float) Calculates the spread vector based on the specified maximum spread in degrees. public Vector3 GetSpread(float maxSpread) Parameters maxSpread float The maximum spread in degrees. Returns Vector3 A Vector3 representing the spread in degrees around the Euler x and y axes. Remarks This method is used to calculate the spread vector for weapons based on the specified maximum spread angle. Developers can use the returned Vector3 to introduce randomization in the firing direction within the specified spread range."
  },
  "ScriptReference/Animeska34.WeaponSystem.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem.html",
    "title": "Namespace Animeska34.WeaponSystem | Animeska34 Docs",
    "keywords": "Namespace Animeska34.WeaponSystem Classes Beam Represents a beam weapon in the game. Cannon Cannon class responsible for instantiating physical shells during the Fire operation. Damageable Default implementation of IDamageable interface. Does not use damage types. Explosion Explosion physics Firearm Represents a basic firearm using physical raycast to hit targets. Meele Represents a simple melee weapon based on a trigger mechanism. PhysicalMelee Represents a physically based melee weapon damaging objects colliding with it. Shell Represents a shell object that follows a ballistical trajectory, inflicting damage on hit and capable of ricocheting or exploding. Weapon Abstract class representing a generic weapon in the game. Interfaces IDamageable Interface to apply damage to object"
  },
  "ScriptReference/Animeska34.WeaponSystem2D.Beam2D.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem2D.Beam2D.html",
    "title": "Class Beam2D | Animeska34 Docs",
    "keywords": "Class Beam2D Namespace Animeska34.WeaponSystem2D Assembly Animeska34.WeaponSystem2D.dll Beam weapon class extending Weapon2D, utilizing LineRenderer to visualize shots. Supports reflections from surfaces. [RequireComponent(typeof(LineRenderer))] [AddComponentMenu(\"Animeska34/Weapon System 2D/Beam 2D\")] public class Beam2D : Weapon2D Inheritance object Object Component Behaviour MonoBehaviour Weapon2D Beam2D Inherited Members Weapon2D.safeLock Weapon2D.GetSpread(float) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields beamOffset The offset from the collision point where the beam reflection should occur. public float beamOffset Field Value float Beam weapon class extending Weapon2D, utilizing LineRenderer to visualize shots. Supports reflections from surfaces. Remarks This float variable represents the offset from the collision point where the beam reflection point is adjusted. Developers can adjust this value to control the offset distance for the beam reflection point. damageType Type of damage applied by the beam, e.g., elemental. public int damageType Field Value int Beam weapon class extending Weapon2D, utilizing LineRenderer to visualize shots. Supports reflections from surfaces. dps Damage per second applied to IDamageable2D objects by the beam. public float dps Field Value float Beam weapon class extending Weapon2D, utilizing LineRenderer to visualize shots. Supports reflections from surfaces. dpsScale Multiply factor applied to the scaled DPS. public float dpsScale Field Value float Beam weapon class extending Weapon2D, utilizing LineRenderer to visualize shots. Supports reflections from surfaces. line protected LineRenderer line Field Value LineRenderer Beam weapon class extending Weapon2D, utilizing LineRenderer to visualize shots. Supports reflections from surfaces. mask Layers of objects that interact with the beam. public LayerMask mask Field Value LayerMask Beam weapon class extending Weapon2D, utilizing LineRenderer to visualize shots. Supports reflections from surfaces. maxLength Maximum length of the beam. public float maxLength Field Value float Beam weapon class extending Weapon2D, utilizing LineRenderer to visualize shots. Supports reflections from surfaces. maxReflections The maximum number of reflections allowed for the beam. public ushort maxReflections Field Value ushort Beam weapon class extending Weapon2D, utilizing LineRenderer to visualize shots. Supports reflections from surfaces. Remarks This ushort variable represents the maximum number of times the beam can reflect off surfaces. Developers can adjust this value to control the maximum number of reflections for the beam. origin Origin point of the beam. public Transform origin Field Value Transform Beam weapon class extending Weapon2D, utilizing LineRenderer to visualize shots. Supports reflections from surfaces. reflectFromDamageable Determines whether the beam reflects from surfaces with the IDamageable2D component. public bool reflectFromDamageable Field Value bool Beam weapon class extending Weapon2D, utilizing LineRenderer to visualize shots. Supports reflections from surfaces. reflectFromReflectiveOnly Determines whether the beam reflects from all surfaces or only user-specified reflective surfaces. public bool reflectFromReflectiveOnly Field Value bool Beam weapon class extending Weapon2D, utilizing LineRenderer to visualize shots. Supports reflections from surfaces. reflectiveTag Tag of surfaces that will be reflective. The beam will only reflect from surfaces with this tag if reflectFromReflectiveOnly is true. public string reflectiveTag Field Value string Beam weapon class extending Weapon2D, utilizing LineRenderer to visualize shots. Supports reflections from surfaces. scaledDps Determines whether to scale the DPS based on the normalized length of the beam. public bool scaledDps Field Value bool Beam weapon class extending Weapon2D, utilizing LineRenderer to visualize shots. Supports reflections from surfaces. switchMode Determines whether to use the Fire() method to switch the beam state. If false, Fire() needs to be called each frame to keep the beam shooting. public bool switchMode Field Value bool Beam weapon class extending Weapon2D, utilizing LineRenderer to visualize shots. Supports reflections from surfaces. Properties firing Gets the current state of the weapon. True if the weapon is currently firing; otherwise, false. public bool firing { get; } Property Value bool Beam weapon class extending Weapon2D, utilizing LineRenderer to visualize shots. Supports reflections from surfaces. Methods Fire() Enables Beam2D. If switchMode is off, the beam will fire for 1 frame; otherwise, it will continue firing until the next Fire() invocation. [ContextMenu(\"Fire\")] public override void Fire() Start() protected void Start() Update() protected void Update()"
  },
  "ScriptReference/Animeska34.WeaponSystem2D.Cannon2D.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem2D.Cannon2D.html",
    "title": "Class Cannon2D | Animeska34 Docs",
    "keywords": "Class Cannon2D Namespace Animeska34.WeaponSystem2D Assembly Animeska34.WeaponSystem2D.dll Represents a 2D cannon weapon that inherits from the Weapon2D class. This class is responsible for instantiating Shell2D objects upon firing. [AddComponentMenu(\"Animeska34/Weapon System 2D/Cannon 2D\")] public class Cannon2D : Weapon2D Inheritance object Object Component Behaviour MonoBehaviour Weapon2D Cannon2D Inherited Members Weapon2D.safeLock Weapon2D.GetSpread(float) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields delay Delay, in seconds, between instantiating shells for consecutive origins. Applicable only for weapons with multiple origins, such as multiple barrel guns (e.g., naval guns). public float delay Field Value float Represents a 2D cannon weapon that inherits from the Weapon2D class. This class is responsible for instantiating Shell2D objects upon firing. maxRandomDelay Maximum possible time for random delay between instantiating shells for consecutive origins. Applicable only for weapons with multiple origins, such as multiple barrel guns (e.g., naval guns). public float maxRandomDelay Field Value float Represents a 2D cannon weapon that inherits from the Weapon2D class. This class is responsible for instantiating Shell2D objects upon firing. onFire UnityEvent that is triggered when the cannon is firing. The event includes the current origin from which the shell is being fired. public UnityEvent<Transform> onFire Field Value UnityEvent<Transform> Represents a 2D cannon weapon that inherits from the Weapon2D class. This class is responsible for instantiating Shell2D objects upon firing. origins Array to store all locations where Shell2D objects will be instantiated. public Transform[] origins Field Value Transform[] Represents a 2D cannon weapon that inherits from the Weapon2D class. This class is responsible for instantiating Shell2D objects upon firing. randomDelay Determines whether to add a random delay to the delay between instantiating shells for consecutive origins. Applicable only for weapons with multiple origins, such as multiple barrel guns (e.g., naval guns). public bool randomDelay Field Value bool Represents a 2D cannon weapon that inherits from the Weapon2D class. This class is responsible for instantiating Shell2D objects upon firing. reload Time interval between consecutive attacks. public float reload Field Value float Represents a 2D cannon weapon that inherits from the Weapon2D class. This class is responsible for instantiating Shell2D objects upon firing. shell Prefab of the Shell2D object that will be instantiated when firing. public Shell2D shell Field Value Shell2D Represents a 2D cannon weapon that inherits from the Weapon2D class. This class is responsible for instantiating Shell2D objects upon firing. spread Spread of shells in degrees at the moment of shell instantiation. public float spread Field Value float Represents a 2D cannon weapon that inherits from the Weapon2D class. This class is responsible for instantiating Shell2D objects upon firing. Properties cooldown Time, in seconds, remaining until the next attack cooldown. public float cooldown { get; } Property Value float Represents a 2D cannon weapon that inherits from the Weapon2D class. This class is responsible for instantiating Shell2D objects upon firing. reloading Returns true if the weapon is currently loading the next shell; otherwise, false. public bool reloading { get; } Property Value bool Represents a 2D cannon weapon that inherits from the Weapon2D class. This class is responsible for instantiating Shell2D objects upon firing. Methods Fire() Shoots the Cannon2D. [ContextMenu(\"Fire\")] public override void Fire() FireCoroutine() protected IEnumerator FireCoroutine() Returns IEnumerator Represents a 2D cannon weapon that inherits from the Weapon2D class. This class is responsible for instantiating Shell2D objects upon firing. Update() protected void Update()"
  },
  "ScriptReference/Animeska34.WeaponSystem2D.Damageable2D.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem2D.Damageable2D.html",
    "title": "Class Damageable2D | Animeska34 Docs",
    "keywords": "Class Damageable2D Namespace Animeska34.WeaponSystem2D Assembly Animeska34.WeaponSystem2D.dll Default implementation of IDamageable2D that does not use damage types. [AddComponentMenu(\"Animeska34/Weapon System 2D/Damageable 2D\")] [RequireComponent(typeof(Collider2D))] public class Damageable2D : MonoBehaviour, IDamageable2D Inheritance object Object Component Behaviour MonoBehaviour Damageable2D Implements IDamageable2D Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields autoDestroy Determines whether the object should be automatically destroyed upon reaching zero health. public bool autoDestroy Field Value bool Default implementation of IDamageable2D that does not use damage types. destroyAfter Delay after death before the object is automatically destroyed. public float destroyAfter Field Value float Default implementation of IDamageable2D that does not use damage types. m_hp [SerializeField] protected float m_hp Field Value float Default implementation of IDamageable2D that does not use damage types. maxHp Maximum health points of the damageable object. [SerializeField] public float maxHp Field Value float Default implementation of IDamageable2D that does not use damage types. onDamage UnityEvent triggered when the object receives damage. Parameters: float - amount of damage, int - type of damage. public UnityEvent<float, int> onDamage Field Value UnityEvent<float, int> Default implementation of IDamageable2D that does not use damage types. onDie UnityEvent triggered when the object is in the process of dying. public UnityEvent onDie Field Value UnityEvent Default implementation of IDamageable2D that does not use damage types. onRestore UnityEvent triggered when the object is healed. Parameters: float - amount of healing, int - type of healing. public UnityEvent<float, int> onRestore Field Value UnityEvent<float, int> Default implementation of IDamageable2D that does not use damage types. onRestored UnityEvent triggered when the object is completely healed. public UnityEvent onRestored Field Value UnityEvent Default implementation of IDamageable2D that does not use damage types. Properties hp Current amount of health points. public float hp { get; } Property Value float Default implementation of IDamageable2D that does not use damage types. Methods Damage(float, int) Default implementation of damage. Does not use damage types. public void Damage(float damage, int type) Parameters damage float Amount of damage to apply. type int Type of damage (not used). Heal(float, int) Default implementation of healing. Does not use healing types. public void Heal(float health, int type) Parameters health float Amount of health to restore. type int Type of healing (not used)."
  },
  "ScriptReference/Animeska34.WeaponSystem2D.Explosion2D.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem2D.Explosion2D.html",
    "title": "Class Explosion2D | Animeska34 Docs",
    "keywords": "Class Explosion2D Namespace Animeska34.WeaponSystem2D Assembly Animeska34.WeaponSystem2D.dll Explosion using 2D physics implementation. [RequireComponent(typeof(CircleCollider2D))] [AddComponentMenu(\"Animeska34/Weapon System 2D/Explosion 2D\")] public class Explosion2D : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Explosion2D Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields autoDestroy Determines whether to automatically destroy the explosion's GameObject after a certain time. public bool autoDestroy Field Value bool Explosion using 2D physics implementation. damage Base damage of the explosion. public float damage Field Value float Explosion using 2D physics implementation. damageScale Scale factor applied to the normalized distance before adding to damage. public float damageScale Field Value float Explosion using 2D physics implementation. damageType Type of damage applied by the explosion. public int damageType Field Value int Explosion using 2D physics implementation. destroyAfter Time after which the explosion's GameObject will be automatically destroyed. public float destroyAfter Field Value float Explosion using 2D physics implementation. force Force of the explosion. public float force Field Value float Explosion using 2D physics implementation. m_collider protected CircleCollider2D m_collider Field Value CircleCollider2D Explosion using 2D physics implementation. scaleToForce Determines whether to scale the damage based on the force of the explosion. public bool scaleToForce Field Value bool Explosion using 2D physics implementation. scaledDamage Determines whether to scale the damage based on the normalized distance to the explosion epicenter. public bool scaledDamage Field Value bool Explosion using 2D physics implementation."
  },
  "ScriptReference/Animeska34.WeaponSystem2D.Firearm2D.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem2D.Firearm2D.html",
    "title": "Class Firearm2D | Animeska34 Docs",
    "keywords": "Class Firearm2D Namespace Animeska34.WeaponSystem2D Assembly Animeska34.WeaponSystem2D.dll Basic Weapon2D class using 2D physical raycast to damage targets. [AddComponentMenu(\"Animeska34/Weapon System 2D/Firearm 2D\")] public class Firearm2D : Weapon2D Inheritance object Object Component Behaviour MonoBehaviour Weapon2D Firearm2D Inherited Members Weapon2D.safeLock Weapon2D.GetSpread(float) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields applyExplosionForce Determines whether to apply explosion force to the object that was hit. public bool applyExplosionForce Field Value bool Basic Weapon2D class using 2D physical raycast to damage targets. damage Base damage of the Firearm2D. public float damage Field Value float Basic Weapon2D class using 2D physical raycast to damage targets. damageScale Scale factor applied to the normalized distance for damage calculation. public float damageScale Field Value float Basic Weapon2D class using 2D physical raycast to damage targets. damageType Type of damage dealt by this Firearm2D, e.g., elemental as in Genshin Impact. public int damageType Field Value int Basic Weapon2D class using 2D physical raycast to damage targets. force Force of the explosion applied to the object that was hit. public float force Field Value float Basic Weapon2D class using 2D physical raycast to damage targets. mask Layers that are raycastable by this Firearm2D. public LayerMask mask Field Value LayerMask Basic Weapon2D class using 2D physical raycast to damage targets. maxRange Maximum length of each ray. public float maxRange Field Value float Basic Weapon2D class using 2D physical raycast to damage targets. onFire UnityEvent triggered when the Firearm2D fires. public UnityEvent onFire Field Value UnityEvent Basic Weapon2D class using 2D physical raycast to damage targets. onHit UnityEvent triggered when the ray hits an object. Parameter: RaycastHit2D - information about the hit. public UnityEvent<RaycastHit2D> onHit Field Value UnityEvent<RaycastHit2D> Basic Weapon2D class using 2D physical raycast to damage targets. onRay UnityEvent triggered when raycasting from the origin to a certain direction. Parameters: Transform - origin, Vector3 - direction. public UnityEvent<Transform, Vector3> onRay Field Value UnityEvent<Transform, Vector3> Basic Weapon2D class using 2D physical raycast to damage targets. origins Array to store the origins of raycasts for weapons like shotguns. public Transform[] origins Field Value Transform[] Basic Weapon2D class using 2D physical raycast to damage targets. reload Timeout between shots for the Firearm2D. public float reload Field Value float Basic Weapon2D class using 2D physical raycast to damage targets. scaleForce public bool scaleForce Field Value bool Basic Weapon2D class using 2D physical raycast to damage targets. scaledDamage Determines whether to add damage scaled to the normalized length of the ray. public bool scaledDamage Field Value bool Basic Weapon2D class using 2D physical raycast to damage targets. scaledForce Scale factor applied to the normalized distance before scaling the explosion force. public float scaledForce Field Value float Basic Weapon2D class using 2D physical raycast to damage targets. spread Maximum random spread of rays applied to ray's origin. public float spread Field Value float Basic Weapon2D class using 2D physical raycast to damage targets. Properties cooldown Time remaining until the reload is complete. public float cooldown { get; } Property Value float Basic Weapon2D class using 2D physical raycast to damage targets. reloading Returns true if the weapon is currently reloading; otherwise, false. public bool reloading { get; } Property Value bool Basic Weapon2D class using 2D physical raycast to damage targets. Methods Fire() Shoots a Firearm2D by raycasting from the specified origins. [ContextMenu(\"Fire\")] public override void Fire() Update() protected void Update()"
  },
  "ScriptReference/Animeska34.WeaponSystem2D.IDamageable2D.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem2D.IDamageable2D.html",
    "title": "Interface IDamageable2D | Animeska34 Docs",
    "keywords": "Interface IDamageable2D Namespace Animeska34.WeaponSystem2D Assembly Animeska34.WeaponSystem2D.dll Interface for objects that can be damaged by the default Weapon2D implementation. public interface IDamageable2D Methods Damage(float, int) Apply damage to the object. void Damage(float damage, int type) Parameters damage float Amount of damage to apply. type int Type of damage applied. Heal(float, int) Restore some amount of health to the object. void Heal(float health, int type) Parameters health float Amount of health to restore. type int Type of restoration applied."
  },
  "ScriptReference/Animeska34.WeaponSystem2D.Melee2D.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem2D.Melee2D.html",
    "title": "Class Melee2D | Animeska34 Docs",
    "keywords": "Class Melee2D Namespace Animeska34.WeaponSystem2D Assembly Animeska34.WeaponSystem2D.dll Melee weapon implementation of Weapon2D. Damages all objects affected by trigger by invoking the Fire() method. [RequireComponent(typeof(Collider2D))] [AddComponentMenu(\"Animeska34/Weapon System 2D/Melee 2D\")] public class Melee2D : Weapon2D Inheritance object Object Component Behaviour MonoBehaviour Weapon2D Melee2D Inherited Members Weapon2D.safeLock Weapon2D.GetSpread(float) MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields damage Base damage of the melee weapon. public float damage Field Value float Melee weapon implementation of Weapon2D. Damages all objects affected by trigger by invoking the Fire() method. damageType Type of damage dealt by the melee weapon. public int damageType Field Value int Melee weapon implementation of Weapon2D. Damages all objects affected by trigger by invoking the Fire() method. onFire UnityEvent triggered when the melee attack is completed. public UnityEvent onFire Field Value UnityEvent Melee weapon implementation of Weapon2D. Damages all objects affected by trigger by invoking the Fire() method. onHit Invokes when hits damageable object public UnityEvent<IDamageable2D> onHit Field Value UnityEvent<IDamageable2D> Melee weapon implementation of Weapon2D. Damages all objects affected by trigger by invoking the Fire() method. reload Time interval between consecutive melee attacks. public float reload Field Value float Melee weapon implementation of Weapon2D. Damages all objects affected by trigger by invoking the Fire() method. Properties cooldown Time remaining until the next melee attack becomes possible. public float cooldown { get; } Property Value float Melee weapon implementation of Weapon2D. Damages all objects affected by trigger by invoking the Fire() method. reloading Returns true if the melee attack is currently in cooldown; otherwise, false. public bool reloading { get; } Property Value bool Melee weapon implementation of Weapon2D. Damages all objects affected by trigger by invoking the Fire() method. Methods Fire() Performs a melee attack. public override void Fire() Update() protected void Update()"
  },
  "ScriptReference/Animeska34.WeaponSystem2D.Shell2D.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem2D.Shell2D.html",
    "title": "Class Shell2D | Animeska34 Docs",
    "keywords": "Class Shell2D Namespace Animeska34.WeaponSystem2D Assembly Animeska34.WeaponSystem2D.dll Shell of Cannon2D that follows a ballistical trajectory, supports ricocheting. Can instantiate Explosion2D on hit and causes damage to IDamageable2D objects. [RequireComponent(typeof(Rigidbody2D))] [AddComponentMenu(\"Animeska34/Weapon System 2D/Shell 2D\")] public class Shell2D : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Shell2D Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields damage Base damage applied to IDamageable2D objects on hit. public float damage Field Value float Shell of Cannon2D that follows a ballistical trajectory, supports ricocheting. Can instantiate Explosion2D on hit and causes damage to IDamageable2D objects. damageScale Scale factor applied to the shell's velocity for damage calculation. public float damageScale Field Value float Shell of Cannon2D that follows a ballistical trajectory, supports ricocheting. Can instantiate Explosion2D on hit and causes damage to IDamageable2D objects. damageType Type of damage, such as elemental or other categorization. public int damageType Field Value int Shell of Cannon2D that follows a ballistical trajectory, supports ricocheting. Can instantiate Explosion2D on hit and causes damage to IDamageable2D objects. explosionPrefab Prefab of the Explosion2D object that is instantiated on shell hit. public Explosion2D explosionPrefab Field Value Explosion2D Shell of Cannon2D that follows a ballistical trajectory, supports ricocheting. Can instantiate Explosion2D on hit and causes damage to IDamageable2D objects. force Force of the impulse that launches the shell on start. public float force Field Value float Shell of Cannon2D that follows a ballistical trajectory, supports ricocheting. Can instantiate Explosion2D on hit and causes damage to IDamageable2D objects. forceMode Mode of force that launches the shell on start. public ForceMode2D forceMode Field Value ForceMode2D Shell of Cannon2D that follows a ballistical trajectory, supports ricocheting. Can instantiate Explosion2D on hit and causes damage to IDamageable2D objects. lifetime Maximum lifetime of the shell. The shell will be destroyed after this time if it does not hit anything. public float lifetime Field Value float Shell of Cannon2D that follows a ballistical trajectory, supports ricocheting. Can instantiate Explosion2D on hit and causes damage to IDamageable2D objects. m_rigidbody protected Rigidbody2D m_rigidbody Field Value Rigidbody2D Shell of Cannon2D that follows a ballistical trajectory, supports ricocheting. Can instantiate Explosion2D on hit and causes damage to IDamageable2D objects. onHit UnityEvent triggered when the shell hits something. Parameters: Collision2D - the object that was hit, float - damage applied to the object (including all modifiers), int - damage type. public UnityEvent<Collision2D, float, int> onHit Field Value UnityEvent<Collision2D, float, int> Shell of Cannon2D that follows a ballistical trajectory, supports ricocheting. Can instantiate Explosion2D on hit and causes damage to IDamageable2D objects. onRicochet UnityEvent triggered when the shell is likely to ricochet. Parameters: Collision2D - the object that the shell is likely to ricochet off, float - damage applied to the object (including all modifiers), int - damage type. public UnityEvent<Collision2D, float, int> onRicochet Field Value UnityEvent<Collision2D, float, int> Shell of Cannon2D that follows a ballistical trajectory, supports ricocheting. Can instantiate Explosion2D on hit and causes damage to IDamageable2D objects. ricochet Determines whether to use ricochet mechanics for the shell. public bool ricochet Field Value bool Shell of Cannon2D that follows a ballistical trajectory, supports ricocheting. Can instantiate Explosion2D on hit and causes damage to IDamageable2D objects. ricochetTreshold Angle threshold at which the shell will be considered likely to ricochet. public float ricochetTreshold Field Value float Shell of Cannon2D that follows a ballistical trajectory, supports ricocheting. Can instantiate Explosion2D on hit and causes damage to IDamageable2D objects. scaledDamage Determines whether to add scaled damage based on the velocity of the shell on hit. public bool scaledDamage Field Value bool Shell of Cannon2D that follows a ballistical trajectory, supports ricocheting. Can instantiate Explosion2D on hit and causes damage to IDamageable2D objects. Methods OnCollisionEnter2D(Collision2D) protected void OnCollisionEnter2D(Collision2D collision) Parameters collision Collision2D Shell of Cannon2D that follows a ballistical trajectory, supports ricocheting. Can instantiate Explosion2D on hit and causes damage to IDamageable2D objects. Start() protected void Start()"
  },
  "ScriptReference/Animeska34.WeaponSystem2D.Weapon2D.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem2D.Weapon2D.html",
    "title": "Class Weapon2D | Animeska34 Docs",
    "keywords": "Class Weapon2D Namespace Animeska34.WeaponSystem2D Assembly Animeska34.WeaponSystem2D.dll The 'Weapon2D' is an abstract base class for all weapons using 2D physics. It inherits from the 'MonoBehaviour' class which is the base class every script derives from. public abstract class Weapon2D : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Weapon2D Derived Beam2D Cannon2D Firearm2D Melee2D Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields safeLock The 'safeLock' is a boolean variable that restricts the weapon from firing. When 'safeLock' is true, the weapon is prevented from firing. public bool safeLock Field Value bool The 'Weapon2D' is an abstract base class for all weapons using 2D physics. It inherits from the 'MonoBehaviour' class which is the base class every script derives from. Methods Fire() Public abstract method representing the action of firing a weapon. Derived classes must provide their own implementation based on the specific weapon type. public abstract void Fire() GetSpread(float) Public method to calculate a randomized spread for a given angle within a specified range. public Vector3 GetSpread(float maxSpread) Parameters maxSpread float The maximum spread angle in degrees to be applied. Returns Vector3 A Vector3 representing the randomized spread in the form of Euler angles."
  },
  "ScriptReference/Animeska34.WeaponSystem2D.html": {
    "href": "ScriptReference/Animeska34.WeaponSystem2D.html",
    "title": "Namespace Animeska34.WeaponSystem2D | Animeska34 Docs",
    "keywords": "Namespace Animeska34.WeaponSystem2D Classes Beam2D Beam weapon class extending Weapon2D, utilizing LineRenderer to visualize shots. Supports reflections from surfaces. Cannon2D Represents a 2D cannon weapon that inherits from the Weapon2D class. This class is responsible for instantiating Shell2D objects upon firing. Damageable2D Default implementation of IDamageable2D that does not use damage types. Explosion2D Explosion using 2D physics implementation. Firearm2D Basic Weapon2D class using 2D physical raycast to damage targets. Melee2D Melee weapon implementation of Weapon2D. Damages all objects affected by trigger by invoking the Fire() method. Shell2D Shell of Cannon2D that follows a ballistical trajectory, supports ricocheting. Can instantiate Explosion2D on hit and causes damage to IDamageable2D objects. Weapon2D The 'Weapon2D' is an abstract base class for all weapons using 2D physics. It inherits from the 'MonoBehaviour' class which is the base class every script derives from. Interfaces IDamageable2D Interface for objects that can be damaged by the default Weapon2D implementation."
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Animeska34 Docs",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  },
  "src/Animeska34.AnimeTools/Assets/CHANGELOG.html": {
    "href": "src/Animeska34.AnimeTools/Assets/CHANGELOG.html",
    "title": "AnimeTools Changelog | Animeska34 Docs",
    "keywords": "AnimeTools Changelog 0 0.1 Add Actions Action AnimatedText 0.2 Add TimedActions TimedAction IAction IActions 0.3 Rename Actions -> AnimeActions Action -> AnimeAction TimedActions -> AnimeTimedActions TimedAction -> AnimeTimedAction IAction -> IAnimeAction IActions -> IAnimeActions AnimatedText -> AnimeText Add enabled, executeOnce and Reset() to AnimeAction 0.3.1 Add Assembly Defenition Asset 0.3.2 Fix AnimeTimedActions references 0.3.3 Defenetly fix AnimeTimedActions 0.4 Add AutoDestroy 0.4.1 Update path in component menu 0.4.2 Fix component menu path 0.5.0 Add CameraSystem 0.5.1 Remove unused usings"
  },
  "src/Animeska34.AnimeTools/Assets/Documentation~/AnimeActions.html": {
    "href": "src/Animeska34.AnimeTools/Assets/Documentation~/AnimeActions.html",
    "title": "AnimeActions | Animeska34 Docs",
    "keywords": "AnimeActions Description Actions provides event manager that can execute events by name. Can be foundin ComponentMenu/Anime Tools/Actions Usage You can create assign this component to gameObject with animator, then create events in Actions component bu pressing add button, name it. Then you can execute this events from animator attached to same gameObject, simply calling Actions.Execute(event name) from animation events. Location Can be foundin ComponentMenu/Anime Tools/Actions"
  },
  "src/Animeska34.AnimeTools/Assets/Documentation~/AnimeText.html": {
    "href": "src/Animeska34.AnimeTools/Assets/Documentation~/AnimeText.html",
    "title": "Anime Text | Animeska34 Docs",
    "keywords": "Anime Text Description Smoothly prints text from AnimeText.text Usage You can assign this component to gameObject with TMP_Text, write your text in text field of this component and set speed in interval in seconds between character prining. Location Can be foundin ComponentMenu/Anime Tools/Animated Text"
  },
  "src/Animeska34.AnimeTools/Assets/Documentation~/AnimeTimedActions.html": {
    "href": "src/Animeska34.AnimeTools/Assets/Documentation~/AnimeTimedActions.html",
    "title": "Anime Timed Actions | Animeska34 Docs",
    "keywords": "Anime Timed Actions Description Can execute events periodically Usage Assign Timed Actions component and add events to it which will be executed after given time and can continue execute every given time Location Can be foundin ComponentMenu/Anime Tools/Timed Actions"
  },
  "src/Animeska34.AnimeTools/Assets/Documentation~/AutoDestoy.html": {
    "href": "src/Animeska34.AnimeTools/Assets/Documentation~/AutoDestoy.html",
    "title": "Anime Text | Animeska34 Docs",
    "keywords": "Anime Text Description Destroys gameObject after fixed time Usage You can assign this component to gameObject and set delay Location Can be foundin ComponentMenu/Anime Tools/Auto Destroy"
  },
  "src/Animeska34.AnimeTools/Assets/Readme.html": {
    "href": "src/Animeska34.AnimeTools/Assets/Readme.html",
    "title": "AnimeTools | Animeska34 Docs",
    "keywords": "AnimeTools Description Various tool for easing animation creation in Unity."
  },
  "src/Animeska34.DebugTools/Assets/CHANGELOG.html": {
    "href": "src/Animeska34.DebugTools/Assets/CHANGELOG.html",
    "title": "DebugTools Changelog | Animeska34 Docs",
    "keywords": "DebugTools Changelog 0 0.1 Add DebugConsole 0.1.1 Add Readme.md 0.1.2 Add Assembly Definitions 0.2 Add DebugRayDrawer 0.3 Add untilHit option to DebugRayDrawer 0.4 Update DebugConsole, add DebugConsoleHost 0.4.1 Update path in component menu 0.4.2 Fix Component menu paths Fix DebugConsoleHost and DebugConsole 0.4.3 Update dependences 0.5 Add console command support. 0.6 Improve console command support Add default console command Update font to noto sans from com.animeska34.shared@0.4 to unicode support 0.7 Add new console commands Improve old console command Add ready to use console prefab 0.7.1 Remove incorrect refs 0.8 Add \"Submit\" button for touchscreen devices"
  },
  "src/Animeska34.DebugTools/Assets/Documentation~/DebugConsole.html": {
    "href": "src/Animeska34.DebugTools/Assets/Documentation~/DebugConsole.html",
    "title": "DebugConsole | Animeska34 Docs",
    "keywords": "DebugConsole Description Forwards Unity Debug Messages to Unity.UI.Text renderer. Usage You can create assign this component to gameObject with text renderer. Location Can be foundin ComponentMenu/Debug Tools/DebugConsole"
  },
  "src/Animeska34.DebugTools/Assets/Documentation~/DebugRayDrawer.html": {
    "href": "src/Animeska34.DebugTools/Assets/Documentation~/DebugRayDrawer.html",
    "title": "DebugRayDrawer | Animeska34 Docs",
    "keywords": "DebugRayDrawer Description Draws ray in yhe editor Location Can be foundin ComponentMenu/Debug Tools/Debug Ray Drawer"
  },
  "src/Animeska34.DebugTools/Assets/Readme.html": {
    "href": "src/Animeska34.DebugTools/Assets/Readme.html",
    "title": "DebugTools 0.1.1 | Animeska34 Docs",
    "keywords": "DebugTools 0.1.1 Description Various tools for debugging Usage Add components through ComponentMenu/Debug Tools. Add elements from GameObjectMenu/DebugTools."
  },
  "src/Animeska34.Essentials/Assets/CHANGELOG.html": {
    "href": "src/Animeska34.Essentials/Assets/CHANGELOG.html",
    "title": "Shared Changelog | Animeska34 Docs",
    "keywords": "Shared Changelog 0 0.1.0 Add Editor.Prefabs 0.2.0 Completely rework Editor.Prefabs 0.2.1 Fix missing meta file error for Changelog.md 0.3.0 Add EnsureInside() to Transform Add EnsureInsideCanvas() to Transform Add auto canvas check and creation if required to Prefabs.InstantiateByGUID(), Prefabs.InstantiateFromResources() and Prefabs.InstantiateGameObject. Add SceneHierarchyWindow which has FrameObject(), FrameSelected() and GetInstance() methods. 0.4.0 Add NotoSans and NotoSansJP Unicode font 0.5.0 Add SafeAreaRenderer Rename fallback fonts"
  },
  "src/Animeska34.IO/Assets/CHANGELOG.html": {
    "href": "src/Animeska34.IO/Assets/CHANGELOG.html",
    "title": "IO Changelog | Animeska34 Docs",
    "keywords": "IO Changelog 1.0 Add File, Prefs 1.0.1 Fix references 1.1 Add autosave disabling feature; Now prefs not saving if values was't modified 1.2 Fix exception on attempting to save empty prefs. Add char support Add Clear() method, which allows to clear prefs. 2.0 Remove Prefs. Use ScenePrefs from com.animeska34.save instead Remove SceneLoader. Use SceneLoader from com.animeska34.sceneloading instead. Rename File to FileUtility to avoid confusing with System.IO.File Add com.animeska34.serialization.xml package support to FileUtility (FileUtility.WriteXML and FileUtility.ReadXML ) Add FileUtility.ReadBytes Add FileUtility.WriteBytes Add FileUtility.GetPath Add FileUtility.Exists Add FileUtility.CreatePath Add CryptoUtility for easier data encryption / decryption Add DeflateUtility for easier data compression / decompression Change default savePath from Application.persistentDataPath/Data to Application.persistentDataPath"
  },
  "src/Animeska34.InventorySystem/Readme.html": {
    "href": "src/Animeska34.InventorySystem/Readme.html",
    "title": "Inventory System | Animeska34 Docs",
    "keywords": "Inventory System API Reference Basic inventory system which allows to store items. Compatible with Save System. Getting Started Add InventoryManager to a scene. Note InventoryManager is a singleton class which is required for InventorySystem to operate 2. Create Item object from asset menu. 3. Set Item name Warning Item name must be unique. 4. Create ItemData from asset manu, and fill visualName, description, sprite and itemObject visualName - is name which displays to player description - is description of item sprite - is a item icon which will be displayed to player itemObjecct - is object, which will be instantiated, by calling Item.Instantiate(). Can be any prefab with ItemObject compoonent. Create ItemLibrary from asset menu Add created Item to created ItemLibrary. Add Inventory to your game object. Inventory Operations Put item to inventory: //Get inventory component from gameobject Inventory inventory = GetComponent<Inventory>(); //Put one item named \"item\" to inventory inventory.Put(\"item\"); //Put 10 \"stackable\" items to inventory: inventory.Put(\"stackable\", 10); //Put custom item to inventory //Get instance of item from \"InventoryManager\" and cast to item type Stackable item = (Stackable) InventoryManager.instance[\"itemName\"]; //Modify item properties item.SetQuantity(10); //Put item to inventory inventory.Put(item); Warning Inventory.Put(name, quantity) can only be used with StackabeItem type items. If you want to put few non-stackable items to inventory, use Inventory.PutMultiple(name, quantity) Warning Item which was put to Inventory is managed by that inventory. So do not call Destroy() on that item. Take item from inventory: //Get inventory component from gameobject Inventory inventory = GetComponent<Inventory>(); //Take one item named \"item\" from inventory inventory.Take(\"item\"); //Put 10 \"stackable\" items from inventory: inventory.Take(\"stackable\", 10); Warning Inventory.Take(name, quantity) can only be used with StackabeItem type items. Warning Item, taken from Inventory is no more managed by it. So should be destroyed manualy by calling Destroy(item) if it is not required any more. Remove item from inventory: //Get inventory component from gameobject Inventory inventory = GetComponent<Inventory>(); //Remove item named \"itemName\" from inventory inventory.Remove(\"itemName\"); //Remove 10 item named \"stackable\" from inventory inventory.Remove(\"stackable\", 10) Warning Inventory.Remove(name, quantity) can only be used with StackabeItem type items. Caution Item is ScriptableObject type, so is unmanaged. Do not forget to call Destroy() on item, which is not required anymore if it is not assigned to any inventory. Note Inventory automatically manages all items assigned to it. So there is no need to destroy items which is assigned to Inventory Create item at scene: //Get inventory component from gameobject Inventory inventory = GetComponent<Inventory>(); //Take item from inventory Item item = inventory.Take(\"itemName\"); //Instantiate it at scene item.Instantiate(); Warning Instantiated that way can be only item which has itemObject property assigned in ItemData. Creating custom item type Custom item type can be created by inheriting Item class. For example: //Create custom basic item type: public class MyCustomItem : Item { public int myCustomSerializableVariable = 5; } Note Besides inheriting Item type, also Stackable and Durable types can be inherited creating custom item. Serialization Inventory uses XML serialization. It works same way as Unity's 'JsonUtility': Automatically serializes all public variables. Note Private variables can be serialized by marking them with [SerializeField] attribute. Note Public and marked with [SerializeField] attribute variables can be ignored by marking with [XmlIgnore] attribute. Note Class can be serialized only if it marked with [System.Serializable] attribute"
  }
}